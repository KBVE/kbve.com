{"entry":{"id":"api.mdx","slug":"api","body":"\nimport Github from '@w/Github.astro';\nexport const components = { github: Github };\n\n## Docs\n\n- Official documentation will be provided for the API, we are currently going to base the API off of Strapi.\n\n---\n\n\n\n## Install\n\n- To help scale the API backend, we are also currently developing the backend cluster of both the API and the database that stores the information (MariaDB).\n  - Current Docker Compose for ve2\n    {' '}\n    <Github\n    \tsrc=\"data/api/ve2/docker-compose.yml\"\n    \tdescription=\"This is the current docker compose for a ve2 that runs our API.\"\n    />\n\n---\n\n## Uptime\n\n- ![API Uptime Badge](https://api.checklyhq.com/v1/badges/checks/206925a6-0f7b-4669-a4fd-b61b3f5b70fc?style=for-the-badge&theme=default&responseTime=true)\n\n---\n\n## Auth\n\n- Auth Journal\n  - For the core of the API, we will use JWT as the `key` in between the $User and $API.\n- React JSX\n  - The first mod will be the core auth system between the client $User and server $API, which includes the register and login. While we build it out, we will include generic defensive components into the foundation, then re-visit and apply external security, such as limits and firewalls (some may operate outside of the API).\n    - Cookie Storage (of the JWT)\n      - Cookie - `token` - will store the client $User JWT.\n      - Cookie - `user` - will store the client $User data.\n      - Library: `react-cookie` will be used to help maintain the cookies.\n\n---\n\n### Goal\n\nThe API is an unique construct that extends outside of the norm.\n\n---\n\n### REF\n\n- [1] - [API](https://kbve.com/project/api/)\n- [2] - [AR](https://kbve.com/project/ar/)\n- [3] - [Galaxia](https://kbve.com/project/galaxia/)\n- [4] - [RareIcon](https://kbve.com/project/rareicon/)\n- [5] - [Discord.sh](https://kbve.com/project/discord-sh/)\n- [6] - [RJ](https://kbve.com/project/rj/)\n- [7] - [RSPS](https://kbve.com/project/rsps/)\n- [8] - [Charles](https://kbve.com/project/charles/)`\n- [9] - [Search Engine](https://kbve.com/project/search-engine/)\n- [10] - [CityVote](https://kbve.com/project/cityvote/)\n- [11] - [Stream](https://kbve.com/project/stream/)","collection":"project","data":{"id":1,"layout":"../../layouts/theme/mdx.astro","title":"API","client":"Self","frontpage":true,"publishDate":"2020-03-02T00:00:00.000Z","img":"https://images.unsplash.com/photo-1658874919865-35bb32505edc?fit=crop&w=1400&h=700&q=75","description":"KBVE API - Central API for KBVE Projects.","tags":["design","dev","branding"],"repo":"kbve/api.kbve.com"}}}
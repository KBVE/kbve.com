{"entry":{"id":"roguejester.mdx","slug":"roguejester","body":"\n## Information\n\nWe are currently testing the Git LFS and the CI/CD for the Steam release.\nWe definitely think the dark and darker style but set in the cyberpunk future is the best way to describe the path the game will take.\n\n---\n\n## Ideas\n\n- Get Unity Assets for Robots NPC Bosses etc `low poly`\n- Add more levels to the game\n- Creating Levels - need ideas what kinda of levels and what assets to use\n- Borderlands is the TO-GO game\n- Improving AI - adding new state machines to the game so enemies are more interesting\n- Boss Fights\n- Game is in space We use Space SkyBox\n- Leveling Up System - MAX HP increases when player levels up\n- Talent Tree - TBD\n- Add MiniMap - UI\n- Upgrade System - Upgrade Weapons\n- New Weapons Added\n- New Classes Added - Each class got unique ability\n- SFX GunShots - `NO BGX`\n\n---\n\n## Errors\n\nCurrent errors for Rogue Jester that we need to resolve:\n\n### Build Error\n\nThese are the active build errors for the RJ application or CI/CD for the project.\n\n#### Build Error 1:\n\n```\n\n[error] Error: unrecognized project! Please check your app configuration - if this is a Unity application, We expect your \"Project Subdirectory\" to be set to the path which directly contains the ProjectSettings and Assets directories. For a native app, this should be set to the path which directly contains the project file (.xcodeproj, project.properties, etc).\n\n```\n\n\n### Application Error\n\nApplication Error 1:\n\n```\n\nError: Only Capsule and Sphere Colliders are supported by the Lean ability.\nUnityEngine.Debug:LogError (object)\nOpsive.UltimateCharacterController.FirstPersonController.Character.Abilities.Lean:Awake () (at Assets/Opsive/UltimateCharacterController/Scripts/FirstPersonController/Character/Abilities/Lean.cs:78)\nOpsive.UltimateCharacterController.Character.UltimateCharacterLocomotion:InitializeAbilities () (at Assets/Opsive/UltimateCharacterController/Scripts/Character/UltimateCharacterLocomotion.cs:340)\nOpsive.UltimateCharacterController.Character.UltimateCharacterLocomotion:AwakeInternal () (at Assets/Opsive/UltimateCharacterController/Scripts/Character/UltimateCharacterLocomotion.cs:301)\nOpsive.UltimateCharacterController.Character.CharacterLocomotion:Awake () (at Assets/Opsive/UltimateCharacterController/Scripts/Character/CharacterLocomotion.cs:310)\n\n```\n\n\nError 2:\n\n```\n\nError: Only Capsule and Sphere Colliders are supported by the Item Pullback ability.\nUnityEngine.Debug:LogError (object)\nOpsive.UltimateCharacterController.ThirdPersonController.Character.Abilities.Items.ItemPullback:Awake () (at Assets/Opsive/UltimateCharacterController/Scripts/ThirdPersonController/Character/Abilities/ItemAbilities/ItemPullback.cs:54)\nOpsive.UltimateCharacterController.Character.UltimateCharacterLocomotion:InitializeItemAbilities () (at Assets/Opsive/UltimateCharacterController/Scripts/Character/UltimateCharacterLocomotion.cs:366)\nOpsive.UltimateCharacterController.Character.UltimateCharacterLocomotion:AwakeInternal () (at Assets/Opsive/UltimateCharacterController/Scripts/Character/UltimateCharacterLocomotion.cs:302)\nOpsive.UltimateCharacterController.Character.CharacterLocomotion:Awake () (at Assets/Opsive/UltimateCharacterController/Scripts/Character/CharacterLocomotion.cs:310)\n\n```\n\nError 3:\n\n```\n\nUnassignedReferenceException: The variable m_AvailableModels of ModelManager has not been assigned.\nYou probably need to assign the m_AvailableModels variable of the ModelManager script in the inspector.\nOpsive.UltimateCharacterController.Character.ModelManager.Start () (at Assets/Opsive/UltimateCharacterController/Scripts/Character/ModelManager.cs:62)\n\n```\n\nError 4:\n\n```\n\nNullReferenceException: Object reference not set to an instance of an object\nOpsive.UltimateInventorySystem.UI.Currency.MultiCurrencyView.DrawCurrency (Opsive.UltimateInventorySystem.Exchange.CurrencyCollection currencyCollection) (at Assets/Opsive/UltimateInventorySystem/Scripts/UI/Currency/MultiCurrencyView.cs:62)\nOpsive.UltimateInventorySystem.UI.Monitors.CurrencyOwnerMonitor.CurrencyUpdate (Opsive.UltimateInventorySystem.Exchange.CurrencyOwnerBase currencyOwner) (at Assets/Opsive/UltimateInventorySystem/Scripts/UI/Monitors/CurrencyOwnerMonitor.cs:86)\nOpsive.UltimateInventorySystem.UI.Monitors.CurrencyOwnerMonitor.Initialize () (at Assets/Opsive/UltimateInventorySystem/Scripts/UI/Monitors/CurrencyOwnerMonitor.cs:63)\nOpsive.UltimateInventorySystem.UI.Monitors.CurrencyOwnerMonitor.Start () (at Assets/Opsive/UltimateInventorySystem/Scripts/UI/Monitors/CurrencyOwnerMonitor.cs:38)\n\n```\n\n### Closed\n\nThe issues and errors that have been closed.\n\n#### Unity Cloud Error 1\n\n`Unity Cloud Error 1` was the failure of the Unity DevOps / Build tools to automatically detect the current version of Unity that our project sent.\n\n```\nSomething went wrong when submitting your build(s)\nCould not auto Default Windows desktop 64-bit detect unity version. Failed to parse Unity Version from ProjectSettings/ProjectVersion.txt. Reason: The specified revision was not found serverpath:/ProjectSettings/ProjectVersion.txt#br:main@roguejester@KBVE@cloud\n\n```\n\n\n\n---\n\n## Integration\n\nServices and concepts that we would like to integrate `RJ` with.\n\n### Steam\n\nThese are the official Steam Tasks\n\n- [ ] Library Capsule\n\nLibrary Capsule \\*600px wide x 900px tall\n\n- `Design`: This should be graphically-centric and give the user some sense of the experience. Please use the key art that is being used for any retail boxes or marketing as well as the name of your game, ideally using the same logo / title as printed on any retail or marketing. Do not include quotes, marketing copy, or other strings of text beyond the title of your application. The art should depict something important about your product. The logo should be easily legible against the background.\n- `Usage`: This image is primarily used in the library overview and collection views\n- `Sizes`: 600px x 900px (an additional half-size 300px x 450px PNG will be auto-generated from larger file)\n\n- [ ] Library Hero\n\nLibrary Hero \\*3840px wide x 1240px tall\nThe hero graphic and logo are layered and move independently when the page is scrolled, creating a subtle parallax effect. Consider how the product logo will be placed on top of the hero image (left bottom corner or centered). You'll want to ensure the logo is both visible and legible against the background.\n\n- `Design`:\n  This should be a visually rich image that is easily recognizable. For best results, please use the key art that is used for any retail boxes or marketing. Do not include quotes or other strings of text.\n\nAt the center of the template is a \"safe area\" of 860px x 380px. This area will remain uncropped across scaling and resizing of the Steam client window. Artwork should extend across the entire template, but critical content should be within the safe area. For ex: a main character's face should be entirely in the safe area or risk being cropped.\n\n- `Usage`:\n  Appears at the top of a user's library details page for this product.\n\n- `Sizes`:\n  3840px x 1240px (an additional half-size 1920px x 620px PNG will be auto-generated from larger file)\n\n- [ ] Library Logo\n\nLibrary Logo \\*1280px wide x 720px tall\n\nAfter upload, you can use the preview tool to select the logo's position. Options include: left bottom corner, centered top, centered middle, and centered bottom.\n\nNote: If a hero graphic and logo are not uploaded, the hero area will display a screenshot from the store, with the application name in text overlaid in the bottom left corner.\n\n- `Design`:\n  For best results, use the logo that is being used for any retail boxes or marketing. You’ll want to ensure the logo is both visible and legible against the hero graphic background, sometimes a drop shadow can help. The PNG image should have a transparent background.\n\n- `Usage`:\n  Appears at the top of a user's library details page for this product, placed on top of the hero graphic.\n\n- `Sizes`:\n  1280px x 720px (an additional half-size 640 x 360px PNG will be auto-generated from larger file) Ensure that the logo extends the full width of the PNG, without extra padding.\n\n- [ ] Placement Tool\n\nThe four green anchor points relate to the four possible positions your logo can be pinned. Bottom-left, top center, mid-center, and bottom-center.\n\nIn most cases, the bottom-left position should be used.\n\nYou may want a centered logo if...\n\nYour logo is symmetrical or close to symmetrical or a logo that's contained in a circle.\nYour background header image has more of the interesting parts on the outside edges and the center has areas of rest.\nYour background header image is symmetrically balanced and positioning the logo in the bottom-left throws the balance off.\nOnce you have determined your logo position, use the blue logo box to size your logo appropriately. The blue box acts as a bounding box for the logo, it will not scale outside this box. The right edge of the blue box determines the maximum proportion the logo will scale to compared to the background hero graphic (this is useful if there is background art you don’t want the logo to overlap.) The top edge of the blue box determines the maximum size the logo will scale to (this is useful if you are finding the logo is too big when the window has been scaled up.)\n\nTypically you can take the top edge and leave it higher than the bounds of the logo. Play around with it and try scaling your window to get a sense for how your logo will adjust as the window scale changes.\n\nOnce you are happy with your logo position, proportion, and scale, hit the save button to commit your changes.\n\n### TODO\n\n- [x] ~Create `Concept` Issue Ticket~\n- [x] ~RogueJester - (init) - Start the initialization of RogueJester~\n- [x] ~Map out the ideas~\n- [x] Update SkyBox\n- [ ] h0lybyte: Integrate the React with Unity\n- [x] Player Level Up System(max level TBD)\n- [x] HP Getting Upgraded on Level\n- [x] Added Currency inside game(killed enemies drop currency)\n- [x] Currency is saved trought out scene\n- [ ] Added + 2 more levels(total levels 4)\n- [x] User Interface all the values are displayed on the screen or in the menu\n- [x] Main Menu (Modern Menu Designed)much more fun to interact with!\n- [x] LoginSceneDesign\n- [x] MainSceneDesign\n- [x] InGameMenu design and functionality\n- [x] Scaling UI in game for all devices\n- [x] Level SelectionScene and Functionality\n- [x] SceneFlow\n- [ ] Enemy Ai Improved\n- [ ] Upgrade System\n- [ ] Boss Fight\n- [ ] When player drops down he doesent die. Game needs to reset.\n- [ ] Mobile Controls movement adopted for android\n- [ ] Re-design Menu(so responsive for more platforms)\n- [ ] Move Gameplay Actions into Button for android usage\n- [ ] Displaying Stats in the game panel (TBD)\n- [ ] Inventory System\n- [ ] When player dies he loses items that he bring with him\n- [ ] Main Menu Inventory(player select what items to bring for the next level)\n- [ ] Inventory data values stored in JSON\n- [ ] New vfx for weapons\n- [ ] InventoryDisplaying in Menu\n\n### Boundary\n\n- h0lybyte: Level3\n- ZaneRage: Everything Else\n\n- Should create a header!\n\n### Theme Song\n\n- [Original Ticket for the Theme Song Idea](https://github.com/KBVE/kbve.com/issues/43)\n\nThe game will have one exclusive theme song, which we will refer to as `Going to Work`\n\nDescribe the music topic\nMusic Theory: \"Going to work\"\n\n00:00 : 00:30 - Intro Lofi Punk\n00:29 - 01:00 - Verse1 from PeacefulFire\n01:00 - 01:25 - Longer Chorus Phuck Work\n01:15 - 01:30 - Verse2 from PeacefulFire\n\nSample [1](https://www.youtube.com/watch?v=Wqb39YhgTgs)\n\nPeacefulFire\n\n```\n#I'm here for the company\n#Not here for the capital\n#Been agitate lately\n#Actually Anti-affable, maybe\n\n```\n\n---\n\n### Journal\n\n- Collective thoughts, concepts and ideas for the RogueJester FPS.\n- Ideas How to Convert 1. System.Text.Json namespace to convert C# objects to JSON and vice-versa.\n- Explained in this [link](https://www.tutorialsteacher.com/articles/convert-object-to-json-in-csharp#:~:text=The.NET%205%20framework%20provides%20the%20built-in%20JsonSerializer%20class,built-in%20JsonSerializer%20class%20that%20converts%20objects%20to%20JSON)\n- Thus, convert the JSON string to class object in C# using the `JsonSerializer.Deserialize () method`.\n\n## Steamworks\n\nI was looking through the notes and they recommend that we use SteaMworks SDK 1.53 aka Release 20.1.0\n\nFrom SteamWorks Github IO [Install](https://steamworks.github.io/installation/#unity-instructions)\n\nThey stated three options, A, B and C. I think we should go with Option A?\n\nOption A: `.unitypackage`\nDownload the .unitypackage from the Releases page on GitHub.\nImport everything into your project\n[Release](https://github.com/rlabrecque/Steamworks.NET/releases)\n\nSo I will grab the unitypackage and then proceed to import it.\n\nI wonder if I will need to apply to the Steam store to get an API key? Hmm.\n\nAs we wait, I will update the pipeline for the Windows build.\n\nSteam Store [Docs](https://partner.steamgames.com/doc/store)\n\nAfter reviewing the scopes that they provide, we are building the `demo` , just need to confirm that with external people.\n\n## Player Global Values\n\nOriginal as of 1.2.x\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing Unity.FPS.Game;\nusing UnityEngine;\n\npublic class GlobalValue : MonoBehaviour\n{\n    public static int PickPlayerID {\n        get { return PlayerPrefs.GetInt(\"PickPlayerID\", 0); }\n        set { PlayerPrefs.SetInt(\"PickPlayerID\", value); }\n    }\n\n    public static int SavedCoins\n    {\n        get { return PlayerPrefs.GetInt(\"Coins\", 0); }\n        set\n        {\n            PlayerPrefs.SetInt(\"Coins\", value);\n        }\n    }\n\n    public static float SavedCurrentExp\n    {\n        get { return PlayerPrefs.GetFloat(\"CurrentEXP\", 10); }\n        set\n        {\n            PlayerPrefs.SetFloat(\"CurrentEXP\", value);\n        }\n    }\n\n    public static int PlayerLevel\n    {\n        get { return PlayerPrefs.GetInt(\"PlayerLevel\", 1); }\n        set\n        {\n            PlayerPrefs.SetInt(\"PlayerLevel\", value);\n        }\n    }\n\n    public static float MaxHp\n    {\n        get { return PlayerPrefs.GetFloat(\"PlayerMaxHp\", 100); }\n        set\n        {\n            PlayerPrefs.SetFloat(\"PlayerMaxHp\", value);\n        }\n    }\n\n}\n```\n\nI am thinking we can add these to the PlayerPrefs\n\n```c#\n\n    public static string PlayerName {\n        get {   return PlayerPrefs.GetString(\"PlayerName\", \"Guest\");   }\n        set {   PlayerPrefs.SetString(\"PlayerName\", value);   }\n    }\n\n```\n\nCan you do nested functions?\n\n```c#\n\n    public static string _pN {\n        get { return PlayerName(); }\n        set { PlayerName(); }\n    }\n\n```\n\nI will test case these tonight, when I get a chance to mess around with after the main branch builds.\n\nOkay so I went ahead and added a couple more things to the `GlobalValue.cs` file:\n\nLets start with the PlayerName, PlayerJWT and PlayerEmail\n\n```c#\n    public static string PlayerName {\n        get {   return PlayerPrefs.GetString(\"PlayerName\", \"Guest\");   }\n        set {   PlayerPrefs.SetString(\"PlayerName\", value);   }\n    }\n\n    public static string PlayerJWT {\n        get {   return PlayerPrefs.GetString(\"PlayerJWT\", \"Guest\");   }\n        set {   PlayerPrefs.SetString(\"PlayerJWT\", value);   }\n    }\n\n    public static string PlayerEmail {\n        get {   return PlayerPrefs.GetString(\"PlayerEmail\", \"Guest\");   }\n        set {   PlayerPrefs.SetString(\"PlayerEmail\", value);   }\n    }\n```\n\nSo would we call them like this?\n\n```c#\n\n//1\nGlobalValue.PlayerJWT.Set(\"JWTHere\");\n\n//2\nGlobalValue.PlayerJWT = \"JWTHere\";\n\n//3\nGlobalValue.PlayerJWT.set(\"JWTHere?\");\n\n```\n\nNow I am thinking it might be `//2` based upon what the other references to GlobalValue, so I suppose we could try.\n\nI will also change the `PlayerName`\n\nfunction to PlayerUsername , to keep within the naming flow.\n\nAlso do we need to call PlayerPrefs.Save();\n\n? Does GlobalValue already do that?\n\n## J7\n\nWe decided to remove almost all of the Unity MicroFPS codebase and introduced Opsive controller / inventory system.\n\nThe reason we decided to switch over is because it will speed up development and resolve some of the cosmetic / physics / animation / logic issues that we are currently facing.\n\nI believe majority of this week will be spent on focusing on integrating both Opsive plugins into the game. Thus all of Patch 1.2.x will be towards getting everything for the player done.\n\n## Error inside the GameManager\n\nSo we were working on the pipeline, durning the development hell that is Unity, and ran into a \"Build\" success but a \"Build and Run\" failure.\nWe spent some time re-merging the base, switching branches, thinking it might be a cluster of different issues.\nSilver comes in clutch and finds out that there was a `duplicate on GameManager Prefab Replacer , 2 of the same script on same object`.\n\n## J6\n\n- Had an issue with the basing earlier in the day. We will split the branches further, to avoid conflicts and issues when rebasing / merging branches.\n- When migrating from the public to private repo, there were some issues with `secrets` and CI/CD, these issues are still open and should be resolved this week.\n\n## J5\n\n- 11/15/2022\n- Had an issue with the basing earlier in the day. We will split the branches further, to avoid conflicts and issues when rebasing / merging branches.\n- When migrating from the public to private repo, there were some issues with `secrets` and CI/CD, these issues are still open and should be resolved this week.\n\n## J4\n\n- 11/14/2022\n  - Improving the UI/UX\n  - Expanding Character Stats\n\n## Patch 1.2.x\n\n- 11/13/2022\n  - Start expanding the assets inside the game and work with some core logic.\n\n## Patch 1.1\n\n- 11/12/2022\n  - ZaneRage and h0lybyte did the basics the idea / concept.\n  - New asset models for the 3D robot soldiers.\n  - Added several more assets to the game!\n\n## First Official Entry\n\nWe should make it so that the Unity pulls this information and displays it onto the Menu -> Patch.\n\n### Scene\n\n0. LoginMenu\n1. IntroMenu\n2. WInScene\n3. LoseScene\n4. MainScene\n5. SecondaryScene\n6. LevelSelection\n\n### Assets\n\n- This is a full breakdown of the assets that we are using in RogueJester FPS. We will keep the credits and a semi-active list of all the components that we are using.\n\n#### SkyBox\n\n- SkyBox provides us with a visual background.\n- Asset: [SkyBox Vol 2](https://assetstore.unity.com/packages/2d/textures-materials/sky/skybox-volume-2-nebula-3392)\n  ZaneRage: Adding the Asset\n\n#### Search\n\n- Quick [Search](https://assetstore.unity.com/?category=3d%2Fcharacters%2Frobots&free=true&orderBy=1) on the Unity Assets page for FREE\\* 3D Characters -> Robots\n\n#### 3D Robot Solider\n\n- Official [Link](https://assetstore.unity.com/packages/3d/characters/robots/robot-soldier-142438)\n- ZaneRage: those are soo cool for enemies\n- h0lybyte: Okay, I will grab and commit them for Patch 1.2.x\n\n#### UAV Trident\n\n- Official [Link](https://assetstore.unity.com/packages/3d/vehicles/space/uav-trident-46128)\n\n#### Combat Drone\n\n- Official [Link](https://assetstore.unity.com/packages/3d/low-poly-combat-drone-82234)\n\n#### Spider Orange\n\n- Official [Link](https://assetstore.unity.com/packages/3d/characters/robots/spider-orange-181154)\n\n#### Robot Metallic Humanoid\n\n- Official [Link](https://assetstore.unity.com/packages/3d/characters/robots/robot-metallic-humanoid-171295)\n\n#### Sentry 3D Robot\n\n- Official [Link](https://assetstore.unity.com/packages/3d/characters/robots/sentry-robot-222899)\n\n#### Robot 3D Sphere\n\n- Official [Link](https://assetstore.unity.com/packages/3d/characters/robots/robot-sphere-136226)\n","collection":"project","data":{"id":6,"layout":"../../layouts/theme/mdx.astro","title":"Rogue Jester","client":"Self","publishDate":"2020-03-04T00:00:00.000Z","status":true,"img":"https://images.unsplash.com/photo-1603994236406-bf7f71dc361e?fit=crop&w=1400&h=700&q=75","description":"Rogue Jester is a Rogue-like FPS that we are building to learn more about Unity.","tags":["unity","unity-webgl","gaming","fps","roguejester"]}}}
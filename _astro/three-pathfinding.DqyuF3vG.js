import{g as Wi}from"./@react-three.BOv1JqT7.js";/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ri="164",Ge=0,Hi=1,Qe=1,Ke=100,ti=204,ei=205,ii=3,Xi=0,Pi=300,si=1e3,Kt=1001,ni=1002,ri=1003,Gi=1006,Zi=1008,Yi=1009,$i=1014,Ji=1015,ji=1020,Qi=1023,Se=1026,oi=1027,Di="",dt="srgb",$e="srgb-linear",Ki="display-p3",Ni="display-p3-linear",Ze="linear",ai="srgb",hi="rec709",li="p3",zt=7680,ci=519,ts=515,ui=35044,te=2e3,di=2001;class Ae{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let n=0,r=s.length;n<r;n++)s[n].call(this,t);t.target=null}}}const P=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function Zt(){const f=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(P[f&255]+P[f>>8&255]+P[f>>16&255]+P[f>>24&255]+"-"+P[t&255]+P[t>>8&255]+"-"+P[t>>16&15|64]+P[t>>24&255]+"-"+P[e&63|128]+P[e>>8&255]+"-"+P[e>>16&255]+P[e>>24&255]+P[i&255]+P[i>>8&255]+P[i>>16&255]+P[i>>24&255]).toLowerCase()}function O(f,t,e){return Math.max(t,Math.min(e,f))}function es(f,t){return(f%t+t)%t}function Fe(f,t,e){return(1-e)*f+e*t}function qt(f,t){switch(t.constructor){case Float32Array:return f;case Uint32Array:return f/4294967295;case Uint16Array:return f/65535;case Uint8Array:return f/255;case Int32Array:return Math.max(f/2147483647,-1);case Int16Array:return Math.max(f/32767,-1);case Int8Array:return Math.max(f/127,-1);default:throw new Error("Invalid component type.")}}function N(f,t){switch(t.constructor){case Float32Array:return f;case Uint32Array:return Math.round(f*4294967295);case Uint16Array:return Math.round(f*65535);case Uint8Array:return Math.round(f*255);case Int32Array:return Math.round(f*2147483647);case Int16Array:return Math.round(f*32767);case Int8Array:return Math.round(f*127);default:throw new Error("Invalid component type.")}}class q{constructor(t=0,e=0){q.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(O(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),n=this.x-t.x,r=this.y-t.y;return this.x=n*i-r*s+t.x,this.y=n*s+r*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class rt{constructor(t,e,i,s,n,r,a,o,h){rt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,a,o,h)}set(t,e,i,s,n,r,a,o,h){const l=this.elements;return l[0]=t,l[1]=s,l[2]=a,l[3]=e,l[4]=n,l[5]=o,l[6]=i,l[7]=r,l[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],a=i[3],o=i[6],h=i[1],l=i[4],c=i[7],d=i[2],u=i[5],p=i[8],m=s[0],y=s[3],g=s[6],w=s[1],_=s[4],b=s[7],M=s[2],A=s[5],z=s[8];return n[0]=r*m+a*w+o*M,n[3]=r*y+a*_+o*A,n[6]=r*g+a*b+o*z,n[1]=h*m+l*w+c*M,n[4]=h*y+l*_+c*A,n[7]=h*g+l*b+c*z,n[2]=d*m+u*w+p*M,n[5]=d*y+u*_+p*A,n[8]=d*g+u*b+p*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],a=t[5],o=t[6],h=t[7],l=t[8];return e*r*l-e*a*h-i*n*l+i*a*o+s*n*h-s*r*o}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],a=t[5],o=t[6],h=t[7],l=t[8],c=l*r-a*h,d=a*o-l*n,u=h*n-r*o,p=e*c+i*d+s*u;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return t[0]=c*m,t[1]=(s*h-l*i)*m,t[2]=(a*i-s*r)*m,t[3]=d*m,t[4]=(l*e-s*o)*m,t[5]=(s*n-a*e)*m,t[6]=u*m,t[7]=(i*o-h*e)*m,t[8]=(r*e-i*n)*m,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,n,r,a){const o=Math.cos(n),h=Math.sin(n);return this.set(i*o,i*h,-i*(o*r+h*a)+r+t,-s*h,s*o,-s*(-h*r+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Te.makeScale(t,e)),this}rotate(t){return this.premultiply(Te.makeRotation(-t)),this}translate(t,e){return this.premultiply(Te.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Te=new rt;function is(f){for(let t=f.length-1;t>=0;--t)if(f[t]>=65535)return!0;return!1}function pi(f){return document.createElementNS("http://www.w3.org/1999/xhtml",f)}const mi={};function ss(f){f in mi||(mi[f]=!0,console.warn(f))}const fi=new rt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),yi=new rt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),ee={[$e]:{transfer:Ze,primaries:hi,toReference:f=>f,fromReference:f=>f},[dt]:{transfer:ai,primaries:hi,toReference:f=>f.convertSRGBToLinear(),fromReference:f=>f.convertLinearToSRGB()},[Ni]:{transfer:Ze,primaries:li,toReference:f=>f.applyMatrix3(yi),fromReference:f=>f.applyMatrix3(fi)},[Ki]:{transfer:ai,primaries:li,toReference:f=>f.convertSRGBToLinear().applyMatrix3(yi),fromReference:f=>f.applyMatrix3(fi).convertLinearToSRGB()}},ns=new Set([$e,Ni]),G={enabled:!0,_workingColorSpace:$e,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(f){if(!ns.has(f))throw new Error(`Unsupported working color space, "${f}".`);this._workingColorSpace=f},convert:function(f,t,e){if(this.enabled===!1||t===e||!t||!e)return f;const i=ee[t].toReference,s=ee[e].fromReference;return s(i(f))},fromWorkingColorSpace:function(f,t){return this.convert(f,this._workingColorSpace,t)},toWorkingColorSpace:function(f,t){return this.convert(f,t,this._workingColorSpace)},getPrimaries:function(f){return ee[f].primaries},getTransfer:function(f){return f===Di?Ze:ee[f].transfer}};function Ot(f){return f<.04045?f*.0773993808:Math.pow(f*.9478672986+.0521327014,2.4)}function Be(f){return f<.0031308?f*12.92:1.055*Math.pow(f,.41666)-.055}let At;class rs{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{At===void 0&&(At=pi("canvas")),At.width=t.width,At.height=t.height;const i=At.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=At}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=pi("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),n=s.data;for(let r=0;r<n.length;r++)n[r]=Ot(n[r]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(Ot(e[i]/255)*255):e[i]=Ot(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let os=0;class as{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:os++}),this.uuid=Zt(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let r=0,a=s.length;r<a;r++)s[r].isDataTexture?n.push(Ce(s[r].image)):n.push(Ce(s[r]))}else n=Ce(s);i.url=n}return e||(t.images[this.uuid]=i),i}}function Ce(f){return typeof HTMLImageElement<"u"&&f instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&f instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&f instanceof ImageBitmap?rs.getDataURL(f):f.data?{data:Array.from(f.data),width:f.width,height:f.height,type:f.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let hs=0;class pt extends Ae{constructor(t=pt.DEFAULT_IMAGE,e=pt.DEFAULT_MAPPING,i=Kt,s=Kt,n=Gi,r=Zi,a=Qi,o=Yi,h=pt.DEFAULT_ANISOTROPY,l=Di){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:hs++}),this.uuid=Zt(),this.name="",this.source=new as(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=n,this.minFilter=r,this.anisotropy=h,this.format=a,this.internalFormat=null,this.type=o,this.offset=new q(0,0),this.repeat=new q(1,1),this.center=new q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new rt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Pi)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case si:t.x=t.x-Math.floor(t.x);break;case Kt:t.x=t.x<0?0:1;break;case ni:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case si:t.y=t.y-Math.floor(t.y);break;case Kt:t.y=t.y<0?0:1;break;case ni:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}pt.DEFAULT_IMAGE=null;pt.DEFAULT_MAPPING=Pi;pt.DEFAULT_ANISOTROPY=1;class Yt{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,n,r,a){let o=i[s+0],h=i[s+1],l=i[s+2],c=i[s+3];const d=n[r+0],u=n[r+1],p=n[r+2],m=n[r+3];if(a===0){t[e+0]=o,t[e+1]=h,t[e+2]=l,t[e+3]=c;return}if(a===1){t[e+0]=d,t[e+1]=u,t[e+2]=p,t[e+3]=m;return}if(c!==m||o!==d||h!==u||l!==p){let y=1-a;const g=o*d+h*u+l*p+c*m,w=g>=0?1:-1,_=1-g*g;if(_>Number.EPSILON){const M=Math.sqrt(_),A=Math.atan2(M,g*w);y=Math.sin(y*A)/M,a=Math.sin(a*A)/M}const b=a*w;if(o=o*y+d*b,h=h*y+u*b,l=l*y+p*b,c=c*y+m*b,y===1-a){const M=1/Math.sqrt(o*o+h*h+l*l+c*c);o*=M,h*=M,l*=M,c*=M}}t[e]=o,t[e+1]=h,t[e+2]=l,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,s,n,r){const a=i[s],o=i[s+1],h=i[s+2],l=i[s+3],c=n[r],d=n[r+1],u=n[r+2],p=n[r+3];return t[e]=a*p+l*c+o*u-h*d,t[e+1]=o*p+l*d+h*c-a*u,t[e+2]=h*p+l*u+a*d-o*c,t[e+3]=l*p-a*c-o*d-h*u,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,s=t._y,n=t._z,r=t._order,a=Math.cos,o=Math.sin,h=a(i/2),l=a(s/2),c=a(n/2),d=o(i/2),u=o(s/2),p=o(n/2);switch(r){case"XYZ":this._x=d*l*c+h*u*p,this._y=h*u*c-d*l*p,this._z=h*l*p+d*u*c,this._w=h*l*c-d*u*p;break;case"YXZ":this._x=d*l*c+h*u*p,this._y=h*u*c-d*l*p,this._z=h*l*p-d*u*c,this._w=h*l*c+d*u*p;break;case"ZXY":this._x=d*l*c-h*u*p,this._y=h*u*c+d*l*p,this._z=h*l*p+d*u*c,this._w=h*l*c-d*u*p;break;case"ZYX":this._x=d*l*c-h*u*p,this._y=h*u*c+d*l*p,this._z=h*l*p-d*u*c,this._w=h*l*c+d*u*p;break;case"YZX":this._x=d*l*c+h*u*p,this._y=h*u*c+d*l*p,this._z=h*l*p-d*u*c,this._w=h*l*c-d*u*p;break;case"XZY":this._x=d*l*c-h*u*p,this._y=h*u*c-d*l*p,this._z=h*l*p+d*u*c,this._w=h*l*c+d*u*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],n=e[8],r=e[1],a=e[5],o=e[9],h=e[2],l=e[6],c=e[10],d=i+a+c;if(d>0){const u=.5/Math.sqrt(d+1);this._w=.25/u,this._x=(l-o)*u,this._y=(n-h)*u,this._z=(r-s)*u}else if(i>a&&i>c){const u=2*Math.sqrt(1+i-a-c);this._w=(l-o)/u,this._x=.25*u,this._y=(s+r)/u,this._z=(n+h)/u}else if(a>c){const u=2*Math.sqrt(1+a-i-c);this._w=(n-h)/u,this._x=(s+r)/u,this._y=.25*u,this._z=(o+l)/u}else{const u=2*Math.sqrt(1+c-i-a);this._w=(r-s)/u,this._x=(n+h)/u,this._y=(o+l)/u,this._z=.25*u}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(O(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,n=t._z,r=t._w,a=e._x,o=e._y,h=e._z,l=e._w;return this._x=i*l+r*a+s*h-n*o,this._y=s*l+r*o+n*a-i*h,this._z=n*l+r*h+i*o-s*a,this._w=r*l-i*a-s*o-n*h,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,n=this._z,r=this._w;let a=r*t._w+i*t._x+s*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=r,this._x=i,this._y=s,this._z=n,this;const o=1-a*a;if(o<=Number.EPSILON){const u=1-e;return this._w=u*r+e*this._w,this._x=u*i+e*this._x,this._y=u*s+e*this._y,this._z=u*n+e*this._z,this.normalize(),this}const h=Math.sqrt(o),l=Math.atan2(h,a),c=Math.sin((1-e)*l)/h,d=Math.sin(e*l)/h;return this._w=r*c+this._w*d,this._x=i*c+this._x*d,this._y=s*c+this._y*d,this._z=n*c+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),n=Math.sqrt(i);return this.set(s*Math.sin(t),s*Math.cos(t),n*Math.sin(e),n*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class x{constructor(t=0,e=0,i=0){x.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(xi.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(xi.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*s,this.y=n[1]*e+n[4]*i+n[7]*s,this.z=n[2]*e+n[5]*i+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=t.elements,r=1/(n[3]*e+n[7]*i+n[11]*s+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*s+n[12])*r,this.y=(n[1]*e+n[5]*i+n[9]*s+n[13])*r,this.z=(n[2]*e+n[6]*i+n[10]*s+n[14])*r,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,n=t.x,r=t.y,a=t.z,o=t.w,h=2*(r*s-a*i),l=2*(a*e-n*s),c=2*(n*i-r*e);return this.x=e+o*h+r*c-a*l,this.y=i+o*l+a*h-n*c,this.z=s+o*c+n*l-r*h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s,this.y=n[1]*e+n[5]*i+n[9]*s,this.z=n[2]*e+n[6]*i+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,n=t.z,r=e.x,a=e.y,o=e.z;return this.x=s*o-n*a,this.y=n*r-i*o,this.z=i*a-s*r,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return ke.copy(this).projectOnVector(t),this.sub(ke)}reflect(t){return this.sub(ke.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(O(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ke=new x,xi=new Yt;class $t{constructor(t=new x(1/0,1/0,1/0),e=new x(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(Z.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(Z.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=Z.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const n=i.getAttribute("position");if(e===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let r=0,a=n.count;r<a;r++)t.isMesh===!0?t.getVertexPosition(r,Z):Z.fromBufferAttribute(n,r),Z.applyMatrix4(t.matrixWorld),this.expandByPoint(Z);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),ie.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),ie.copy(i.boundingBox)),ie.applyMatrix4(t.matrixWorld),this.union(ie)}const s=t.children;for(let n=0,r=s.length;n<r;n++)this.expandByObject(s[n],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Z),Z.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Lt),se.subVectors(this.max,Lt),St.subVectors(t.a,Lt),Ft.subVectors(t.b,Lt),Tt.subVectors(t.c,Lt),at.subVectors(Ft,St),ht.subVectors(Tt,Ft),gt.subVectors(St,Tt);let e=[0,-at.z,at.y,0,-ht.z,ht.y,0,-gt.z,gt.y,at.z,0,-at.x,ht.z,0,-ht.x,gt.z,0,-gt.x,-at.y,at.x,0,-ht.y,ht.x,0,-gt.y,gt.x,0];return!Ee(e,St,Ft,Tt,se)||(e=[1,0,0,0,1,0,0,0,1],!Ee(e,St,Ft,Tt,se))?!1:(ne.crossVectors(at,ht),e=[ne.x,ne.y,ne.z],Ee(e,St,Ft,Tt,se))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Z).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Z).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(tt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),tt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),tt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),tt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),tt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),tt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),tt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),tt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(tt),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const tt=[new x,new x,new x,new x,new x,new x,new x,new x],Z=new x,ie=new $t,St=new x,Ft=new x,Tt=new x,at=new x,ht=new x,gt=new x,Lt=new x,se=new x,ne=new x,bt=new x;function Ee(f,t,e,i,s){for(let n=0,r=f.length-3;n<=r;n+=3){bt.fromArray(f,n);const a=s.x*Math.abs(bt.x)+s.y*Math.abs(bt.y)+s.z*Math.abs(bt.z),o=t.dot(bt),h=e.dot(bt),l=i.dot(bt);if(Math.max(-Math.max(o,h,l),Math.min(o,h,l))>a)return!1}return!0}const ls=new $t,Vt=new x,ve=new x;class Je{constructor(t=new x,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):ls.setFromPoints(t).getCenter(i);let s=0;for(let n=0,r=t.length;n<r;n++)s=Math.max(s,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Vt.subVectors(t,this.center);const e=Vt.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(Vt,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(ve.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Vt.copy(t.center).add(ve)),this.expandByPoint(Vt.copy(t.center).sub(ve))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const et=new x,Ie=new x,re=new x,lt=new x,Re=new x,oe=new x,Pe=new x;class Oi{constructor(t=new x,e=new x(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,et)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=et.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(et.copy(this.origin).addScaledVector(this.direction,e),et.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){Ie.copy(t).add(e).multiplyScalar(.5),re.copy(e).sub(t).normalize(),lt.copy(this.origin).sub(Ie);const n=t.distanceTo(e)*.5,r=-this.direction.dot(re),a=lt.dot(this.direction),o=-lt.dot(re),h=lt.lengthSq(),l=Math.abs(1-r*r);let c,d,u,p;if(l>0)if(c=r*o-a,d=r*a-o,p=n*l,c>=0)if(d>=-p)if(d<=p){const m=1/l;c*=m,d*=m,u=c*(c+r*d+2*a)+d*(r*c+d+2*o)+h}else d=n,c=Math.max(0,-(r*d+a)),u=-c*c+d*(d+2*o)+h;else d=-n,c=Math.max(0,-(r*d+a)),u=-c*c+d*(d+2*o)+h;else d<=-p?(c=Math.max(0,-(-r*n+a)),d=c>0?-n:Math.min(Math.max(-n,-o),n),u=-c*c+d*(d+2*o)+h):d<=p?(c=0,d=Math.min(Math.max(-n,-o),n),u=d*(d+2*o)+h):(c=Math.max(0,-(r*n+a)),d=c>0?n:Math.min(Math.max(-n,-o),n),u=-c*c+d*(d+2*o)+h);else d=r>0?-n:n,c=Math.max(0,-(r*d+a)),u=-c*c+d*(d+2*o)+h;return i&&i.copy(this.origin).addScaledVector(this.direction,c),s&&s.copy(Ie).addScaledVector(re,d),u}intersectSphere(t,e){et.subVectors(t.center,this.origin);const i=et.dot(this.direction),s=et.dot(et)-i*i,n=t.radius*t.radius;if(s>n)return null;const r=Math.sqrt(n-s),a=i-r,o=i+r;return o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,n,r,a,o;const h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,d=this.origin;return h>=0?(i=(t.min.x-d.x)*h,s=(t.max.x-d.x)*h):(i=(t.max.x-d.x)*h,s=(t.min.x-d.x)*h),l>=0?(n=(t.min.y-d.y)*l,r=(t.max.y-d.y)*l):(n=(t.max.y-d.y)*l,r=(t.min.y-d.y)*l),i>r||n>s||((n>i||isNaN(i))&&(i=n),(r<s||isNaN(s))&&(s=r),c>=0?(a=(t.min.z-d.z)*c,o=(t.max.z-d.z)*c):(a=(t.max.z-d.z)*c,o=(t.min.z-d.z)*c),i>o||a>s)||((a>i||i!==i)&&(i=a),(o<s||s!==s)&&(s=o),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,et)!==null}intersectTriangle(t,e,i,s,n){Re.subVectors(e,t),oe.subVectors(i,t),Pe.crossVectors(Re,oe);let r=this.direction.dot(Pe),a;if(r>0){if(s)return null;a=1}else if(r<0)a=-1,r=-r;else return null;lt.subVectors(this.origin,t);const o=a*this.direction.dot(oe.crossVectors(lt,oe));if(o<0)return null;const h=a*this.direction.dot(Re.cross(lt));if(h<0||o+h>r)return null;const l=-a*lt.dot(Pe);return l<0?null:this.at(l/r,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class H{constructor(t,e,i,s,n,r,a,o,h,l,c,d,u,p,m,y){H.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,a,o,h,l,c,d,u,p,m,y)}set(t,e,i,s,n,r,a,o,h,l,c,d,u,p,m,y){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=s,g[1]=n,g[5]=r,g[9]=a,g[13]=o,g[2]=h,g[6]=l,g[10]=c,g[14]=d,g[3]=u,g[7]=p,g[11]=m,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new H().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/Bt.setFromMatrixColumn(t,0).length(),n=1/Bt.setFromMatrixColumn(t,1).length(),r=1/Bt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*r,e[9]=i[9]*r,e[10]=i[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,n=t.z,r=Math.cos(i),a=Math.sin(i),o=Math.cos(s),h=Math.sin(s),l=Math.cos(n),c=Math.sin(n);if(t.order==="XYZ"){const d=r*l,u=r*c,p=a*l,m=a*c;e[0]=o*l,e[4]=-o*c,e[8]=h,e[1]=u+p*h,e[5]=d-m*h,e[9]=-a*o,e[2]=m-d*h,e[6]=p+u*h,e[10]=r*o}else if(t.order==="YXZ"){const d=o*l,u=o*c,p=h*l,m=h*c;e[0]=d+m*a,e[4]=p*a-u,e[8]=r*h,e[1]=r*c,e[5]=r*l,e[9]=-a,e[2]=u*a-p,e[6]=m+d*a,e[10]=r*o}else if(t.order==="ZXY"){const d=o*l,u=o*c,p=h*l,m=h*c;e[0]=d-m*a,e[4]=-r*c,e[8]=p+u*a,e[1]=u+p*a,e[5]=r*l,e[9]=m-d*a,e[2]=-r*h,e[6]=a,e[10]=r*o}else if(t.order==="ZYX"){const d=r*l,u=r*c,p=a*l,m=a*c;e[0]=o*l,e[4]=p*h-u,e[8]=d*h+m,e[1]=o*c,e[5]=m*h+d,e[9]=u*h-p,e[2]=-h,e[6]=a*o,e[10]=r*o}else if(t.order==="YZX"){const d=r*o,u=r*h,p=a*o,m=a*h;e[0]=o*l,e[4]=m-d*c,e[8]=p*c+u,e[1]=c,e[5]=r*l,e[9]=-a*l,e[2]=-h*l,e[6]=u*c+p,e[10]=d-m*c}else if(t.order==="XZY"){const d=r*o,u=r*h,p=a*o,m=a*h;e[0]=o*l,e[4]=-c,e[8]=h*l,e[1]=d*c+m,e[5]=r*l,e[9]=u*c-p,e[2]=p*c-u,e[6]=a*l,e[10]=m*c+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(cs,t,us)}lookAt(t,e,i){const s=this.elements;return V.subVectors(t,e),V.lengthSq()===0&&(V.z=1),V.normalize(),ct.crossVectors(i,V),ct.lengthSq()===0&&(Math.abs(i.z)===1?V.x+=1e-4:V.z+=1e-4,V.normalize(),ct.crossVectors(i,V)),ct.normalize(),ae.crossVectors(V,ct),s[0]=ct.x,s[4]=ae.x,s[8]=V.x,s[1]=ct.y,s[5]=ae.y,s[9]=V.y,s[2]=ct.z,s[6]=ae.z,s[10]=V.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],a=i[4],o=i[8],h=i[12],l=i[1],c=i[5],d=i[9],u=i[13],p=i[2],m=i[6],y=i[10],g=i[14],w=i[3],_=i[7],b=i[11],M=i[15],A=s[0],z=s[4],S=s[8],B=s[12],C=s[1],k=s[5],j=s[9],E=s[13],Q=s[2],K=s[6],_t=s[10],xt=s[14],ot=s[3],I=s[7],R=s[11],L=s[15];return n[0]=r*A+a*C+o*Q+h*ot,n[4]=r*z+a*k+o*K+h*I,n[8]=r*S+a*j+o*_t+h*R,n[12]=r*B+a*E+o*xt+h*L,n[1]=l*A+c*C+d*Q+u*ot,n[5]=l*z+c*k+d*K+u*I,n[9]=l*S+c*j+d*_t+u*R,n[13]=l*B+c*E+d*xt+u*L,n[2]=p*A+m*C+y*Q+g*ot,n[6]=p*z+m*k+y*K+g*I,n[10]=p*S+m*j+y*_t+g*R,n[14]=p*B+m*E+y*xt+g*L,n[3]=w*A+_*C+b*Q+M*ot,n[7]=w*z+_*k+b*K+M*I,n[11]=w*S+_*j+b*_t+M*R,n[15]=w*B+_*E+b*xt+M*L,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],n=t[12],r=t[1],a=t[5],o=t[9],h=t[13],l=t[2],c=t[6],d=t[10],u=t[14],p=t[3],m=t[7],y=t[11],g=t[15];return p*(+n*o*c-s*h*c-n*a*d+i*h*d+s*a*u-i*o*u)+m*(+e*o*u-e*h*d+n*r*d-s*r*u+s*h*l-n*o*l)+y*(+e*h*c-e*a*u-n*r*c+i*r*u+n*a*l-i*h*l)+g*(-s*a*l-e*o*c+e*a*d+s*r*c-i*r*d+i*o*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],a=t[5],o=t[6],h=t[7],l=t[8],c=t[9],d=t[10],u=t[11],p=t[12],m=t[13],y=t[14],g=t[15],w=c*y*h-m*d*h+m*o*u-a*y*u-c*o*g+a*d*g,_=p*d*h-l*y*h-p*o*u+r*y*u+l*o*g-r*d*g,b=l*m*h-p*c*h+p*a*u-r*m*u-l*a*g+r*c*g,M=p*c*o-l*m*o-p*a*d+r*m*d+l*a*y-r*c*y,A=e*w+i*_+s*b+n*M;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const z=1/A;return t[0]=w*z,t[1]=(m*d*n-c*y*n-m*s*u+i*y*u+c*s*g-i*d*g)*z,t[2]=(a*y*n-m*o*n+m*s*h-i*y*h-a*s*g+i*o*g)*z,t[3]=(c*o*n-a*d*n-c*s*h+i*d*h+a*s*u-i*o*u)*z,t[4]=_*z,t[5]=(l*y*n-p*d*n+p*s*u-e*y*u-l*s*g+e*d*g)*z,t[6]=(p*o*n-r*y*n-p*s*h+e*y*h+r*s*g-e*o*g)*z,t[7]=(r*d*n-l*o*n+l*s*h-e*d*h-r*s*u+e*o*u)*z,t[8]=b*z,t[9]=(p*c*n-l*m*n-p*i*u+e*m*u+l*i*g-e*c*g)*z,t[10]=(r*m*n-p*a*n+p*i*h-e*m*h-r*i*g+e*a*g)*z,t[11]=(l*a*n-r*c*n-l*i*h+e*c*h+r*i*u-e*a*u)*z,t[12]=M*z,t[13]=(l*m*s-p*c*s+p*i*d-e*m*d-l*i*y+e*c*y)*z,t[14]=(p*a*s-r*m*s-p*i*o+e*m*o+r*i*y-e*a*y)*z,t[15]=(r*c*s-l*a*s+l*i*o-e*c*o-r*i*d+e*a*d)*z,this}scale(t){const e=this.elements,i=t.x,s=t.y,n=t.z;return e[0]*=i,e[4]*=s,e[8]*=n,e[1]*=i,e[5]*=s,e[9]*=n,e[2]*=i,e[6]*=s,e[10]*=n,e[3]*=i,e[7]*=s,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),n=1-i,r=t.x,a=t.y,o=t.z,h=n*r,l=n*a;return this.set(h*r+i,h*a-s*o,h*o+s*a,0,h*a+s*o,l*a+i,l*o-s*r,0,h*o-s*a,l*o+s*r,n*o*o+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,n,r){return this.set(1,i,n,0,t,1,r,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,n=e._x,r=e._y,a=e._z,o=e._w,h=n+n,l=r+r,c=a+a,d=n*h,u=n*l,p=n*c,m=r*l,y=r*c,g=a*c,w=o*h,_=o*l,b=o*c,M=i.x,A=i.y,z=i.z;return s[0]=(1-(m+g))*M,s[1]=(u+b)*M,s[2]=(p-_)*M,s[3]=0,s[4]=(u-b)*A,s[5]=(1-(d+g))*A,s[6]=(y+w)*A,s[7]=0,s[8]=(p+_)*z,s[9]=(y-w)*z,s[10]=(1-(d+m))*z,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let n=Bt.set(s[0],s[1],s[2]).length();const r=Bt.set(s[4],s[5],s[6]).length(),a=Bt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],Y.copy(this);const h=1/n,l=1/r,c=1/a;return Y.elements[0]*=h,Y.elements[1]*=h,Y.elements[2]*=h,Y.elements[4]*=l,Y.elements[5]*=l,Y.elements[6]*=l,Y.elements[8]*=c,Y.elements[9]*=c,Y.elements[10]*=c,e.setFromRotationMatrix(Y),i.x=n,i.y=r,i.z=a,this}makePerspective(t,e,i,s,n,r,a=te){const o=this.elements,h=2*n/(e-t),l=2*n/(i-s),c=(e+t)/(e-t),d=(i+s)/(i-s);let u,p;if(a===te)u=-(r+n)/(r-n),p=-2*r*n/(r-n);else if(a===di)u=-r/(r-n),p=-r*n/(r-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return o[0]=h,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=l,o[9]=d,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,i,s,n,r,a=te){const o=this.elements,h=1/(e-t),l=1/(i-s),c=1/(r-n),d=(e+t)*h,u=(i+s)*l;let p,m;if(a===te)p=(r+n)*c,m=-2*c;else if(a===di)p=n*c,m=-1*c;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return o[0]=2*h,o[4]=0,o[8]=0,o[12]=-d,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=m,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const Bt=new x,Y=new H,cs=new x(0,0,0),us=new x(1,1,1),ct=new x,ae=new x,V=new x,gi=new H,bi=new Yt;class Jt{constructor(t=0,e=0,i=0,s=Jt.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,n=s[0],r=s[4],a=s[8],o=s[1],h=s[5],l=s[9],c=s[2],d=s[6],u=s[10];switch(e){case"XYZ":this._y=Math.asin(O(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(d,h),this._z=0);break;case"YXZ":this._x=Math.asin(-O(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,u),this._z=Math.atan2(o,h)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(O(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-c,u),this._z=Math.atan2(-r,h)):(this._y=0,this._z=Math.atan2(o,n));break;case"ZYX":this._y=Math.asin(-O(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(d,u),this._z=Math.atan2(o,n)):(this._x=0,this._z=Math.atan2(-r,h));break;case"YZX":this._z=Math.asin(O(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(a,u));break;case"XZY":this._z=Math.asin(-O(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(d,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return gi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(gi,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return bi.setFromEuler(this),this.setFromQuaternion(bi,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Jt.DEFAULT_ORDER="XYZ";class ds{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let ps=0;const Mi=new x,Ct=new Yt,it=new H,he=new x,Ut=new x,ms=new x,fs=new Yt,_i=new x(1,0,0),wi=new x(0,1,0),zi=new x(0,0,1),Ai={type:"added"},ys={type:"removed"},kt={type:"childadded",child:null},De={type:"childremoved",child:null};class X extends Ae{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ps++}),this.uuid=Zt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=X.DEFAULT_UP.clone();const t=new x,e=new Jt,i=new Yt,s=new x(1,1,1);function n(){i.setFromEuler(e,!1)}function r(){e.setFromQuaternion(i,void 0,!1)}e._onChange(n),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new H},normalMatrix:{value:new rt}}),this.matrix=new H,this.matrixWorld=new H,this.matrixAutoUpdate=X.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=X.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new ds,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Ct.setFromAxisAngle(t,e),this.quaternion.multiply(Ct),this}rotateOnWorldAxis(t,e){return Ct.setFromAxisAngle(t,e),this.quaternion.premultiply(Ct),this}rotateX(t){return this.rotateOnAxis(_i,t)}rotateY(t){return this.rotateOnAxis(wi,t)}rotateZ(t){return this.rotateOnAxis(zi,t)}translateOnAxis(t,e){return Mi.copy(t).applyQuaternion(this.quaternion),this.position.add(Mi.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(_i,t)}translateY(t){return this.translateOnAxis(wi,t)}translateZ(t){return this.translateOnAxis(zi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(it.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?he.copy(t):he.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Ut.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?it.lookAt(Ut,he,this.up):it.lookAt(he,Ut,this.up),this.quaternion.setFromRotationMatrix(it),s&&(it.extractRotation(s.matrixWorld),Ct.setFromRotationMatrix(it),this.quaternion.premultiply(Ct.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Ai),kt.child=t,this.dispatchEvent(kt),kt.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ys),De.child=t,this.dispatchEvent(De),De.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),it.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),it.multiply(t.parent.matrixWorld)),t.applyMatrix4(it),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Ai),kt.child=t,this.dispatchEvent(kt),kt.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const r=this.children[i].getObjectByProperty(t,e);if(r!==void 0)return r}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ut,t,ms),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ut,fs,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++){const n=e[i];(n.matrixWorldAutoUpdate===!0||t===!0)&&n.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let n=0,r=s.length;n<r;n++){const a=s[n];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),s.maxGeometryCount=this._maxGeometryCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function n(a,o){return a[o.uuid]===void 0&&(a[o.uuid]=o.toJSON(t)),o.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const o=a.shapes;if(Array.isArray(o))for(let h=0,l=o.length;h<l;h++){const c=o[h];n(t.shapes,c)}else n(t.shapes,o)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let o=0,h=this.material.length;o<h;o++)a.push(n(t.materials,this.material[o]));s.material=a}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const o=this.animations[a];s.animations.push(n(t.animations,o))}}if(e){const a=r(t.geometries),o=r(t.materials),h=r(t.textures),l=r(t.images),c=r(t.shapes),d=r(t.skeletons),u=r(t.animations),p=r(t.nodes);a.length>0&&(i.geometries=a),o.length>0&&(i.materials=o),h.length>0&&(i.textures=h),l.length>0&&(i.images=l),c.length>0&&(i.shapes=c),d.length>0&&(i.skeletons=d),u.length>0&&(i.animations=u),p.length>0&&(i.nodes=p)}return i.object=s,i;function r(a){const o=[];for(const h in a){const l=a[h];delete l.metadata,o.push(l)}return o}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}X.DEFAULT_UP=new x(0,1,0);X.DEFAULT_MATRIX_AUTO_UPDATE=!0;X.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const $=new x,st=new x,Ne=new x,nt=new x,Et=new x,vt=new x,Si=new x,Oe=new x,qe=new x,Le=new x;class J{constructor(t=new x,e=new x,i=new x){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),$.subVectors(t,e),s.cross($);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,e,i,s,n){$.subVectors(s,e),st.subVectors(i,e),Ne.subVectors(t,e);const r=$.dot($),a=$.dot(st),o=$.dot(Ne),h=st.dot(st),l=st.dot(Ne),c=r*h-a*a;if(c===0)return n.set(0,0,0),null;const d=1/c,u=(h*o-a*l)*d,p=(r*l-a*o)*d;return n.set(1-u-p,p,u)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,nt)===null?!1:nt.x>=0&&nt.y>=0&&nt.x+nt.y<=1}static getInterpolation(t,e,i,s,n,r,a,o){return this.getBarycoord(t,e,i,s,nt)===null?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(n,nt.x),o.addScaledVector(r,nt.y),o.addScaledVector(a,nt.z),o)}static isFrontFacing(t,e,i,s){return $.subVectors(i,e),st.subVectors(t,e),$.cross(st).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return $.subVectors(this.c,this.b),st.subVectors(this.a,this.b),$.cross(st).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return J.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return J.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,s,n){return J.getInterpolation(t,this.a,this.b,this.c,e,i,s,n)}containsPoint(t){return J.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return J.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,n=this.c;let r,a;Et.subVectors(s,i),vt.subVectors(n,i),Oe.subVectors(t,i);const o=Et.dot(Oe),h=vt.dot(Oe);if(o<=0&&h<=0)return e.copy(i);qe.subVectors(t,s);const l=Et.dot(qe),c=vt.dot(qe);if(l>=0&&c<=l)return e.copy(s);const d=o*c-l*h;if(d<=0&&o>=0&&l<=0)return r=o/(o-l),e.copy(i).addScaledVector(Et,r);Le.subVectors(t,n);const u=Et.dot(Le),p=vt.dot(Le);if(p>=0&&u<=p)return e.copy(n);const m=u*h-o*p;if(m<=0&&h>=0&&p<=0)return a=h/(h-p),e.copy(i).addScaledVector(vt,a);const y=l*p-u*c;if(y<=0&&c-l>=0&&u-p>=0)return Si.subVectors(n,s),a=(c-l)/(c-l+(u-p)),e.copy(s).addScaledVector(Si,a);const g=1/(y+m+d);return r=m*g,a=d*g,e.copy(i).addScaledVector(Et,r).addScaledVector(vt,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const qi={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ut={h:0,s:0,l:0},le={h:0,s:0,l:0};function Ve(f,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?f+(t-f)*6*e:e<1/2?t:e<2/3?f+(t-f)*6*(2/3-e):f}class jt{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=dt){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,G.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=G.workingColorSpace){return this.r=t,this.g=e,this.b=i,G.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=G.workingColorSpace){if(t=es(t,1),e=O(e,0,1),i=O(i,0,1),e===0)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=Ve(r,n,t+1/3),this.g=Ve(r,n,t),this.b=Ve(r,n,t-1/3)}return G.toWorkingColorSpace(this,s),this}setStyle(t,e=dt){function i(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;const r=s[1],a=s[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],r=n.length;if(r===3)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(r===6)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=dt){const i=qi[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ot(t.r),this.g=Ot(t.g),this.b=Ot(t.b),this}copyLinearToSRGB(t){return this.r=Be(t.r),this.g=Be(t.g),this.b=Be(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=dt){return G.fromWorkingColorSpace(D.copy(this),t),Math.round(O(D.r*255,0,255))*65536+Math.round(O(D.g*255,0,255))*256+Math.round(O(D.b*255,0,255))}getHexString(t=dt){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=G.workingColorSpace){G.fromWorkingColorSpace(D.copy(this),e);const i=D.r,s=D.g,n=D.b,r=Math.max(i,s,n),a=Math.min(i,s,n);let o,h;const l=(a+r)/2;if(a===r)o=0,h=0;else{const c=r-a;switch(h=l<=.5?c/(r+a):c/(2-r-a),r){case i:o=(s-n)/c+(s<n?6:0);break;case s:o=(n-i)/c+2;break;case n:o=(i-s)/c+4;break}o/=6}return t.h=o,t.s=h,t.l=l,t}getRGB(t,e=G.workingColorSpace){return G.fromWorkingColorSpace(D.copy(this),e),t.r=D.r,t.g=D.g,t.b=D.b,t}getStyle(t=dt){G.fromWorkingColorSpace(D.copy(this),t);const e=D.r,i=D.g,s=D.b;return t!==dt?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(t,e,i){return this.getHSL(ut),this.setHSL(ut.h+t,ut.s+e,ut.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(ut),t.getHSL(le);const i=Fe(ut.h,le.h,e),s=Fe(ut.s,le.s,e),n=Fe(ut.l,le.l,e);return this.setHSL(i,s,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,s=this.b,n=t.elements;return this.r=n[0]*e+n[3]*i+n[6]*s,this.g=n[1]*e+n[4]*i+n[7]*s,this.b=n[2]*e+n[5]*i+n[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const D=new jt;jt.NAMES=qi;let xs=0;class Li extends Ae{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:xs++}),this.uuid=Zt(),this.name="",this.type="Material",this.blending=Qe,this.side=Ge,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ti,this.blendDst=ei,this.blendEquation=Ke,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new jt(0,0,0),this.blendAlpha=0,this.depthFunc=ii,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ci,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=zt,this.stencilZFail=zt,this.stencilZPass=zt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Qe&&(i.blending=this.blending),this.side!==Ge&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==ti&&(i.blendSrc=this.blendSrc),this.blendDst!==ei&&(i.blendDst=this.blendDst),this.blendEquation!==Ke&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==ii&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==ci&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==zt&&(i.stencilFail=this.stencilFail),this.stencilZFail!==zt&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==zt&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(n){const r=[];for(const a in n){const o=n[a];delete o.metadata,r.push(o)}return r}if(e){const n=s(t.textures),r=s(t.images);n.length>0&&(i.textures=n),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let n=0;n!==s;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Nt extends Li{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new jt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Jt,this.combine=Xi,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const T=new x,ce=new q;class mt{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=ui,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Ji,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return ss("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)ce.fromBufferAttribute(this,e),ce.applyMatrix3(t),this.setXY(e,ce.x,ce.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)T.fromBufferAttribute(this,e),T.applyMatrix3(t),this.setXYZ(e,T.x,T.y,T.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)T.fromBufferAttribute(this,e),T.applyMatrix4(t),this.setXYZ(e,T.x,T.y,T.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)T.fromBufferAttribute(this,e),T.applyNormalMatrix(t),this.setXYZ(e,T.x,T.y,T.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)T.fromBufferAttribute(this,e),T.transformDirection(t),this.setXYZ(e,T.x,T.y,T.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=qt(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=N(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=qt(e,this.array)),e}setX(t,e){return this.normalized&&(e=N(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=qt(e,this.array)),e}setY(t,e){return this.normalized&&(e=N(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=qt(e,this.array)),e}setZ(t,e){return this.normalized&&(e=N(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=qt(e,this.array)),e}setW(t,e){return this.normalized&&(e=N(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=N(e,this.array),i=N(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=N(e,this.array),i=N(i,this.array),s=N(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,n){return t*=this.itemSize,this.normalized&&(e=N(e,this.array),i=N(i,this.array),s=N(s,this.array),n=N(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==ui&&(t.usage=this.usage),t}}class gs extends mt{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class bs extends mt{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class ft extends mt{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Ms=0;const W=new H,Ue=new X,It=new x,U=new $t,Wt=new $t,v=new x;class yt extends Ae{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ms++}),this.uuid=Zt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(is(t)?bs:gs)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new rt().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return W.makeRotationFromQuaternion(t),this.applyMatrix4(W),this}rotateX(t){return W.makeRotationX(t),this.applyMatrix4(W),this}rotateY(t){return W.makeRotationY(t),this.applyMatrix4(W),this}rotateZ(t){return W.makeRotationZ(t),this.applyMatrix4(W),this}translate(t,e,i){return W.makeTranslation(t,e,i),this.applyMatrix4(W),this}scale(t,e,i){return W.makeScale(t,e,i),this.applyMatrix4(W),this}lookAt(t){return Ue.lookAt(t),Ue.updateMatrix(),this.applyMatrix4(Ue.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(It).negate(),this.translate(It.x,It.y,It.z),this}setFromPoints(t){const e=[];for(let i=0,s=t.length;i<s;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new ft(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new $t);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new x(-1/0,-1/0,-1/0),new x(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const n=e[i];U.setFromBufferAttribute(n),this.morphTargetsRelative?(v.addVectors(this.boundingBox.min,U.min),this.boundingBox.expandByPoint(v),v.addVectors(this.boundingBox.max,U.max),this.boundingBox.expandByPoint(v)):(this.boundingBox.expandByPoint(U.min),this.boundingBox.expandByPoint(U.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Je);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new x,1/0);return}if(t){const i=this.boundingSphere.center;if(U.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const a=e[n];Wt.setFromBufferAttribute(a),this.morphTargetsRelative?(v.addVectors(U.min,Wt.min),U.expandByPoint(v),v.addVectors(U.max,Wt.max),U.expandByPoint(v)):(U.expandByPoint(Wt.min),U.expandByPoint(Wt.max))}U.getCenter(i);let s=0;for(let n=0,r=t.count;n<r;n++)v.fromBufferAttribute(t,n),s=Math.max(s,i.distanceToSquared(v));if(e)for(let n=0,r=e.length;n<r;n++){const a=e[n],o=this.morphTargetsRelative;for(let h=0,l=a.count;h<l;h++)v.fromBufferAttribute(a,h),o&&(It.fromBufferAttribute(t,h),v.add(It)),s=Math.max(s,i.distanceToSquared(v))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.position,s=e.normal,n=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new mt(new Float32Array(4*i.count),4));const r=this.getAttribute("tangent"),a=[],o=[];for(let S=0;S<i.count;S++)a[S]=new x,o[S]=new x;const h=new x,l=new x,c=new x,d=new q,u=new q,p=new q,m=new x,y=new x;function g(S,B,C){h.fromBufferAttribute(i,S),l.fromBufferAttribute(i,B),c.fromBufferAttribute(i,C),d.fromBufferAttribute(n,S),u.fromBufferAttribute(n,B),p.fromBufferAttribute(n,C),l.sub(h),c.sub(h),u.sub(d),p.sub(d);const k=1/(u.x*p.y-p.x*u.y);isFinite(k)&&(m.copy(l).multiplyScalar(p.y).addScaledVector(c,-u.y).multiplyScalar(k),y.copy(c).multiplyScalar(u.x).addScaledVector(l,-p.x).multiplyScalar(k),a[S].add(m),a[B].add(m),a[C].add(m),o[S].add(y),o[B].add(y),o[C].add(y))}let w=this.groups;w.length===0&&(w=[{start:0,count:t.count}]);for(let S=0,B=w.length;S<B;++S){const C=w[S],k=C.start,j=C.count;for(let E=k,Q=k+j;E<Q;E+=3)g(t.getX(E+0),t.getX(E+1),t.getX(E+2))}const _=new x,b=new x,M=new x,A=new x;function z(S){M.fromBufferAttribute(s,S),A.copy(M);const B=a[S];_.copy(B),_.sub(M.multiplyScalar(M.dot(B))).normalize(),b.crossVectors(A,B);const k=b.dot(o[S])<0?-1:1;r.setXYZW(S,_.x,_.y,_.z,k)}for(let S=0,B=w.length;S<B;++S){const C=w[S],k=C.start,j=C.count;for(let E=k,Q=k+j;E<Q;E+=3)z(t.getX(E+0)),z(t.getX(E+1)),z(t.getX(E+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new mt(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let d=0,u=i.count;d<u;d++)i.setXYZ(d,0,0,0);const s=new x,n=new x,r=new x,a=new x,o=new x,h=new x,l=new x,c=new x;if(t)for(let d=0,u=t.count;d<u;d+=3){const p=t.getX(d+0),m=t.getX(d+1),y=t.getX(d+2);s.fromBufferAttribute(e,p),n.fromBufferAttribute(e,m),r.fromBufferAttribute(e,y),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),a.fromBufferAttribute(i,p),o.fromBufferAttribute(i,m),h.fromBufferAttribute(i,y),a.add(l),o.add(l),h.add(l),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(m,o.x,o.y,o.z),i.setXYZ(y,h.x,h.y,h.z)}else for(let d=0,u=e.count;d<u;d+=3)s.fromBufferAttribute(e,d+0),n.fromBufferAttribute(e,d+1),r.fromBufferAttribute(e,d+2),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),i.setXYZ(d+0,l.x,l.y,l.z),i.setXYZ(d+1,l.x,l.y,l.z),i.setXYZ(d+2,l.x,l.y,l.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)v.fromBufferAttribute(t,e),v.normalize(),t.setXYZ(e,v.x,v.y,v.z)}toNonIndexed(){function t(a,o){const h=a.array,l=a.itemSize,c=a.normalized,d=new h.constructor(o.length*l);let u=0,p=0;for(let m=0,y=o.length;m<y;m++){a.isInterleavedBufferAttribute?u=o[m]*a.data.stride+a.offset:u=o[m]*l;for(let g=0;g<l;g++)d[p++]=h[u++]}return new mt(d,l,c)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new yt,i=this.index.array,s=this.attributes;for(const a in s){const o=s[a],h=t(o,i);e.setAttribute(a,h)}const n=this.morphAttributes;for(const a in n){const o=[],h=n[a];for(let l=0,c=h.length;l<c;l++){const d=h[l],u=t(d,i);o.push(u)}e.morphAttributes[a]=o}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,o=r.length;a<o;a++){const h=r[a];e.addGroup(h.start,h.count,h.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const o=this.parameters;for(const h in o)o[h]!==void 0&&(t[h]=o[h]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const o in i){const h=i[o];t.data.attributes[o]=h.toJSON(t.data)}const s={};let n=!1;for(const o in this.morphAttributes){const h=this.morphAttributes[o],l=[];for(let c=0,d=h.length;c<d;c++){const u=h[c];l.push(u.toJSON(t.data))}l.length>0&&(s[o]=l,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const h in s){const l=s[h];this.setAttribute(h,l.clone(e))}const n=t.morphAttributes;for(const h in n){const l=[],c=n[h];for(let d=0,u=c.length;d<u;d++)l.push(c[d].clone(e));this.morphAttributes[h]=l}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let h=0,l=r.length;h<l;h++){const c=r[h];this.addGroup(c.start,c.count,c.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const o=t.boundingSphere;return o!==null&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Fi=new H,Mt=new Oi,ue=new Je,Ti=new x,Rt=new x,Pt=new x,Dt=new x,We=new x,de=new x,pe=new q,me=new q,fe=new q,Bi=new x,Ci=new x,ki=new x,ye=new x,xe=new x;class Ht extends X{constructor(t=new yt,e=new Nt){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const a=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=n}}}}getVertexPosition(t,e){const i=this.geometry,s=i.attributes.position,n=i.morphAttributes.position,r=i.morphTargetsRelative;e.fromBufferAttribute(s,t);const a=this.morphTargetInfluences;if(n&&a){de.set(0,0,0);for(let o=0,h=n.length;o<h;o++){const l=a[o],c=n[o];l!==0&&(We.fromBufferAttribute(c,t),r?de.addScaledVector(We,l):de.addScaledVector(We.sub(e),l))}e.add(de)}return e}raycast(t,e){const i=this.geometry,s=this.material,n=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),ue.copy(i.boundingSphere),ue.applyMatrix4(n),Mt.copy(t.ray).recast(t.near),!(ue.containsPoint(Mt.origin)===!1&&(Mt.intersectSphere(ue,Ti)===null||Mt.origin.distanceToSquared(Ti)>(t.far-t.near)**2))&&(Fi.copy(n).invert(),Mt.copy(t.ray).applyMatrix4(Fi),!(i.boundingBox!==null&&Mt.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,Mt)))}_computeIntersections(t,e,i){let s;const n=this.geometry,r=this.material,a=n.index,o=n.attributes.position,h=n.attributes.uv,l=n.attributes.uv1,c=n.attributes.normal,d=n.groups,u=n.drawRange;if(a!==null)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const y=d[p],g=r[y.materialIndex],w=Math.max(y.start,u.start),_=Math.min(a.count,Math.min(y.start+y.count,u.start+u.count));for(let b=w,M=_;b<M;b+=3){const A=a.getX(b),z=a.getX(b+1),S=a.getX(b+2);s=ge(this,g,t,i,h,l,c,A,z,S),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,u.start),m=Math.min(a.count,u.start+u.count);for(let y=p,g=m;y<g;y+=3){const w=a.getX(y),_=a.getX(y+1),b=a.getX(y+2);s=ge(this,r,t,i,h,l,c,w,_,b),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}else if(o!==void 0)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const y=d[p],g=r[y.materialIndex],w=Math.max(y.start,u.start),_=Math.min(o.count,Math.min(y.start+y.count,u.start+u.count));for(let b=w,M=_;b<M;b+=3){const A=b,z=b+1,S=b+2;s=ge(this,g,t,i,h,l,c,A,z,S),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,u.start),m=Math.min(o.count,u.start+u.count);for(let y=p,g=m;y<g;y+=3){const w=y,_=y+1,b=y+2;s=ge(this,r,t,i,h,l,c,w,_,b),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}}}function _s(f,t,e,i,s,n,r,a){let o;if(t.side===Hi?o=i.intersectTriangle(r,n,s,!0,a):o=i.intersectTriangle(s,n,r,t.side===Ge,a),o===null)return null;xe.copy(a),xe.applyMatrix4(f.matrixWorld);const h=e.ray.origin.distanceTo(xe);return h<e.near||h>e.far?null:{distance:h,point:xe.clone(),object:f}}function ge(f,t,e,i,s,n,r,a,o,h){f.getVertexPosition(a,Rt),f.getVertexPosition(o,Pt),f.getVertexPosition(h,Dt);const l=_s(f,t,e,i,Rt,Pt,Dt,ye);if(l){s&&(pe.fromBufferAttribute(s,a),me.fromBufferAttribute(s,o),fe.fromBufferAttribute(s,h),l.uv=J.getInterpolation(ye,Rt,Pt,Dt,pe,me,fe,new q)),n&&(pe.fromBufferAttribute(n,a),me.fromBufferAttribute(n,o),fe.fromBufferAttribute(n,h),l.uv1=J.getInterpolation(ye,Rt,Pt,Dt,pe,me,fe,new q)),r&&(Bi.fromBufferAttribute(r,a),Ci.fromBufferAttribute(r,o),ki.fromBufferAttribute(r,h),l.normal=J.getInterpolation(ye,Rt,Pt,Dt,Bi,Ci,ki,new x),l.normal.dot(i.direction)>0&&l.normal.multiplyScalar(-1));const c={a,b:o,c:h,normal:new x,materialIndex:0};J.getNormal(Rt,Pt,Dt,c.normal),l.face=c}return l}class Gt extends yt{constructor(t=1,e=1,i=1,s=1,n=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:s,heightSegments:n,depthSegments:r};const a=this;s=Math.floor(s),n=Math.floor(n),r=Math.floor(r);const o=[],h=[],l=[],c=[];let d=0,u=0;p("z","y","x",-1,-1,i,e,t,r,n,0),p("z","y","x",1,-1,i,e,-t,r,n,1),p("x","z","y",1,1,t,i,e,s,r,2),p("x","z","y",1,-1,t,i,-e,s,r,3),p("x","y","z",1,-1,t,e,i,s,n,4),p("x","y","z",-1,-1,t,e,-i,s,n,5),this.setIndex(o),this.setAttribute("position",new ft(h,3)),this.setAttribute("normal",new ft(l,3)),this.setAttribute("uv",new ft(c,2));function p(m,y,g,w,_,b,M,A,z,S,B){const C=b/z,k=M/S,j=b/2,E=M/2,Q=A/2,K=z+1,_t=S+1;let xt=0,ot=0;const I=new x;for(let R=0;R<_t;R++){const L=R*k-E;for(let wt=0;wt<K;wt++){const Qt=wt*C-j;I[m]=Qt*w,I[y]=L*_,I[g]=Q,h.push(I.x,I.y,I.z),I[m]=0,I[y]=0,I[g]=A>0?1:-1,l.push(I.x,I.y,I.z),c.push(wt/z),c.push(1-R/S),xt+=1}}for(let R=0;R<S;R++)for(let L=0;L<z;L++){const wt=d+L+K*R,Qt=d+L+K*(R+1),Ui=d+(L+1)+K*(R+1),je=d+(L+1)+K*R;o.push(wt,Qt,je),o.push(Qt,Ui,je),ot+=6}a.addGroup(u,ot,B),u+=ot,d+=xt}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Gt(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}const He=new x,ws=new x,zs=new rt;class Ei{constructor(t=new x(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,s){return this.normal.set(t,e,i),this.constant=s,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const s=He.subVectors(i,e).cross(ws.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(s,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const i=t.delta(He),s=this.normal.dot(i);if(s===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const n=-(t.start.dot(this.normal)+this.constant)/s;return n<0||n>1?null:e.copy(t.start).addScaledVector(i,n)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||zs.getNormalMatrix(t),s=this.coplanarPoint(He).applyMatrix4(t),n=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(n),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}class As extends pt{constructor(t,e,i,s,n,r,a,o,h,l){if(l=l!==void 0?l:Se,l!==Se&&l!==oi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&l===Se&&(i=$i),i===void 0&&l===oi&&(i=ji),super(null,s,n,r,a,o,l,i,h),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:ri,this.minFilter=o!==void 0?o:ri,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}const Ss=new As(1,1);Ss.compareFunction=ts;class Vi extends Li{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new jt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const _e=new x,we=new x,vi=new H,Xt=new Oi,be=new Je,Xe=new x,Ii=new x;class Fs extends X{constructor(t=new yt,e=new Vi){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[0];for(let s=1,n=e.count;s<n;s++)_e.fromBufferAttribute(e,s-1),we.fromBufferAttribute(e,s),i[s]=i[s-1],i[s]+=_e.distanceTo(we);t.setAttribute("lineDistance",new ft(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,s=this.matrixWorld,n=t.params.Line.threshold,r=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),be.copy(i.boundingSphere),be.applyMatrix4(s),be.radius+=n,t.ray.intersectsSphere(be)===!1)return;vi.copy(s).invert(),Xt.copy(t.ray).applyMatrix4(vi);const a=n/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,h=this.isLineSegments?2:1,l=i.index,d=i.attributes.position;if(l!==null){const u=Math.max(0,r.start),p=Math.min(l.count,r.start+r.count);for(let m=u,y=p-1;m<y;m+=h){const g=l.getX(m),w=l.getX(m+1),_=Me(this,t,Xt,o,g,w);_&&e.push(_)}if(this.isLineLoop){const m=l.getX(p-1),y=l.getX(u),g=Me(this,t,Xt,o,m,y);g&&e.push(g)}}else{const u=Math.max(0,r.start),p=Math.min(d.count,r.start+r.count);for(let m=u,y=p-1;m<y;m+=h){const g=Me(this,t,Xt,o,m,m+1);g&&e.push(g)}if(this.isLineLoop){const m=Me(this,t,Xt,o,p-1,u);m&&e.push(m)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const a=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=n}}}}}function Me(f,t,e,i,s,n){const r=f.geometry.attributes.position;if(_e.fromBufferAttribute(r,s),we.fromBufferAttribute(r,n),e.distanceSqToSegment(_e,we,Xe,Ii)>i)return;Xe.applyMatrix4(f.matrixWorld);const o=t.ray.origin.distanceTo(Xe);if(!(o<t.near||o>t.far))return{distance:o,point:Ii.clone().applyMatrix4(f.matrixWorld),index:s,face:null,faceIndex:null,object:f}}class ze extends yt{constructor(t=1,e=32,i=16,s=0,n=Math.PI*2,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:s,phiLength:n,thetaStart:r,thetaLength:a},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const o=Math.min(r+a,Math.PI);let h=0;const l=[],c=new x,d=new x,u=[],p=[],m=[],y=[];for(let g=0;g<=i;g++){const w=[],_=g/i;let b=0;g===0&&r===0?b=.5/e:g===i&&o===Math.PI&&(b=-.5/e);for(let M=0;M<=e;M++){const A=M/e;c.x=-t*Math.cos(s+A*n)*Math.sin(r+_*a),c.y=t*Math.cos(r+_*a),c.z=t*Math.sin(s+A*n)*Math.sin(r+_*a),p.push(c.x,c.y,c.z),d.copy(c).normalize(),m.push(d.x,d.y,d.z),y.push(A+b,1-_),w.push(h++)}l.push(w)}for(let g=0;g<i;g++)for(let w=0;w<e;w++){const _=l[g][w+1],b=l[g][w],M=l[g+1][w],A=l[g+1][w+1];(g!==0||r>0)&&u.push(_,b,A),(g!==i-1||o<Math.PI)&&u.push(b,M,A)}this.setIndex(u),this.setAttribute("position",new ft(p,3)),this.setAttribute("normal",new ft(m,3)),this.setAttribute("uv",new ft(y,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ze(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ri}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ri);class F{static roundNumber(t,e){const i=Math.pow(10,e);return Math.round(t*i)/i}static sample(t){return t[Math.floor(Math.random()*t.length)]}static distanceToSquared(t,e){var i=t.x-e.x,s=t.y-e.y,n=t.z-e.z;return i*i+s*s+n*n}static isPointInPoly(t,e){for(var i=!1,s=-1,n=t.length,r=n-1;++s<n;r=s)(t[s].z<=e.z&&e.z<t[r].z||t[r].z<=e.z&&e.z<t[s].z)&&e.x<(t[r].x-t[s].x)*(e.z-t[s].z)/(t[r].z-t[s].z)+t[s].x&&(i=!i);return i}static isVectorInPolygon(t,e,i){var s=1e5,n=-1e5,r=[];return e.vertexIds.forEach(a=>{s=Math.min(i[a].y,s),n=Math.max(i[a].y,n),r.push(i[a])}),!!(t.y<n+.5&&t.y>s-.5&&this.isPointInPoly(r,t))}static triarea2(t,e,i){return(i.x-t.x)*(e.z-t.z)-(e.x-t.x)*(i.z-t.z)}static vequal(t,e){return this.distanceToSquared(t,e)<1e-5}static mergeVertices(t,e=1e-4){e=Math.max(e,Number.EPSILON);for(var i={},s=t.getIndex(),n=t.getAttribute("position"),r=s?s.count:n.count,a=0,o=[],h=[],l=Math.log10(1/e),c=Math.pow(10,l),d=0;d<r;d++){var u=s?s.getX(d):d,p="";p+=~~(n.getX(u)*c)+",",p+=~~(n.getY(u)*c)+",",(p+=~~(n.getZ(u)*c)+",")in i?o.push(i[p]):(h.push(n.getX(u)),h.push(n.getY(u)),h.push(n.getZ(u)),i[p]=a,o.push(a),a++)}const m=new mt(new Float32Array(h),n.itemSize,n.normalized),y=new yt;return y.setAttribute("position",m),y.setIndex(o),y}}class Ts{constructor(t){this.content=[],this.scoreFunction=t}push(t){this.content.push(t),this.sinkDown(this.content.length-1)}pop(){const t=this.content[0],e=this.content.pop();return this.content.length>0&&(this.content[0]=e,this.bubbleUp(0)),t}remove(t){const e=this.content.indexOf(t),i=this.content.pop();e!==this.content.length-1&&(this.content[e]=i,this.scoreFunction(i)<this.scoreFunction(t)?this.sinkDown(e):this.bubbleUp(e))}size(){return this.content.length}rescoreElement(t){this.sinkDown(this.content.indexOf(t))}sinkDown(t){const e=this.content[t];for(;t>0;){const i=(t+1>>1)-1,s=this.content[i];if(!(this.scoreFunction(e)<this.scoreFunction(s)))break;this.content[i]=e,this.content[t]=s,t=i}}bubbleUp(t){const e=this.content.length,i=this.content[t],s=this.scoreFunction(i);for(;;){const n=t+1<<1,r=n-1;let a,o=null;if(r<e&&(a=this.scoreFunction(this.content[r]),a<s&&(o=r)),n<e&&this.scoreFunction(this.content[n])<(o===null?s:a)&&(o=n),o===null)break;this.content[t]=this.content[o],this.content[o]=i,t=o}}}class Bs{constructor(){this.portals=[]}push(t,e){e===void 0&&(e=t),this.portals.push({left:t,right:e})}stringPull(){const t=this.portals,e=[];let i,s,n,r=0,a=0,o=0;i=t[0].left,s=t[0].left,n=t[0].right,e.push(i);for(let h=1;h<t.length;h++){const l=t[h].left,c=t[h].right;if(F.triarea2(i,n,c)<=0){if(!(F.vequal(i,n)||F.triarea2(i,s,c)>0)){e.push(s),i=s,r=a,s=i,n=i,a=r,o=r,h=r;continue}n=c,o=h}if(F.triarea2(i,s,l)>=0){if(!(F.vequal(i,s)||F.triarea2(i,n,l)<0)){e.push(n),i=n,r=o,s=i,n=i,a=r,o=r,h=r;continue}s=l,a=h}}return e.length!==0&&F.vequal(e[e.length-1],t[t.length-1].left)||e.push(t[t.length-1].left),this.path=e,e}}class Ye{constructor(){this.zones={}}static createZone(t,e=1e-4){return class{static buildZone(i,s){const n=this._buildNavigationMesh(i,s),r={};n.vertices.forEach(o=>{o.x=F.roundNumber(o.x,2),o.y=F.roundNumber(o.y,2),o.z=F.roundNumber(o.z,2)}),r.vertices=n.vertices;const a=this._buildPolygonGroups(n);return r.groups=new Array(a.length),a.forEach((o,h)=>{const l=new Map;o.forEach((d,u)=>{l.set(d,u)});const c=new Array(o.length);o.forEach((d,u)=>{const p=[];d.neighbours.forEach(g=>p.push(l.get(g)));const m=[];d.neighbours.forEach(g=>m.push(this._getSharedVerticesInOrder(d,g)));const y=new x(0,0,0);y.add(r.vertices[d.vertexIds[0]]),y.add(r.vertices[d.vertexIds[1]]),y.add(r.vertices[d.vertexIds[2]]),y.divideScalar(3),y.x=F.roundNumber(y.x,2),y.y=F.roundNumber(y.y,2),y.z=F.roundNumber(y.z,2),c[u]={id:u,neighbours:p,vertexIds:d.vertexIds,centroid:y,portals:m}}),r.groups[h]=c}),r}static _buildNavigationMesh(i,s){return i=F.mergeVertices(i,s),this._buildPolygonsFromGeometry(i)}static _spreadGroupId(i){let s=new Set([i]);for(;s.size>0;){const n=s;s=new Set,n.forEach(r=>{r.group=i.group,r.neighbours.forEach(a=>{a.group===void 0&&s.add(a)})})}}static _buildPolygonGroups(i){const s=[];return i.polygons.forEach(n=>{n.group!==void 0?s[n.group].push(n):(n.group=s.length,this._spreadGroupId(n),s.push([n]))}),s}static _buildPolygonNeighbours(i,s){const n=new Set,r=s[i.vertexIds[1]],a=s[i.vertexIds[2]];return s[i.vertexIds[0]].forEach(o=>{o!==i&&(r.includes(o)||a.includes(o))&&n.add(o)}),r.forEach(o=>{o!==i&&a.includes(o)&&n.add(o)}),n}static _buildPolygonsFromGeometry(i){const s=[],n=[],r=i.attributes.position,a=i.index,o=[];for(let h=0;h<r.count;h++)n.push(new x().fromBufferAttribute(r,h)),o[h]=[];for(let h=0;h<i.index.count;h+=3){const l=a.getX(h),c=a.getX(h+1),d=a.getX(h+2),u={vertexIds:[l,c,d],neighbours:null};s.push(u),o[l].push(u),o[c].push(u),o[d].push(u)}return s.forEach(h=>{h.neighbours=this._buildPolygonNeighbours(h,o)}),{polygons:s,vertices:n}}static _getSharedVerticesInOrder(i,s){const n=i.vertexIds,r=n[0],a=n[1],o=n[2],h=s.vertexIds,l=h.includes(r),c=h.includes(a),d=h.includes(o);return l&&c&&d?Array.from(n):l&&c?[r,a]:c&&d?[a,o]:l&&d?[o,r]:(console.warn("Error processing navigation mesh neighbors; neighbors with <2 shared vertices found."),[])}}.buildZone(t,e)}setZoneData(t,e){this.zones[t]=e}getRandomNode(t,e,i,s){if(!this.zones[t])return new x;i=i||null,s=s||0;const n=[];return this.zones[t].groups[e].forEach(r=>{i&&s?F.distanceToSquared(i,r.centroid)<s*s&&n.push(r.centroid):n.push(r.centroid)}),F.sample(n)||new x}getClosestNode(t,e,i,s=!1){const n=this.zones[e].vertices;let r=null,a=1/0;return this.zones[e].groups[i].forEach(o=>{const h=F.distanceToSquared(o.centroid,t);h<a&&(!s||F.isVectorInPolygon(t,o,n))&&(r=o,a=h)}),r}findPath(t,e,i,s){const n=this.zones[i].groups[s],r=this.zones[i].vertices,a=this.getClosestNode(t,i,s,!0),o=this.getClosestNode(e,i,s,!0);if(!a||!o)return null;const h=class{static init(u){for(let p=0;p<u.length;p++){const m=u[p];m.f=0,m.g=0,m.h=0,m.cost=1,m.visited=!1,m.closed=!1,m.parent=null}}static cleanUp(u){for(let p=0;p<u.length;p++){const m=u[p];delete m.f,delete m.g,delete m.h,delete m.cost,delete m.visited,delete m.closed,delete m.parent}}static heap(){return new Ts(function(u){return u.f})}static search(u,p,m){this.init(u);const y=this.heap();for(y.push(p);y.size()>0;){const g=y.pop();if(g===m){let _=g;const b=[];for(;_.parent;)b.push(_),_=_.parent;return this.cleanUp(b),b.reverse()}g.closed=!0;const w=this.neighbours(u,g);for(let _=0,b=w.length;_<b;_++){const M=w[_];if(M.closed)continue;const A=g.g+M.cost,z=M.visited;if(!z||A<M.g){if(M.visited=!0,M.parent=g,!M.centroid||!m.centroid)throw new Error("Unexpected state");M.h=M.h||this.heuristic(M.centroid,m.centroid),M.g=A,M.f=M.g+M.h,z?y.rescoreElement(M):y.push(M)}}}return[]}static heuristic(u,p){return F.distanceToSquared(u,p)}static neighbours(u,p){const m=[];for(let y=0;y<p.neighbours.length;y++)m.push(u[p.neighbours[y]]);return m}}.search(n,a,o),l=function(u,p){for(var m=0;m<u.neighbours.length;m++)if(u.neighbours[m]===p.id)return u.portals[m]},c=new Bs;c.push(t);for(let u=0;u<h.length;u++){const p=h[u],m=h[u+1];if(m){const y=l(p,m);c.push(r[y[0]],r[y[1]])}}c.push(e),c.stringPull();const d=c.path.map(u=>new x(u.x,u.y,u.z));return d.shift(),d}}Ye.prototype.getGroup=function(){const f=new Ei;return function(t,e,i=!1){if(!this.zones[t])return null;let s=null,n=Math.pow(50,2);const r=this.zones[t];for(let a=0;a<r.groups.length;a++){const o=r.groups[a];for(const h of o){if(i&&(f.setFromCoplanarPoints(r.vertices[h.vertexIds[0]],r.vertices[h.vertexIds[1]],r.vertices[h.vertexIds[2]]),Math.abs(f.distanceToPoint(e))<.01)&&F.isPointInPoly([r.vertices[h.vertexIds[0]],r.vertices[h.vertexIds[1]],r.vertices[h.vertexIds[2]]],e))return a;const l=F.distanceToSquared(h.centroid,e);l<n&&(s=a,n=l)}}return s}}(),Ye.prototype.clampStep=function(){const f=new x,t=new Ei,e=new J,i=new x;let s,n,r=new x;return function(a,o,h,l,c,d){const u=this.zones[l].vertices,p=this.zones[l].groups[c],m=[h],y={};y[h.id]=0,s=void 0,r.set(0,0,0),n=1/0,t.setFromCoplanarPoints(u[h.vertexIds[0]],u[h.vertexIds[1]],u[h.vertexIds[2]]),t.projectPoint(o,f),i.copy(f);for(let g=m.pop();g;g=m.pop()){e.set(u[g.vertexIds[0]],u[g.vertexIds[1]],u[g.vertexIds[2]]),e.closestPointToPoint(i,f),f.distanceToSquared(i)<n&&(s=g,r.copy(f),n=f.distanceToSquared(i));const w=y[g.id];if(!(w>2))for(let _=0;_<g.neighbours.length;_++){const b=p[g.neighbours[_]];b.id in y||(m.push(b),y[b.id]=w+1)}}return d.copy(r),s}}();class Cs extends X{constructor(){super(),this._playerMarker=new Ht(new ze(.25,32,32),new Nt({color:15631215})),this._targetMarker=new Ht(new Gt(.3,.3,.3),new Nt({color:14469912})),this._nodeMarker=new Ht(new Gt(.1,.8,.1),new Nt({color:4417387})),this._stepMarker=new Ht(new Gt(.1,1,.1),new Nt({color:14472114})),this._pathMarker=new X,this._pathLineMaterial=new Vi({color:41903,linewidth:2}),this._pathPointMaterial=new Nt({color:41903}),this._pathPointGeometry=new ze(.08),this._markers=[this._playerMarker,this._targetMarker,this._nodeMarker,this._stepMarker,this._pathMarker],this._markers.forEach(t=>{t.visible=!1,this.add(t)})}setPath(t){for(;this._pathMarker.children.length;)this._pathMarker.children[0].visible=!1,this._pathMarker.remove(this._pathMarker.children[0]);t=[this._playerMarker.position].concat(t);const e=new yt;e.setAttribute("position",new mt(new Float32Array(3*t.length),3));for(let i=0;i<t.length;i++)e.attributes.position.setXYZ(i,t[i].x,t[i].y+.2,t[i].z);this._pathMarker.add(new Fs(e,this._pathLineMaterial));for(let i=0;i<t.length-1;i++){const s=new Ht(this._pathPointGeometry,this._pathPointMaterial);s.position.copy(t[i]),s.position.y+=.2,this._pathMarker.add(s)}return this._pathMarker.visible=!0,this}setPlayerPosition(t){return this._playerMarker.position.copy(t),this._playerMarker.visible=!0,this}setTargetPosition(t){return this._targetMarker.position.copy(t),this._targetMarker.visible=!0,this}setNodePosition(t){return this._nodeMarker.position.copy(t),this._nodeMarker.visible=!0,this}setStepPosition(t){return this._stepMarker.position.copy(t),this._stepMarker.visible=!0,this}reset(){for(;this._pathMarker.children.length;)this._pathMarker.children[0].visible=!1,this._pathMarker.remove(this._pathMarker.children[0]);return this._markers.forEach(t=>{t.visible=!1}),this}}const ks=Object.freeze(Object.defineProperty({__proto__:null,Pathfinding:Ye,PathfindingHelper:Cs},Symbol.toStringTag,{value:"Module"})),vs=Wi(ks);export{vs as r};

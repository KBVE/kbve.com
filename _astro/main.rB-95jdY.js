import{w as d,p as C,t as F}from"./comlink.CPG-Ccvr.js";import{a as T}from"./@nanostores.CJR83bEb.js";import{B,t as E}from"./flatbuffers.BcE9oV44.js";import{z as s}from"./zod.D6aOmuMC.js";import"./nanostores.qAfxXu-z.js";import"./react.CvslfkeK.js";import"./@react-three.B-wTPXHf.js";async function P(e,{version:r,i18nPath:t="https://discord.sh/i18n/db.json",locale:o="en",defaults:i={welcome:"Welcome to the app!"}}){console.log("[init-worker] Initializing database...");try{await e.loadI18nFromJSON(t),console.log(`[init-worker] i18n loaded from ${t}`),await e.dbSet("locale",o);for(const[a,n]of Object.entries(i))await e.dbSet(a,n);await e.setVersion(r),e.loadServersFromJSON(),console.log(`[init-worker] DB initialized to version ${r}`)}catch(a){console.error("[init-worker] Initialization failed:",a)}}let k=null;async function x(e){if(k)return k;const r={};async function t(n){const p=e?.(n)??n,f=new Worker(p,{type:"module"}),v=d(f),h=await v.getMeta?.()??{name:"unknown",version:"0.0.1"},D=`${h.name}@${h.version}`;console.log(`[mod-manager] ${D} is loaded.`);const O={id:D,worker:f,instance:v,meta:h,url:n};return r[D]=O,O}function o(n){r[n]&&(r[n].worker.terminate(),delete r[n])}function i(){return Object.values(r).map(n=>n.meta)}async function a(n){const p=r[n];if(!p)throw new Error(`Mod "${n}" not found`);return o(n),t(p.url)}return k={registry:r,load:t,unload:o,list:i,reload:a},k}var w=(e=>(e[e.PAYLOAD_UNKNOWN=0]="PAYLOAD_UNKNOWN",e[e.JSON=1]="JSON",e[e.FLEX=2]="FLEX",e[e.PROTOBUF=3]="PROTOBUF",e[e.FLATBUFFER=4]="FLATBUFFER",e))(w||{}),c=(e=>(e[e.UNKNOWN=0]="UNKNOWN",e[e.ADD=1]="ADD",e[e.READ=2]="READ",e[e.GET=4]="GET",e[e.SET=8]="SET",e[e.DEL=16]="DEL",e[e.STREAM=32]="STREAM",e[e.GROUP=64]="GROUP",e[e.LIST=128]="LIST",e[e.ACTION=256]="ACTION",e[e.MESSAGE=512]="MESSAGE",e[e.INFO=1024]="INFO",e[e.DEBUG=2048]="DEBUG",e[e.ERROR=4096]="ERROR",e[e.AUTH=8192]="AUTH",e[e.HEARTBEAT=16384]="HEARTBEAT",e[e.CONFIG_UPDATE=32768]="CONFIG_UPDATE",e[e.REDIS=65536]="REDIS",e[e.SUPABASE=131072]="SUPABASE",e[e.FILESYSTEM=262144]="FILESYSTEM",e[e.WEBSOCKET=524288]="WEBSOCKET",e[e.HTTP_API=1048576]="HTTP_API",e[e.LOCAL_CACHE=2097152]="LOCAL_CACHE",e[e.AI=4194304]="AI",e))(c||{});function R(){return new B}function z(e){const r=R();r.startMap();for(const[t,o]of Object.entries(e))r.addKey(t),r.add(o);return r.end(),r.finish()}function y(e,r,t,o,i=1){let a;if(t===w.FLEX)a=z(e);else if(t===w.JSON)a=new TextEncoder().encode(JSON.stringify(e));else throw new Error("Unsupported format for wrapEnvelope");const n=R();return n.startMap(),n.addKey("version"),n.add(i),n.addKey("kind"),n.add(r),n.addKey("format"),n.add(t),n.addKey("payload"),n.add(a),n.addKey("metadata"),n.add(o??new Uint8Array),n.end(),n.finish()}function U(e){const r=e instanceof Uint8Array?e:new Uint8Array(e),t=E(r.buffer).toObject();if(typeof t.version!="number"||typeof t.kind!="number"||typeof t.format!="number"||!t.payload)throw console.error("[unwrapEnvelope] Bad root:",t),new Error("[unwrapEnvelope] Invalid envelope structure");const o={version:t.version,kind:t.kind,format:t.format,payload:new Uint8Array(t.payload),metadata:t.metadata?new Uint8Array(t.metadata):void 0};let i;if(o.format===w.FLEX)i=E(o.payload.buffer).toObject();else if(o.format===w.JSON)i=JSON.parse(new TextDecoder().decode(o.payload));else throw new Error(`[unwrapEnvelope] Unsupported format: ${o.format}`);return{envelope:o,payload:i}}function g(e){return E(e.buffer).toObject()}function _(e){try{const r=e instanceof Uint8Array?e:new Uint8Array(e),t=g(r);console.log("[FlexObject]",JSON.stringify(t,null,2))}catch(r){console.error("[Flex Decode Error]",r)}}function W(e,r){return(e&r)===r}function $(e,r){return y({key:e,value:r},c.SET|c.REDIS,w.FLEX)}function J(e){return y({key:e},c.GET|c.REDIS,w.FLEX)}function X(e){return y({key:e},c.DEL|c.REDIS,w.FLEX)}function G(e){const r=U(e);if(!W(r.envelope.kind,c.REDIS))throw new Error("[Redis] Not a Redis envelope");return r}function V(e,r,t="*"){return y({stream:e,id:t,fields:r},c.ADD|c.STREAM|c.REDIS,w.FLEX)}function H(e,r,t){const o=R();o.startMap(),o.addKey("streams"),o.startVector();for(const{stream:n,id:p}of e)o.startMap(),o.addKey("stream"),o.add(n),o.addKey("id"),o.add(p),o.end();o.end(),r!==void 0&&(o.addKey("count"),o.add(r)),t!==void 0&&(o.addKey("block"),o.add(t)),o.end();const i=o.finish(),a=R();return a.startMap(),a.addKey("version"),a.add(1),a.addKey("kind"),a.add(c.READ|c.STREAM|c.REDIS),a.addKey("format"),a.add(w.FLEX),a.addKey("payload"),a.add(i),a.addKey("metadata"),a.add(new Uint8Array),a.end(),a.finish()}const M={wrapEnvelope:y,unwrapEnvelope:U,MessageKind:c,PayloadFormat:w,unwrapFlexToJson:g,inspectFlex:_,hasKind:W,redis:{wrapRedisSet:$,wrapRedisGet:J,wrapRedisDel:X,wrapRedisXAdd:V,wrapRedisXRead:H,parseRedisPayload:G}};function N(e){typeof queueMicrotask=="function"?queueMicrotask(e):setTimeout(e,0)}function j(e){const r=document.createElement(e.tag);if(e.class&&(r.className=e.class),e.attrs)for(const[t,o]of Object.entries(e.attrs))if(typeof o=="function"&&t.startsWith("on"))r.addEventListener(t.slice(2).toLowerCase(),o);else if(t==="style"&&typeof o=="object")Object.assign(r.style,o);else if(t==="dataset"&&typeof o=="object")for(const[i,a]of Object.entries(o))r.dataset[i]=String(a);else try{r.setAttribute(t,String(o))}catch{}if(e.style&&Object.assign(r.style,e.style),e.children)for(const t of e.children){const o=typeof t=="string"?document.createTextNode(t):j(t);r.appendChild(o)}return r}const Y=s.enum(["top","right","bottom","left"]),q=s.object({width:s.number(),height:s.number(),mode:s.enum(["static","animated","dynamic"]).optional()});s.object({rawHtml:s.string().optional(),needsCanvas:s.boolean().optional(),canvasOptions:q.optional()});const Q=s.object({name:s.string(),version:s.string().optional()}),Z=s.object({meta:Q.optional(),timestamp:s.number()}),b=s.object({id:Y,payload:s.any().optional()}),K=s.object({timestamp:s.number()}),ee={"droid-ready":K,"droid-mod-ready":Z,"panel-open":b,"panel-close":b};class re{listeners=new Map;on(r,t){let o=this.listeners.get(r);o||(o=new Set,this.listeners.set(r,o)),o.add(t)}off(r,t){this.listeners.get(r)?.delete(t)}emit(r,t){const o=ee[r];if(o)try{o.parse(t)}catch(i){console.error(`[DroidEventBus] Invalid payload for ${r}:`,i);return}window.dispatchEvent(new CustomEvent(r,{detail:t}));for(const i of this.listeners.get(r)??[])i(t)}wait(r){return new Promise(t=>{const o=i=>{this.off(r,o),t(i)};this.on(r,o)})}}const te=new re,S="1.0.3";let I=!1;async function oe(e){let r=null;try{const t=new SharedWorker(new URL("/_astro/ws-worker-FssAQgaD.js",import.meta.url),{type:"module"});t.port.start(),r=d(t.port)}catch(t){console.warn("[DROID] ws-worker import.meta fallback failed:",t)}if(!r)try{const t=new SharedWorker(new URL("/ws-worker.js",import.meta.url),{type:"module"});t.port.start(),r=d(t.port)}catch(t){console.warn("[DROID] ws-worker hardcoded fallback failed:",t)}if(!r&&e?.workerRef)try{e.workerRef.port.start(),r=d(e.workerRef.port)}catch(t){console.warn("[DROID] ws-worker workerRef failed:",t)}if(!r&&e?.workerURL)try{const t=new SharedWorker(e.workerURL,{type:"module"});t.port.start(),r=d(t.port)}catch(t){console.warn("[DROID] ws-worker workerURL failed:",t)}if(!r)throw console.error("[DROID] No WS Worker Comlink Initialized"),new Error("[DROID] Failed to initialize ws-worker");return r}const l=T("uiux-state",{panelManager:{top:{open:!1},right:{open:!1},bottom:{open:!1},left:{open:!1}},themeManager:{theme:"auto"},toastManager:{},scrollY:0},{encode:JSON.stringify,decode:JSON.parse});async function ne(e){try{const r=new Worker(new URL("/_astro/canvas-worker-DbsoY2Xv.js",import.meta.url),{type:"module"});return d(r)}catch(r){console.warn("[DROID] Vite-style canvas-worker import failed:",r)}try{const r=new Worker(new URL("./canvas-worker.js",import.meta.url),{type:"module"});return d(r)}catch(r){console.warn("[DROID] Fallback /canvas-worker.js failed:",r)}if(e?.workerRef)try{return d(e.workerRef)}catch(r){console.warn("[DROID] Provided workerRef failed:",r)}if(e?.workerURL)try{const r=new Worker(e.workerURL,{type:"module"});return d(r)}catch(r){console.warn("[DROID] Provided workerURL failed:",r)}throw console.error("[DROID] No Canvas Comlink Initialized"),new Error("[DROID] Failed to initialize canvas worker")}const A={state:l,openPanel(e,r){const t={...l.get().panelManager};t[e]={open:!0,payload:r},l.setKey("panelManager",t)},closePanel(e){const r={...l.get().panelManager};r[e]={open:!1,payload:void 0},l.setKey("panelManager",r)},togglePanel(e,r){const t={...l.get().panelManager},o=t[e]?.open??!1;t[e]={open:!o,payload:o?void 0:r},l.setKey("panelManager",t)},setTheme(e){l.setKey("themeManager",{theme:e})},addToast(e,r){const t={...l.get().toastManager,[e]:r};l.setKey("toastManager",t)},removeToast(e){const r={...l.get().toastManager};delete r[e],l.setKey("toastManager",r)},async dispatchCanvasRequest(e,r,t="animated"){const o=r.transferControlToOffscreen();await window.kbve?.uiux?.worker?.bindCanvas(e,o,t)},closeAllPanels(){const e={...l.get().panelManager};console.log("error panel is closing");for(const r of Object.keys(e))e[r]={open:!1,payload:void 0};l.setKey("panelManager",e)},emitFromWorker(e){e.type==="injectVNode"&&e.vnode&&N(()=>{const r=document.getElementById("bento-grid-inject");if(!r){console.warn("[KBVE] No injection target found: #bento-grid-inject");return}const t=j(e.vnode);if(t.classList.add("animate-fade-in"),e.vnode.id){const o=document.getElementById(e.vnode.id);o&&o.remove()}r.appendChild(t)})}},u=T("i18n-cache",{},{encode:JSON.stringify,decode:JSON.parse}),m={store:u,api:null,ready:Promise.resolve(),get(e){return u.get()[e]??`[${e}]`},async getAsync(e){const r=u.get()[e];if(r!==void 0)return r;if(!this.api)return`[${e}]`;const t=await this.api.getTranslation(e);return t!==null?(u.setKey(e,t),t):`[${e}]`},set(e,r){u.setKey(e,r)},async hydrate(e,r){this.api=e;for(const t of r){const o=await e.getTranslation(t);o!==null&&u.setKey(t,o)}},async hydrateLocale(e="en"){if(!this.api)return;const t=(await this.api.getAllI18nKeys()).filter(i=>i.startsWith(`${e}:`)),o=await this.api.getTranslations(t);for(const[i,a]of Object.entries(o))console.log(`[i18n.setKey] ${i} = ${a}`),this.store.setKey(i,a)}};function L(){if(!navigator.serviceWorker?.controller)return;const e=new MessageChannel;navigator.serviceWorker.controller.postMessage(e.port2,[e.port2]),e.port1.start()}async function ae(e){let r=null;try{const o=new SharedWorker(new URL("/_astro/db-worker-CjXS52DQ.js",import.meta.url),{type:"module"});o.port.start(),r=d(o.port)}catch(o){console.warn("[DROID] db-worker import.meta fallback failed:",o)}if(!r)try{const o=new SharedWorker(new URL("/db-worker.js",import.meta.url),{type:"module"});o.port.start(),r=d(o.port)}catch(o){console.warn("[DROID] db-worker hardcoded fallback failed:",o)}if(!r&&e?.workerRef)try{e.workerRef.port.start(),r=d(e.workerRef.port)}catch(o){console.warn("[DROID] db-worker workerRef failed:",o)}if(!r&&e?.workerURL)try{const o=new SharedWorker(e.workerURL,{type:"module"});o.port.start(),r=d(o.port)}catch(o){console.warn("[DROID] db-worker workerURL failed:",o)}if(!r)throw console.error("[DROID] No DB Worker Comlink Initialized"),new Error("[DROID] Failed to initialize db-worker");return await r.getVersion()!==S&&await P(r,{version:S,i18nPath:"https://discord.sh/i18n/db.json",locale:"en",defaults:{welcome:"Welcome!",theme:"dark"}}),r}function ie(e,r){const t=C(async o=>{N(()=>{const i=`ws:${Date.now()}`;r.storeWsMessage(i,o)})});e.onMessage(F(t,[0]))}async function ue(e){if(console.log("[DROID]: Main<T>"),I||(I=!0,navigator.serviceWorker?.controller?L():navigator.serviceWorker?.addEventListener("controllerchange",L)),console.log("[DROID] Main<T> => Worker URLs",e?.workerURLs),!window.kbve?.api||!window.kbve?.i18n||!window.kbve?.uiux)try{console.log("[DROID] Main<T> => Worker => CanvasComlink");const t=await ne({workerRef:e?.workerRefs?.canvasWorker,workerURL:e?.workerURLs?.canvasWorker});console.log("[DROID] Main<T> => Worker => StorageComlink");const o=await ae({workerURL:typeof e?.workerURLs?.dbWorker=="string"?e.workerURLs.dbWorker:void 0,workerRef:e?.workerRefs?.dbWorker});console.log("[DROID] Main<T> => Worker => WsComlink");const i=await oe({workerRef:e?.workerRefs?.wsWorker,workerURL:e?.workerURLs?.wsWorker});console.log("[DROID] Main<T> => Worker => ModManager");const a=await x(f=>e?.workerURLs?.[f]??f),n=te;for(const f of Object.values(a.registry))typeof f.instance.init=="function"&&await f.instance.init({emitFromWorker:A.emitFromWorker}),console.log("[Event] -> Fire Mod Ready"),n.emit("droid-mod-ready",{meta:f.meta,timestamp:Date.now()});ie(i,o);const p=M;m.api=o,m.ready=m.hydrateLocale("en"),window.kbve={...window.kbve||{},api:o,i18n:m,uiux:{...A,worker:t},ws:i,data:p,mod:a,events:n},await m.ready,window.kbve.events.emit("droid-ready",{timestamp:Date.now()}),document.addEventListener("astro:page-load",()=>{console.debug("[KBVE] Re-dispatched droid-ready after astro:page-load"),window.kbve?.events.emit("droid-ready",{timestamp:Date.now()})}),console.log("[KBVE] Global API ready")}catch(t){throw console.error("[DROID] Initialization error:",t),t}else console.log("[KBVE] Already initialized")}export{ie as bridgeWsToDb,m as i18n,ue as main,A as uiux};

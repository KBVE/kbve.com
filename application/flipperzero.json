{"entry":{"id":"flipperzero/flipperzero.mdx","slug":"flipperzero","body":"\nimport Details from \"@w/Details.astro\";\nimport TabMenu from \"@w/TabMenu.astro\";\nimport TabData from \"@w/TabData.astro\";\nimport N from \"@n/N.astro\";\nimport MDXLayer from \"@l/MDXLayer.astro\";\nimport Widget from \"@w/Widget.astro\";\nimport MDXJS from \"@w/MDXJS.astro\";\n\n<MDXLayer title={frontmatter.title} description={frontmatter.description}>\n<Widget img={frontmatter.img} skeleton={false}>\n<MDXJS>\n\n\n<TabMenu first=\"general\" data={[ \"guides\", \"media\", \"notes\"]}>\n<TabData tail=\"block\" data=\"general\">\n\n## Information\n\nFlipper Zero is a portable multi-tool device for geeks that can interact with various digital systems in real life, such as RFID, radio protocols, access control systems and more.\nIt gives you full access to its source code and design, so you can tailor it to your own needs and preferences.\nYour cyber-buddy, Flipper Zero, is a cybernetic companion with a Tamagotchi-like personality that enjoys exploring and manipulating digital and analog systems.\n\n> Please be responsible with your usage of this dangerous dolphin xD\n\n<Details data=\"Metaphor for FlipperZero\">\n\n### FlipperZero Metaphors\n\nFlipper Zero is a magic wand for digital mischief.\n\n</Details>\n\n<Details data=\"ELI5 for FlipperZero\">\n\n### Explaining Flipprzero to a 5 year old!\n\nFlipper Zero is a small toy that looks like a dolphin. \nIt can talk to other toys and machines using invisible waves. \nIt can also copy what they say and pretend to be them. \nYou can use Flipper Zero to play games and learn new things. \nYou can also make it do what you want by changing its code. \nFlipper Zero is very smart and friendly, but you have to be careful not to use it for bad things.\n\n</Details>\n\n* * *\n\n## Firmware\n\n> The bundles of joy when installing various firmware for your flipperzero!\n> The main chipset on the FlipperZero stores both a \"New\" and \"Old\" firmware, thus making it a bit easier to custom load your firmware without the higher risk of bricking your device. Granted there is always a risk of bricking your device, so be very careful! Make sure wires are tight and your machine is charged.\n\nFirmware is the software that powers your Flipper Zero and lets you enjoy its amazing capabilities and control its functions and features. \nWe will teach you how to update your firmware, thus keeping your device fresh and flawless with new improvements and fixes.\nThere are different types of firmware for Flipper Zero, such as the official firmware, the release candidate firmware, the dev firmware, and the custom firmwares. \nThe official firmware is the stable version that is tested and approved by the Flipper team. \nThe release candidate firmware is the next version that is being tested before it becomes official. \nFinally the dev firmware is the latest version that has new features and changes, but it may have bugs and errors. \nIn addition, there are custom firmwares made by other users who want to modify or add something to the Flipper Zero, which we will go over later down in this document.\nYou can choose which firmware you want to use and install it using the Flipper Mobile App or the qFlipper desktop application, with more information in the #update section.\n\n* * * \n\n### Install\n\n* * *\n\n### Update\n\nOnce you get your hands on the flipperzero, we recommend that you update it to the latest firmware via qFlipper application, links below:\n\n[Official Main](https://flipperzero.one/update) Updates\nGithub Repo Updates - [Release Page](https://github.com/flipperdevices/qFlipper/releases)\n\nThere are other methods of updating, including Mobile and Web but from experience, I recommend sticking with a direct cable upgrade, to avoid possible firmware corruption.\n\n### Custom\n\nCustom firmwares are special versions of software that let you customize your Flipper Zero and unlock new possibilities. \nThey are made by creative and talented users who want to share their ideas and innovations with the Flipper community. \nYou can try different custom firmwares and see what they can do for your device!\nWe hope you find the best custom firmware to fit your needs and we recommend having multiple SD Cards with each custom firmware, so you can swap easily.\n\n#### Unleashed Firmware\n\nOfficial [Repo](https://github.com/DarkFlippers/unleashed-firmware)\n\nForked Unleashed Firmware include:\n\n[RogueMaster](https://github.com/RogueMaster/flipperzero-firmware-wPlugins)\n[v1nc](https://github.com/v1nc/flipperzero-firmware)\n\nWe will add KBVE's custom firmware in 2023.\n\n#### KBVE Firmware\n\nOur firmware is currently a private fork of Unleashed and will contain more custom HTTP/Networking additions, making it easier to operate the device in isolation and/or remote instances.\n\n* * *\n* * *\n* * *\n\n## GHz\n\n- The frequencies that FlipperZero operates in are `300-348 MMHz`, `387-464 MHz` and `770-928 MHz` bands through the `CC1101` chipset. \n\n- ### GHz Sub Menu\n\n  - `Read` - Reads & decodes the signal of the protocol within the frequency range.\n    - Lower left side will display the current frequency.\n    - Lower right side will display the remaining slots of scanned signals.\n  - `Read RAW` - Records the radio signal in RAW format.\n    - Requires a microSD for the storage of the RAW.\n  - `Saved` -\n  - `Add Manually` -\n  - `Frequency Analyzer` -\n\n#### GHZ InfoSec\n\n- 315Ghz - Common frequency that car fobs operate in.\n\n## GUI\n\nTo help with designing the GUI, we recommend checking out `Flipper UI` , which is an amazing tool for quick edits.\nSource for it can be found here : [FUI-EDITOR](https://github.com/sbrin/ilin.pt/tree/main/_stuff/fui-editor)\n\n## NFC\n\nThese are notes on the `NFC` aspect of the device.\n\n### FlipperZero NFC\n\n- NFC (13.56 MHz) module can read, save and emulate NFC cards / frequencies.\n- NFC is known as near-field communication and operates at the 13.56 MHz (which is  an unlicensed radio frequency ISM band under the ISO/IEC 18000-3).\n- Menu\n  - -> `Read` - Read && Save NFC data, including, UID, ATQA, SAK and storage data.\n  - -> `Detect Reader` - Emulation of an NFC card to grab information related to authentication keys from logs sent by a reader.\n  - -> `Saved` - Saved NFC cards on the device, which can be emulated.\n  - -> `Extra Actions` - Commands for extra functionality through custom scripts, plugins, applications on the device.\n  - -> `Add Manually` - Create an NFC card by adding the data manually.\n- NFC Terms\n  - -> `UID` is a read-only unique identifier for the specific NFC chip.\n- NFC-V\n  - Currently does not fully support ISO 15693.\n\n## pyFlipper\n\nThis is an unofficial cli wrapper for the Flipper Zero device and we will integrate it with our current eco-system, including the possible future expansion into our core IoT project.\n\n</TabData>\n\n<TabData data=\"guides\">\n\n## Guides\n\nWe definitely need more guides on the FlipperZero.\n\n</TabData>\n\n<TabData data=\"media\">\n\n## Media\n\n</TabData>\n\n<TabData data=\"notes\">\n## Notes\n\nKBVE FlipperZeros will be sold for $300 each, custom firmware, extra components, shipping and 5 support tickets? \n$180 for the Flipper Zero and $120 for services/software/extras/labor.\n\n* * *\n\n### Log\n\nThis is log collection for the KBVE MDX document on FlipperZero.\nRemember Flipper Zero is a revolutionary device that enables anyone to hack the matrix.\n\n#### Journal\n\n<Details data=\"2023-04-16\">Adding tabs to the FlipperZero MDX.</Details>\n<Details data=\"2023-04-10\">We need to add some more information for 3rd party flipper firmware.</Details>\n\n</TabData>\n</TabMenu>\n\n\n</MDXJS>\n</Widget>\n</MDXLayer>","collection":"application","data":{"title":"FlipperZero","description":"Flipper Zero is a pen test multi-tool! Think of it as a Swiss Army knife for wireless hacking.","tags":["hacks","redteam","nfc"],"author":"KBVE Team","img":"https://images.unsplash.com/photo-1525826212383-92e29530133e?fit=crop&w=1400&h=700&q=75"}}}
{"entry":{"id":"appwrite/appwrite.mdx","slug":"appwrite","body":"\nimport N from '@n/N.astro';\nimport Widget from '@w/Widget.astro';\nimport MDXJS from '@w/MDXJS.astro';\nimport MDXLayer from '@l/MDXLayer.astro';\n\n<MDXLayer title={frontmatter.title} description={frontmatter.description}>\n\n<Widget img={frontmatter.img} skeleton={false}>\n\n<MDXJS>\n\n## Information\n\nAppwrite is a cutting-edge backend server that streamlines the development of modern apps.\nWith its powerful APIs, intuitive tools, and sleek management console UI, Appwrite empowers developers to build their apps with speed and security.\nSay goodbye to the headaches of common, complex, and repetitive tasks - Appwrite has got you covered.\nGet ready to revolutionize your app development process with Appwrite!\n\n---\n\n<N ns=\"ads\" template=\"mdx2\" id=\"ezoic\" />\n\n</MDXJS>\n\n<MDXJS>\n\n## Functions\n\nGeneral documentation and information in reference to the cloud functions / open runtime for Appwrite.\n\n### Default Variables\n\nList of the common and default variables when deploying the cloud function, I am thinking of making them all inside of a `kbve.js` file, that we could then reference within our scripts.\n\n#### SDK\n\n```javascript\nconst sdk = require('node-appwrite'); // Import outside of the module function.\n```\n\nThen to call it from inside the `module.exports`\n\n```javascript\nconst client = new sdk.Client();\n\nlet account = new sdk.Account(client);\nlet avatars = new sdk.Avatars(client);\nlet database = new sdk.Database(client);\nlet functions = new sdk.Functions(client);\nlet health = new sdk.Health(client);\nlet locale = new sdk.Locale(client);\nlet storage = new sdk.Storage(client);\nlet teams = new sdk.Teams(client);\nlet users = new sdk.Users(client);\n```\n\nThe main `module.exports` is usually written like this\n\n```javascript\nmodule.exports = async function (req, res) {}; // Passing req and res\n```\n\nThe `req` contains these three main objects:\n\n`req.headers` - An object with the request headers for the function.\n`req.payload` - An object with the payload, which is the main body data.\n`req.env` - An object with the environment data.\n\nThe `res` can return two main objects:\n\n`res.send` - returns a `text` and `statusCode`.\n`res.json` - returns an `object` and `statusCode`.\n\nExample of parsing the `req.payload` check and `res.json` return.\n\n```javascript\nif (req.payload) {\n\ttry {\n\t\tpayload = JSON.parse(req.payload);\n\t} catch (error) {\n\t\terrorHandler('Corrupt payload for the function.');\n\t}\n} else {\n\terrorHandler('Missing payload for the function.');\n}\n```\n\nIn this case our `errorHandler` function would be:\n\n```javascript\nconst errorHandler = (__errorMessage, statusCode = 418) => {\n\tres.json({ data: 'error', message: __errorMessage }, statusCode);\n};\n```\n\n</MDXJS>\n\n<MDXJS>\n\n## Notes\n\nThese will be all the notes for AppWrite, as we migrate over to it.\n\n### Log\n\n- [ ] Add Guides for AppWrite\n- [ ] Add Videos for AppWrite\n\n#### Journal\n\n##### 2023-04-14\n\nAdded email configuration to the appwrite server variables.\n\n##### 2023-04-12\n\nStarting the mdx sheet for AppWrite. I will try to include all the reference material here.\n\n### License\n\n#### Appwrite License\n\nAppwrite / appwrite is licensed under the BSD 3-Clause \"New\" or \"Revised\" License located here [license.md](https://github.com/appwrite/appwrite/blob/master/LICENSE)\n\n</MDXJS>\n\n</Widget>\n</MDXLayer>\n","collection":"application","data":{"title":"AppWrite","description":"Appwrite is an open-source backend server that provides developers with core APIs to build applications. It is self-hosted and can run on any operating system. Appwrite aims to simplify backend development for developers.","tags":["auth","api","backend"],"author":"KBVE Team","img":"https://images.unsplash.com/photo-1581291518857-4e27b48ff24e?fit=crop&w=1400&h=700&q=75"}}}
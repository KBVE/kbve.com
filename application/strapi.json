{"entry":{"id":"strapi/strapi.mdx","slug":"strapi","body":"\nimport MDXLayer from \"@l/MDXLayer.astro\";\nimport Widget from \"@w/Widget.astro\";\nimport MDXJS from \"@w/MDXJS.astro\";\n\n<MDXLayer title={frontmatter.title} description={frontmatter.description}>\n<Widget img={frontmatter.img} skeleton={false}>\n<MDXJS>\n\n\n\n## Information\n\nStrapi, an open-source headless CMS written in NodeJS, is the ultimate solution for creating and managing your content in a modern and flexible way through an user-friendly admin panel.\nYou can customize every aspect of your content model and logic, and choose from a variety of databases to store your data. \nFurthermore, Strapi also supports both RESTful and GraphQL APIs, so you can easily connect your content to any front-end framework or platform you prefer.\nWhether you want to build a blog, a portfolio, an e-commerce platform, or anything else, Strapi can help you achieve your goals with ease and elegance while delivering your content faster and easier.\nThis document is design to help provide an all-inclusive breakdown of Strapi from handling the database, installation, upgrades to scaling and custom plugins. We recommend going over the different setup(s), starting with running it locally and then see how you would like to run the application.\n\n* * *\n\n## Install\n\n> Before the installation process, we recommend setting up the [database](#database).\n\nWe are currently running Node v18.x for Strapi 4.10.x but if you wish to run Strapi under Node v16.x then use Strapi version 4.0.x to 4.3.8. According to their documents, if you are planning to run the SQLite database, then you will also need to have python installed and configured. \n\nThe KBVE way of installing and operating Strapi would be with Docker via a Strapi image. However if you want to run it without any extra virtualization, then do it via locally. \n\n### Local Install\n\nThis is a simple way to run Strapi as a local installation! The command to get started is: \n```shell\nyarn create strapi-app my-project --quickstart\n```\nAfter the creation process is done then head over to: `http://localhost:1337/admin` and create your first admin account. Afterwards you can mess around with the collections and get a better feel! Skip down to the `Collections` part of this documentation for more information.\n\n### Docker Install\n\nThe KBVE way of getting Strapi up and running would be to run a docker-compose, which would pull our Strapi image, MariaDB/MySQL for the database and configure the networking / storage within your docker swarm. If you need help setting up docker and the docker swarm, then we suggest you head over to our [Docker application notes section](https://kbve.com/application/docker) for more information.\n\n## Update\n\nThere are a couple ways of updating your Strapi instance, including using docker, yarn or manually. \n\n* * *\n\n## Database\n\nStrapi supports various databases.\n\n### MySQL\n\n> Find additional information on [MySQL](https://kbve.com/application/mysql/)\n\nBelow are the generic commands for setting up a `strapi` database. \n\n- `CREATE DATABASE strapi;`\n- `CREATE USER 'strapi'@'localhost';`\n- `GRANT ALL PRIVILEGES ON strapi.* TO 'strapi'@'localhost';`\n- `ALTER USER 'strapi'@'localhost' IDENTIFIED WITH mysql_native_password BY 'strapi';`\n- `FLUSH PRIVILEGES;`\n- `EXIT;`\n\n#### What to do if you run into the `Error: ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client` error?\n\n> In this scenario, you probably did what I did and altered the password with `ALTER USER 'strapi'@'localhost' IDENTIFIED BY 'strapi';` which is incorrect, insert `WITH mysql_native_password` in there and you should be good afterwards.\n\n* * *\n\n## Security\n\n### Captcha\n\n#### hCaptcha\n\n- In the .env include the secret_key , which you can obtain from hCaptcha via their settings for the account.\n- Note: HCAPTCHA=secret_key\n\n* * *\n\n## i18n\n\n- Ref [1](https://docs.strapi.io/developer-docs/latest/plugins/i18n.html)\n- Ref [2](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n)\n- 10/11/2022 - R&D within the i18n and utilizing it on the front-end.\n- Issue [#73](https://github.com/KBVE/kbve.com/issues/73)\n\n* * *\n\n## Functions\n\n### Login\n\n- The login for Strapi can be either a combination of `username + password` or `email + password`. Both `username` and `email` are passed through as an entity defined as `indentifier`. After the login action is sucessful, the API returns two variables:\n  - User:\n    - This is the `user` data that contains the following information:\n      - `username`\n      - `userid`\n      - `email`\n      - There are other fields of information that are customizable and the schema can be referenced in our `API`.\n  - JWT:\n    - The JWT (`jwt` or `token`) is an extremely important piece of data that contains the authentication for the user. We are currently reviewing how we should go about storing this token and utilizing it later down the line.\n\n### Register\n\n- For registration, we ask the user to submit a generic form that contains the following variables:\n  - Username\n    - If the `username` is taken, Strapi does return an error back as a response stating that the `username` was taken.\n  - Email\n    - If the `email` is taken and we disable `multi-account` on the Strapi backend, then it will return an error back as a response stating that the `email` was taken.\n  - Password\n    - Password is encrypted and stored as a hashed variable within the database.\n  - Security (as a Captcha via hCaptcha)\n    - After the user solves the captcha, an one-time code is generated, which is passed along as a `token`. If the captcha is wrong or missing, the Strapi returns an error.\n- We still need to take the errors that `Strapi` sends back , parse and then render them client side.\n\n## Notes\n\n### Log\n\n#### Journal\n\n##### 2023-04-10\nUpdating the notes with a bit more information and organizing.\n\n##### 2023-03-20 \nUpdating to 4.5v and then re-organizing the notes!\n\n\n</MDXJS>\n</Widget>\n</MDXLayer>","collection":"application","data":{"title":"Strapi","description":"ðŸš€ Strapi is the leading open-source headless CMS. It is 100% JavaScript, fully customizable and developer-first. This document will provide you with everything you need to install and maintain your Strapi instance.","tags":["api","cms","nodejs"],"author":"KBVE Team","img":"https://images.unsplash.com/photo-1622279488885-d831e8e76cef?fit=crop&w=1400&h=700&q=75"}}}
{"entry":{"id":"gcloud/gcloud.mdx","slug":"gcloud","body":"\nimport Details from \"@w/Details.astro\";\nimport TabMenu from \"@w/TabMenu.astro\";\nimport TabData from \"@w/TabData.astro\";\nimport N from \"@n/N.astro\";\nimport MDXLayer from \"@l/MDXLayer.astro\";\nimport Widget from \"@w/Widget.astro\";\nimport MDXJS from \"@w/MDXJS.astro\";\n\n<MDXLayer title={frontmatter.title} description={frontmatter.description}>\n<Widget img={frontmatter.img} skeleton={false}>\n<MDXJS>\n\n\n\n<TabMenu first=\"general\" data={[\"guides\", \"media\", \"notes\"]}>\n\n<TabData tail=\"block\" data=\"general\">\n\n## Information\n\n## GCloud Compute\n\n- GCloud Compute Guide is still a work in progress; these are active notes from my current R&D.\n  - ```shell gcloud compute --help```\n    - This will display all of the commands that will help you utilize the `compute engine`.\n\n- The are split into two major concepts, with `GROUP` and `COMMAND`.\n  - According to Google, the compute command helps create, configure and manipulate the virtual machines within your pre-set project.\n  - The `SYNOPSIS` is `gcloud compute GROUP | COMMAND [GCLOUD_WIDE_FLAG ...]`\n\n## GCloud Compute Load Balancer\n\n- Command to run 3 instances of `nginx` with an ingress load balancer.\n  - Shell command for VM that is running nginx inside of a `debian` operating system.\n\n    - ```shell\n             gcloud compute instances create www-server-1 \\\n                --zone=us-west1-b \\\n                --tags=network-lb-tag \\\n                --machine-type=e2-medium \\\n                --image-family=debian-11 \\\n                --image-project=debian-cloud \\\n                --metadata=startup-script=start_nginx.sh\n        ```\n\n      - start_nginx.sh ->\n\n        - ```shell\n                            #!/bin/bash\n                            apt-get update\n                            apt-get install nginx -y\n            ```\n\n      - For switching from Nginx to Apache2, replace the `nginx` with `apache2`.\n      - To check the status on `ubuntu`, run the `sudo systemctl status nginx` OR `sudo systemctl status apache2`.\n\n    - Example of a Load Balance Template:\n      - The shell below is an example of an instance template that creates the load balance backend template.\n\n        - ```shell\n              gcloud compute instance-templates create lb-backend-template \\\n              --region=us-west1 \\\n              --network=default \\\n              --subnet=default \\\n              --tags=allow-health-check \\\n              --machine-type=e2-medium \\\n              --image-family=debian-11 \\\n              --image-project=debian-cloud \\\n              --metadata=startup-script=start_nginx_script.sh\n              ```\n\n      - Key concept is : Managed instance groups MIGs\n        - Mage instance groups or MIGs enable you to operate applications on multiple identical / clone virtual machines, thus allowing your orchestration to become scalable and highly available. This is done by utilizing the components within the automated MIG services, which includes: autoscaling, autohealing, regional (multiple zone) deployment, and automatic updating.\n    - Manage Instance Group for the load balancer:\n\n      - ```shell\n            gcloud compute instance-groups managed create lb-backend-group \\\n            --template=lb-backend-template --size=2 --zone=us-west1-b \n          ```\n\n      - Health Check:\n\n      - ```shell\n            gcloud compute firewall-rules create fw-allow-health-check \\\n            --network=default \\\n            --action=allow \\\n            --direction=ingress \\\n            --source-ranges=130.211.0.0/22,35.191.0.0/16 \\\n            --target-tags=allow-health-check \\\n            --rules=tcp:80\n            ```\n\n      - Backend-Services for gcloud compute\n\n        - ```shell\n\n            gcloud compute backend-services create web-backend-service \\\n                --protocol=HTTP \\\n                --port-name=http \\\n                --health-checks=http-basic-check \\\n                --global\n\n            ```\n\n          - Add Instance Group as the Backend to the Backend Service:\n\n            - ```shell\n                    gcloud compute backend-services add-backend web-backend-service \\\n                --instance-group=lb-backend-group \\\n                --instance-group-zone=us-west1-b \\\n                --global\n                ```\n\n          - Create a URL Map for routing the requests to the default backend services.\n\n            - ```shell\n                    gcloud compute url-maps create web-map-http \\\n                    --default-service web-backend-service\n                    ```\n\n            - Extra information regarding the URL Map:\n                    *** Note: URL map is a Google Cloud configuration resource used to route requests to backend services or backend buckets. For example, with an external HTTP(S) load balancer, you can use a single URL map to route requests to different destinations based on the rules configured in the URL map:\n                        Requests for [Video](https://example.com/video) go to one backend service.\n                        Requests for [Audio](https://example.com/audio) go to a different backend service.\n                        Requests for [Images](https://example.com/images) go to a Cloud Storage backend bucket.\n                        Requests for any other host and path combination go to a default backend service.\n            - Create a target HTTP proxy to route requests:\n\n              - ```shell\n                        gcloud compute target-http-proxies create http-lb-proxy \\\n                        --url-map web-map-http\n                ```\n\n            - Global forwarding rule to route incoming requests to the proxy:\n\n              - ```shell\n                        gcloud compute forwarding-rules create http-content-rule \\\n                        --address=lb-ipv4-1\\\n                        --global \\\n                        --target-http-proxy=http-lb-proxy \\\n                        --ports=80\n                ```\n\n## Google Rules\n\n### Google Forwarding Rules\n\nNote: A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Learn more about the general understanding of forwarding rules from the Forwarding rule overview Guide.\n\n[Using Forwarding Rules](https://cloud.google.com/load-balancing/docs/using-forwarding-rules)\n[Rule Concepts](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts)\n\n</TabData>\n\n<TabData data=\"guides\">\n\n## Guides\n\n</TabData>\n\n<TabData data=\"media\">\n\n## Media\n\n</TabData>\n\n<TabData data=\"notes\">\n\n## Notes\n\n### Log\n\n#### Journal\n\n<Details data=\"2023-04-16\">Updated GCloud with tabs. </Details>\n\n</TabData>\n</TabMenu>\n\n\n</MDXJS>\n</Widget>\n</MDXLayer>","collection":"application","data":{"title":"GCloud","description":"GCloud is a Command Line Interface that designs, builds and scales Google Cloud resources.","tags":["cloud"],"author":"KBVE Team","img":"https://images.unsplash.com/photo-1498354136128-58f790194fa7?fit=crop&w=1400&h=700&q=75"}}}
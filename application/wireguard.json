{"entry":{"id":"wireguard/wireguard.mdx","slug":"wireguard","body":"\nimport Github from \"@w/Github.astro\";\nexport const components = { github: Github };\nimport MDXLayer from \"@l/MDXLayer.astro\";\nimport Widget from \"@w/Widget.astro\";\nimport MDXJS from \"@w/MDXJS.astro\";\n\n<MDXLayer title={frontmatter.title} description={frontmatter.description}>\n<Widget img={frontmatter.img} skeleton={false}>\n<MDXJS>\n\n\n\n## Wireguard\n\n* * *\n\n## Install\n\n- Docker Compose\n  - <Github src=\"data/wireguard/docker-compose.yml\" description=\"This is a docker compose for wireguard.\" />\n\n- Ubuntu Installation Guide\n  - Core Pre-Installation\n    - Make sure your docker install is setup! If you need more information, please visit our Docker application page.\n    - Check your firewall, are you using `ufw` , `iptables` or `nftables`\n  - Firewall\n    - Wireguard will be operating on the `UDP` port of `51820`.\n    - For: `ufw`\n      - To enable the port through `ufw` run `sudo allow 51821/udp`\n\n## Netmaker\n\n- Netmaker is a Wireguard automation application that handles self-hosted homelabs to small business / enterprise networking.\n- [Official Github Repo](https://github.com/gravitl/netmaker)\n\n## Netmaker Install\n\n- Advance install for netmaker allows the setup of a highly available installation within Kubernetes through helm.\n- The *default* settings may not install `wireguard` at the kernel level (for security reasons) and default to Postgres for storage.\n  - Not having kernel level wireguard may cause performance drops and they recommend that you install wireguard before beginning.\n- Helm Install Commands:\n\n  - ```shell\n    helm repo add netmaker https://gravitl.github.io/netmaker-helm/\n    helm repo update\n    ```\n  \n  - If you do not have `helm` or `kubernetes` setup, we recommend you visit our [kubernetes setup](https://kbve.com/application/k8s).\n- The storage of the certificates will be an issue for this netmaker cluster, they recommend two types of storage classes:\n  - `RWO` - `Read Write Once` - Storage instance where only a single node is allowed to access the storage volume at a time for read and write access.\n  - `RWX` - `Read Write Many` - Storage instance where many nodes can concurrently read and write to the storage volume.\n\n</MDXJS>\n</Widget>\n</MDXLayer>","collection":"application","data":{"title":"Wireguard","description":"A open source communication protocol that implements encrypted virtual private networks.","tags":["vm","host","security"],"author":"KBVE Team","img":"https://images.unsplash.com/photo-1649429398909-db7ae841c386?fit=crop&w=1400&h=700&q=75"}}}
{"entry":{"id":"php/php.mdx","slug":"php","body":"\nimport Details from \"@w/Details.astro\";\nimport TabMenu from \"@w/TabMenu.astro\";\nimport TabData from \"@w/TabData.astro\";\nimport N from \"@n/N.astro\";\nimport MDXLayer from \"@l/MDXLayer.astro\";\nimport Widget from \"@w/Widget.astro\";\nimport MDXJS from \"@w/MDXJS.astro\";\n\n<MDXLayer title={frontmatter.title} description={frontmatter.description}>\n<Widget img={frontmatter.img} skeleton={false}>\n<MDXJS>\n\n\n<TabMenu first=\"general\" data={[\"guides\",\"functions\", \"media\", \"notes\"]}>\n\n<TabData tail=\"block\" data=\"general\">\n\n## PHP\n\n! This needs to be rewritten. Its too memey.\n\nPHP is a popular and powerful scripting language that can create dynamic and interactive web pages.\nHP has many advantages and features that make it a widely-used, free, and efficient tool for web development. \nPHP is a server-side scripting language, which means that it runs on the web server and not on the browser. \nThis allows PHP to interact with databases, files, sessions, cookies, and other web services.\nPHP is also open-source, which means that it is free to download and use, and that anyone can contribute to its development and improvement. \nPHP is very simple to learn and use, as it can be embedded within HTML code and has a syntax that is similar to C and Java.\nPHP supports multiple platforms, web servers, and databases, as well as object-oriented, procedural, and functional programming paradigms.\nPHP also has many extensions and libraries for various purposes, such as graphics, encryption, XML parsing, email sending, and more.\nIn conclusion, PHP is a versatile and convenient scripting language that can create dynamic and interactive web pages with ease and efficiency.\n\n\n</TabData>\n\n<TabData data=\"guides\">\n\n## Guides\n\n</TabData>\n\n\n<TabData data=\"functions\">\n\n## Functions\n\n#### SS_BETWEEN\n\n```php\n\n<?php\n// Credit: AADude\n function ss_between($string,$start,$end) {\n   $string=\" \".$string; //The string.\n   $startpos=strpos($string,$start); //Find the position of the start string.\n   //Check if $startpos equals zero.\n   if ($startpos == 0) {\n      //If $startpos does equal zero, do this:\n      return false; //Return false.\n   }\n   else {\n      //If $startpos doesn't equal zero, do this:\n      $startpos+=strlen($start); //Add the string length of $start to $startpos.\n      $endpos=strpos($string,$end,$startpos)-$startpos; //Find the string position of $end.\n      return substr($string,$startpos,$endpos); //Return the new value.\n   }\n}\n\n// Proof of Of Concept\n$source = \"U:holybyteE:acid@meme.com\";\n$u = ss_between($source, \"U:\", \"E:\");\n// $source = line 1 of text file\necho $u;\n// return username\n \n?>\n\n```\n</TabData>\n\n<TabData data=\"media\">\n\n## Media\n\n</TabData>\n\n<TabData data=\"notes\">\n\n## Notes\n\n### Log\n\n#### Journal\n\n<Details data=\"2023-04-16\">Updated PHP with tabs. </Details>\n\n</TabData>\n</TabMenu>\n\n</MDXJS>\n</Widget>\n</MDXLayer>","collection":"application","data":{"title":"PHP","description":"PHP","tags":["software"],"author":"KBVE Team","img":"https://images.unsplash.com/photo-1599507593499-a3f7d7d97667?fit=crop&w=1400&h=700&q=75"}}}
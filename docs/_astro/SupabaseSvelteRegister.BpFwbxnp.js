import{a as dt,M as ut,N as T,I as ht,O as gt,l as ft,b as pt,i as mt,t as U,P as wt,Q as j,J as Ae,K as Le,R as H,d as q,f as G,j as h,g as yt,k as S,S as Fe,n as bt,F as _,D as $,E as A,r as b,q as k,T as vt,U as Ue,V as kt,v as V,w as v,W as Ct,X,A as Y}from"./svelte.BEh2_tzM.js";import{p as Be,a as xt}from"./@nanostores.CPtJN9Fh.js";import{t as Pt,m as $t,a as Re}from"./nanostores.qAfxXu-z.js";import{c as Nt}from"./@supabase.DGsB2ARl.js";import{D as fe}from"./dexie.BhSgi5Im.js";import{R as Dt,r as ue,j as Q}from"./react.Yb-Yb6pG.js";import{a as P}from"./axios.Bw-gCGc_.js";import"./esm-env.rsSWfq8L.js";import"./@react-three.HOJu3ppJ.js";import"./Page.astro_astro_type_script_index_0_lang.C3tW_ZgR.js";var ze=(e=>(e.DARK="dark",e.LIGHT="light",e))(ze||{});const Oe={hcaptcha:"5ba581fa-b6fc-4bb0-8222-02fcd6a59e35",hcaptcha_api:"https://js.hcaptcha.com/1/api.js",api:"https://supabase.kbve.com",anonKey:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJyb2xlIjogImFub24iLAogICJpc3MiOiAic3VwYWJhc2UiLAogICJpYXQiOiAxNzI0NTM2ODAwLAogICJleHAiOiAxODgyMzAzMjAwCn0._fmEmblm0afeLoPXxt8wP2mYpa9gzU-ufx3v8oRTFGg"},Z={_state:{...Oe},get(){return{...this._state}},set(e){this._state={...this._state,...e}},reset(){this._state={...Oe}},toString(){return JSON.stringify(this._state,null,2)},getKey(e){return this._state[e]}},F="0123456789ABCDEFGHJKMNPQRSTVWXYZ";function St(e,t,a){for(;e.length<t;)e=a+e;return e}function _t(){const e=Math.floor(32*Math.random());return F.charAt(e)}function It(e){let t="";for(let a=0;a<e;a++)t+=_t();return t}function Et(e,t){let a="";for(let s=t-1;s>=0;s--){a=F.charAt(e%32)+a,e=Math.floor(e/32)}return St(a,t,F[0])}function Je(){const e=Et(Date.now(),10)+It(16);return{toString:()=>e,valueOf:()=>e}}const Mt={id:"",title:"",description:"",journals:[],isComplete:!1,reward:""},Tt={backpack:[],equipment:{head:null,body:null,legs:null,feet:null,hands:null,weapon:null,shield:null,accessory:null}},We={},At={inCombat:!1,isDead:!1,isResting:!1,activeBoosts:{}},Lt={username:"Guest",health:"100",mana:"100",energy:"100",maxHealth:"100",maxMana:"100",maxEnergy:"100",armour:"0",agility:"0",strength:"0",intelligence:"0",experience:"0",reputation:"0",faith:"0"},Ft={stats:Lt,inventory:Tt,state:At},Ut={tooltipItem:{id:null,position:{x:0,y:0}},submenuItem:{id:null,position:{x:0,y:0}},tooltipNPC:{id:null,position:{x:0,y:0}},isStatsMenuCollapsed:!1,isSettingsMenuCollapsed:!1,debugMode:!1,textSpeed:40},Ot={gamemode:"Idle",action:{type:"ROLL_DICE",diceValues:[],isRolling:!1},textures:{side1:"",side2:"",side3:"",side4:"",side5:"",side6:""}};function E(e,t){return Be(e,t,{encode:e=>JSON.stringify(e),decode(e){try{return JSON.parse(e)}catch{return t}}})}E("playerData",Ft),E("quest",Mt),E("items",We),E("notifications",[]),E("itemDB",We);const he=E("settings",Ut);E("minigameState",Ot);const Jt=e=>he.get()[e],He=(e,t)=>{Pt((async()=>{const a=he.get();he.set({...a,[e]:t})}))},jt=()=>{He("debugMode",!0)},Bt=()=>{He("debugMode",!1)},ee=()=>Jt("debugMode"),K=e=>"string"==typeof e?e:JSON.stringify(e,null,2),Rt=e=>{ee()&&console.log(`[DEBUG] ${K(e)}`)},zt=e=>{ee()&&console.warn(`[DEBUG] ${K(e)}`)},Wt=(e,t)=>{ee()&&(t instanceof Error?console.error(`[DEBUG] ${K(e)} - Error: ${t.message}\n${t.stack}`):console.error(`[DEBUG] ${K(e)}`))},o={enable:jt,disable:Bt,isEnabled:ee,log:Rt,warn:zt,error:Wt};class Ht{constructor(){this.events={},this.lastEmitted=new Map}on(e,t){this.events[e]||(this.events[e]=[]),this.events[e]?.push(t)}off(e,t){this.events[e]&&(this.events[e]=this.events[e]?.filter((e=>e!==t)))}emit(e,t,a=0,s){const r=Date.now();if(r-(this.lastEmitted.get(e)||0)>=a){if(!this.events[e])return;this.events[e]?.forEach((e=>e(t))),s&&o.isEnabled()&&o.log(`Event: ${String(e)} - Message: ${s}`),o.isEnabled()&&o.log(`Event Data: ${String(e)} - Data: ${t?JSON.stringify(t):"No data"}`),this.lastEmitted.set(e,r)}}}const I=new Ht,ge={id:"",email:"",updatedAt:new Date,fullName:"Guest",username:"Guest"},L=$t(ge),je=Re(!1),B=Re(null);class qe extends fe{constructor(){super("KilobaseDB"),this.supabase=null,this.profileKey="userProfile",this.handleUserRedirect=e=>{if(!e||!e.location)return;const{location:t,timer:a=0,replace:s=!1}=e;console.log(`Redirecting user to: ${t} in ${a}ms`),setTimeout((()=>{this.cleanupEventListeners(),s?window.location.replace(t):window.location.href=t}),a)},this.version(1).stores({keyValueStore:"key",profiles:"&id, email",errorLogs:"++id, actionId, message, timestamp",actionULID:"&id, action, timestamp, status, errorId"}),this.profiles=this.table("profiles"),this.errorLogs=this.table("errorLogs"),this.actionULID=this.table("actionULID"),this.supabase=this.initializeSupabaseClient(),this.initializeEventListeners()}initializeEventListeners(){I.on("redirectUser",this.handleUserRedirect)}cleanupEventListeners(){I.off("redirectUser",this.handleUserRedirect)}initializeSupabaseClient(){if(typeof window<"u"&&window.supabase&&(console.log("Using global Supabase client instance:",window.supabase),this.supabase=window.supabase),!this.supabase)try{this.supabase=Nt(Z.get().api,Z.get().anonKey),console.log("Supabase client instance created:",this.supabase),typeof window<"u"&&(window.supabase=this.supabase)}catch(e){throw console.error("Error creating Supabase client:",e),e}return this.supabase}getSupabaseClient(){return this.supabase}async registerUser(e,t,a,s,r,i){const o=this.getSupabaseClient();if(!o)return null;try{if(t!==a)return await this.handleAuthError({message:"Password and confirm password do not match."},s),null;const{data:n,error:l}=await o.auth.signUp({email:e,password:t,options:{captchaToken:i,data:{username:r,full_name:r}}});if(l)return await this.handleAuthError(l,s),null;if(n?.user){const e={id:n.user.id,email:n.user.email||"",username:n.user.user_metadata?.username||void 0,fullName:n.user.user_metadata?.full_name||void 0,updatedAt:new Date(n.user.updated_at||Date.now())};return await this.saveProfile(e),await this.updateActionStatus(s,"completed"),e}}catch(e){return await this.handleAuthError(e,s),null}return null}async createActionULID(e){const t=Je().toString(),a={id:t,action:e,timestamp:new Date,status:"pending"};return await this.actionULID.add(a),t}async handleAuthError(e,t){let a="An unknown error occurred. Please try again.",s={...e},r="";e?.message&&(a=e.message),e?.code&&(r+=`Error Code: ${e.code}. `),e?.status&&(r+=`Status: ${e.status}. `),e?.supabaseCode&&(r+=`Supabase Code: ${e.supabaseCode}. `),e?.details&&(r+=`Details: ${JSON.stringify(e.details)}. `),r&&(a=`${a} (${r.trim()})`);const i={invalid_grant:"Invalid credentials provided.",invalid_request:"The request is missing a required parameter.",expired_token:"The token has expired. Please log in again.",invalid_token:"The token provided is invalid. Please try again.",email_already_exists:"The email address is already in use.",user_already_exists:"A user with this identifier already exists. Please log in instead.",invalid_password:"The password provided is incorrect."};switch(e?.code&&i[e.code]&&(a=i[e.code]),e?.status){case 400:a="Bad request. Please check the input fields.";break;case 401:a="Unauthorized. Please check your credentials.";break;case 403:a="Forbidden. You do not have permission to perform this action.";break;case 404:a="Resource not found. Please try again.";break;case 422:a="Unprocessable entity. Please check the provided data.";break;case 500:a="Internal server error. Please try again later.";break;default:a=a||"An unknown error occurred. Please try again."}throw await this.logError(a,{...s,supabaseCode:e?.code,statusCode:e?.status},t),console.error("Authentication Error:",a),new Error(a)}async saveProfile(e){try{await this.table("keyValueStore").put({key:this.profileKey,value:e}),e.username&&B.set(e.username),L.set(e),console.log("Profile saved locally:",e)}catch(e){console.error("Failed to save profile locally:",e)}}async loadProfile(){try{const e=await this.table("keyValueStore").get(this.profileKey);if(e?.value)return L.set(e.value),void console.log("Profile loaded from local storage:",e.value);await this.loadProfileFromSupabase()}catch(e){console.error("Failed to load profile:",e)}}async loadProfileFromSupabase(){const e=this.getSupabaseClient();if(e)try{je.set(!0);const{data:{user:t},error:a}=await e.auth.getUser();if(a)return console.error("Failed to get authenticated user from Supabase:",a),void await this.logError("Failed to get authenticated user from Supabase",a);if(!t)return void console.warn("No authenticated user found");const{data:s,error:r}=await e.from("user_profiles").select("id, username, updated_at").eq("id",t.id).single();if(r)return console.error("Failed to load user profile from Supabase:",r),void await this.logError("Failed to load user profile from Supabase",r);if(s){const e={id:s.id,email:t.email||"",username:s.username||void 0,fullName:t.user_metadata?.full_name||void 0,updatedAt:new Date(s.updated_at)};await this.saveProfile(e),console.log("Profile loaded and saved from Supabase:",e)}}catch(e){console.error("An unexpected error occurred while loading the profile:",e),await this.logError("An unexpected error occurred while loading the profile",e)}finally{je.set(!1)}}async removeProfile(){const e=this.getSupabaseClient();if(e)try{const t=L.get();await this.table("keyValueStore").delete(this.profileKey),await this.profiles.delete(t.id),L.set(ge),console.log(`Profile ${t.id} removed locally and store reset`),B.set(null);const{error:a}=await e.auth.signOut();a?(await this.logError("Failed to log out user from Supabase",a),console.error("Failed to log out user from Supabase:",a)):console.log("User logged out successfully from Supabase.")}catch(e){await this.logError("Failed to remove profile",e),console.error("Failed to remove profile:",e)}}async getProfile(){const e=L.get();if(""!==e.id)return e;try{const e=await this.table("keyValueStore").get(this.profileKey);if(e?.value){const t=e.value;return L.set(t),t}}catch(e){console.error("Failed to get profile from Dexie:",e)}return ge}async createAction(e){const t={id:Je().toString(),action:e,timestamp:new Date,status:"pending"};return await this.actionULID.add(t),t}async updateActionStatus(e,t,a){await this.actionULID.update(e,{status:t,errorId:a})}async logError(e,t,a){try{let s=null;if(a&&(s=await this.errorLogs.where("actionId").equals(a).first()),s)return void console.warn(`Error already exists for actionId: ${a}. Skipping new error log.`);const r={message:e,details:t,actionId:a,timestamp:new Date},i=await this.errorLogs.add(r);console.log("Error logged to Dexie:",r),a&&await this.updateActionStatus(a,"failed",i)}catch(e){console.error("Failed to log error:",e)}}async extractAuthErrorDetails(e){if(!e)return"Unknown error occurred. No error details available.";let t=e.message||"Unknown error occurred",a="";return e?.code&&(a+=`Error Code: ${e.code}. `),e?.status&&(a+=`Status: ${e.status}. `),e?.supabaseCode&&(a+=`Supabase Code: ${e.supabaseCode}. `),e?.details&&(a+=`Details: ${JSON.stringify(e.details)}. `),a&&(t=`${t} (${a.trim()})`),t}async getDetailedErrorByActionId(e){try{const t=await this.errorLogs.where("actionId").equals(e).last();return t?this.extractAuthErrorDetails(t):null}catch(t){return console.error(`Failed to retrieve detailed error for actionId: ${e}`,t),null}}async getErrorByActionId(e){try{const t=await this.errorLogs.where("actionId").equals(e).last();return t?t.message:null}catch(t){return console.error(`Failed to retrieve error for actionId: ${e}`,t),null}}async loginUser(e,t,a,s){const r=this.getSupabaseClient();if(!r)return null;try{const{data:i,error:o}=await r.auth.signInWithPassword({email:e,password:t,options:{captchaToken:s}});if(o)return await this.handleAuthError(o,a),null;if(i?.user){const e={id:i.user.id,email:i.user.email||"",username:i.user.user_metadata?.username||void 0,fullName:i.user.user_metadata?.full_name||void 0,updatedAt:new Date(i.user.updated_at||Date.now())};return await this.saveProfile(e),console.log("User logged in successfully:",e),e}}catch(e){return await this.handleAuthError(e,a),null}return null}async getSession(){const e=this.getSupabaseClient();if(!e)return null;try{const{data:t,error:a}=await e.auth.getSession();return a?(console.error("Failed to retrieve session:",a),null):t.session||null}catch(e){return console.error("Error getting session:",e),null}}async getUsername(){if(B.get())return B.get();try{const e=await this.table("keyValueStore").get(this.profileKey);if(e?.value?.username)return B.set(e.value.username),e.value.username}catch(e){console.error("Failed to get username from Dexie:",e)}return null}static createPersistentAtom(e,t){return Be(e,t,{encode:JSON.stringify,decode:JSON.parse})}createPersistentMap(e,t){return xt(e,t,{encode:JSON.stringify,decode:JSON.parse})}updateAtomField(e,t,a){e.set({...e.get(),[t]:a})}updateMapField(e,t,a){const s={...e.get(),[t]:a};e.set(s)}removeMapField(e,t){const a=e.get(),{[t]:s,...r}=a;e.set(r)}removeAtomField(e,t){const a=e.get(),{[t]:s,...r}=a;e.set(r)}resetState(e,t){e.set(t)}getPersistentAtom(e){return e.get()}}qe.createPersistentAtom("atlas",{plugin:[]});const R=new qe;function qt(e){const{elementIdOrName:t,duration:a=500,onComplete:s}=e;let r=null;if(r=document.getElementById(t),!r){const e=document.getElementsByName(t);e.length>0&&(r=e[0])}r?r instanceof HTMLElement?(o.log(`Removing loader element with ID or name "${t}" with duration ${a}ms.`),r.classList.add("opacity-0","transition-opacity",`duration-${a}`),setTimeout((()=>{r&&(r.style.display="none"),o.log(`Loader element with ID or name "${t}" has been hidden.`),s&&s()}),a)):o.error(`Element found by "${t}" is not an HTMLElement.`):o.error(`Loader element with ID or name "${t}" not found.`)}class Gt extends fe{constructor(){super("MapDatabase"),this.chunkSize=10,this.tileWidth=32,this.tileHeight=32,this.chunkWidth=this.chunkSize*this.tileWidth,this.chunkHeight=this.chunkSize*this.tileHeight,this.scale=1,this.displayedChunks=new Set,this.version(1).stores({maps:"tilemapKey",jsonFiles:"tilemapKey",tilesetImages:"tilemapKey",chunks:"[tilemapKey+chunkX+chunkY]",tileJsonData:"tilemapKey"}),this.maps=this.table("maps"),this.jsonFiles=this.table("jsonFiles"),this.tilesetImages=this.table("tilesetImages"),this.chunks=this.table("chunks"),this.tileJsonData=this.table("tileJsonData")}resetMapSettings(){this.displayedChunks.clear()}async initializeMapDatabase(){const e="/api/mapdb.json",t="https://kbve.com/api/mapdb.json";let a;try{a=(await P.get(e)).data,o.log(`Map database loaded from ${e}`)}catch{o.warn(`Failed to load map database from ${e}, trying fallback URL.`);try{a=(await P.get(t)).data,o.log(`Map database loaded from ${t}`)}catch{return void o.error(`Failed to load map database from both ${e} and ${t}`)}}if(a&&a.key){for(const e in a.key)if(Object.prototype.hasOwnProperty.call(a.key,e)){const t=a.key[e];await this.addMap(t),await this.addJsonData(e,t.jsonDataUrl);const s=await this.fetchTilesetImage(t.tilesetImageUrl);s&&await this.addTilesetImage(e,s)}o.log("Map database initialized and data loaded.")}else o.error("Invalid map database format.")}async addMap(e){await this.maps.put(e)}async getMap(e){return await this.maps.get(e)}async addJsonData(e,t){await this.jsonFiles.put({tilemapKey:e,jsonData:t})}async getJsonData(e){return(await this.jsonFiles.get(e))?.jsonData}async addTilesetImage(e,t){await this.tilesetImages.put({tilemapKey:e,imageData:t})}async getTilesetImage(e){return(await this.tilesetImages.get(e))?.imageData}async getBounds(e){return(await this.maps.get(e))?.bounds}async getNpcsFromTilesetKey(e){const t=await Vt.getMap(e);if(t)return t.npcs;o.error(`No map data found for tilesetKey: ${e}`)}async fetchMapData(e){try{return(await P.get(e)).data}catch(t){return void o.error(`Failed to fetch map data from ${e}:`,t)}}async fetchJsonData(e){try{return(await P.get(e)).data}catch(t){return void o.error(`Failed to fetch JSON data from ${e}:`,t)}}async fetchTilesetImage(e){try{return(await P.get(e,{responseType:"blob"})).data}catch(t){return void o.error(`Failed to fetch tileset image from ${e}:`,t)}}async initializeMap(e,t,a,s){try{const r=await this.fetchMapData(t);if(r){await this.addMap(r);const t=await this.fetchJsonData(a);t&&await this.addJsonData(e,t);const i=await this.fetchTilesetImage(s);i&&await this.addTilesetImage(e,i)}}catch(e){o.error("Failed to initialize map database:",e)}}async loadMapIntoScene(e,t){const a=await this.getMap(t);if(!a)return void o.error(`Map with key ${t} not found`);const s=await this.getJsonData(t);if(!s)return void o.error(`JSON data for map ${t} not found`);const r=await this.getTilesetImage(t);if(!r)return void o.error(`Tileset image for map ${t} not found`);let i=null;try{i=URL.createObjectURL(r)}catch(e){return void o.error(`Failed to create object URL for tileset image: ${e}`)}i?(e.load.tilemapTiledJSON(t,s),e.load.image(a.tilesetKey,i),e.load.once("complete",(()=>{const s=e.make.tilemap({key:t}),r=s.addTilesetImage(a.tilesetName,a.tilesetKey);if(r)for(let e=0;e<s.layers.length;e++){const t=s.createLayer(e,r,0,0);t?t.scale=a.scale:o.error(`Layer ${e} could not be created.`)}else o.error(`Tileset ${a.tilesetName} could not be created.`)})),e.load.start()):o.error(`Tileset image URL for map ${t} could not be created.`)}async loadMap(e,t){const a=await this.getMap(t);if(!a)throw new Error(`Map with key ${t} not found`);const s=await this.getJsonData(t);if(!s)throw new Error(`JSON data for map ${t} not found`);const r=await this.getTilesetImage(t);if(!r)throw new Error(`Tileset image for map ${t} not found`);let i=null;try{i=URL.createObjectURL(r)}catch(e){throw new Error(`Failed to create object URL for tileset image: ${e}`)}if(!i)throw new Error(`Tileset image URL for map ${t} could not be created.`);return e.load.tilemapTiledJSON(t,s),e.load.image(a.tilesetKey,i),new Promise((s=>{e.load.once("complete",(()=>{const r=e.make.tilemap({key:t});if(r.addTilesetImage(a.tilesetName,a.tilesetKey)){for(let e=0;e<r.layers.length;e++){const t=r.createLayer(e,a.tilesetName,0,0);t?t.scale=a.scale:console.error(`Layer ${e} could not be created.`)}s(r)}else console.error(`Tileset ${a.tilesetName} could not be created.`),s(null)})),e.load.start()}))}async prepareMapLoad(e){if(!await this.getMap(e))throw new Error(`Map with key ${e} not found`);if(!await this.getJsonData(e))throw new Error(`JSON data for map ${e} not found`);const t=await this.getTilesetImage(e);if(!t)throw new Error(`Tileset image for map ${e} not found`);let a=null;try{a=URL.createObjectURL(t)}catch(e){throw new Error(`Failed to create object URL for tileset image: ${e}`)}if(!a)throw new Error(`Tileset image URL for map ${e} could not be created.`);await this.chunkMap(e)}async getParsedJsonData(e){const t=await this.tileJsonData.get(e);if(t)return t.jsonContent;const a=await this.jsonFiles.get(e);if(!a)return o.error(`JSON file path for ${e} not found`),null;try{const t=(await P.get(a.jsonData)).data;return await this.tileJsonData.put({tilemapKey:e,jsonContent:t}),t}catch(t){return o.error(`Failed to fetch or parse JSON data for ${e}:`,t),null}}async addChunk(e,t,a,s,r){o.log(`Adding chunk for (${t}, ${a}) of ${e}`),o.log(`Chunk data: ${s}`),await this.chunks.put({tilemapKey:e,chunkX:t,chunkY:a,jsonData:s,imageData:r})}async getChunk(e,t,a){const s=await this.chunks.get([e,t,a]);return o.log(`Retrieved chunk for (${t}, ${a}) of ${e}: ${s}`),s}async removeChunk(e,t,a){await this.chunks.delete([e,t,a])}async removeChunks(e,t){const a=t.map((({chunkX:t,chunkY:a})=>this.removeChunk(e,t,a)));await Promise.all(a)}async extractChunkJsonData(e,t,a,s){const r=await this.getParsedJsonData(e);if(!r)return o.error(`Parsed JSON data for map ${e} not found`),null;const i=t*s,n=a*s,l=Math.min(i+s,r.width),d=Math.min(n+s,r.height),c=[];for(let e=n;e<d;e++){const t=r.layers[0].data.slice(e*r.width+i,e*r.width+l);c.push(...t)}return{...r,width:l-i,height:d-n,layers:[{...r.layers[0],data:c}]}}async getMapDimensions(e){const t=await this.getParsedJsonData(e);if(!t)return void o.error(`Failed to retrieve JSON data for ${e}`);const a=t.width,s=t.height;if(a>0&&s>0)return{width:a,height:s};o.error(`Invalid JSON data for map ${e}`)}async chunkMap(e){const t=await this.getMapDimensions(e);if(!t)return void o.error(`Failed to retrieve dimensions for map ${e}`);const{width:a,height:s}=t,r=Math.ceil(a/10),i=Math.ceil(s/10);o.log(`Starting chunkMap for ${e}`);for(let t=0;t<r;t++)for(let a=0;a<i;a++){const s=await this.extractChunkJsonData(e,t,a,10);s?(o.log(`Storing chunk (${t}, ${a}) for ${e}`),await this.addChunk(e,t,a,s)):o.error(`Failed to extract JSON data for chunk (${t}, ${a}) of ${e}`)}o.log(`Finished chunkMap for ${e}`)}async loadChunkIntoScene(e,t,a,s){const r=await this.getChunk(t,a,s);if(!r)return void o.error(`Chunk data for (${a}, ${s}) not found`);const i=`${t}_${a}_${s}`;if(!await this.getMap(t))return void o.error(`Map data not found for ${t}`);const n=r.jsonData.tilesets[0].name;if(!e.textures.exists(n)){const a=await this.getTilesetImage(t);if(!a)return void o.error(`Failed to load tileset image for ${n}`);{const t=URL.createObjectURL(a);e.load.image(n,t),await new Promise((t=>e.load.once("complete",t))),e.load.start()}}e.load.tilemapTiledJSON(i,r.jsonData),await new Promise((t=>e.load.once("complete",t))),e.load.start();const l=e.make.tilemap({key:i}),d=l.addTilesetImage(n);d?l.layers.forEach(((e,t)=>{const r=l.createLayer(t,d,0,0);r?(r.setScale(this.scale),o.log(`Layer ${t} created for chunk (${a}, ${s}) with tileset ${n}.`)):o.error(`Layer ${t} could not be created for chunk (${a}, ${s}).`)})):o.error(`Tileset ${n} could not be added to tilemap.`)}removeChunkFromScene(e,t,a,s){const r=`${t}_${a}_${s}`,i=e.make.tilemap({key:r});i&&i.destroy(),e.cache.tilemap.remove(r)}async updateVisibleChunks(e,t,a,s,r){if(!await this.getMap(t))return void console.error(`Map data for ${t} not found`);const i=this.tileWidth,o=this.tileHeight,n=this.chunkSize,l=Math.floor(a/(n*i)),d=Math.floor(s/(n*o)),c=new Set;for(let a=-r;a<=r;a++)for(let s=-r;s<=r;s++){const r=l+a,i=d+s,o=`${r},${i}`;r>=0&&i>=0&&(await this.loadChunkIntoScene(e,t,r,i),c.add(o))}for(const a of this.displayedChunks)if(!c.has(a)){const[s,r]=a.split(",").map(Number);this.removeChunkFromScene(e,t,s,r)}this.displayedChunks=c}async loadNewMap(e,t,a,s){o.log(`Loading map with key: ${t}`),this.resetMapSettings();const r=await this.getMap(t);if(!r)return o.error(`Map data not found for ${t}`),null;const i=Math.floor(a/(this.chunkWidth||1)),n=Math.floor(s/(this.chunkHeight||1)),l=await this.getChunk(t,i,n);if(!l)return o.error(`Chunk (${i}, ${n}) not found for ${t}`),null;const d=r.tilesetKey;if(!e.textures.exists(d)){const a=await this.getTilesetImage(t);if(!a)return o.error(`Failed to load tileset image for ${d}`),null;{const t=URL.createObjectURL(a);e.load.image(d,t),await new Promise((t=>{e.load.once("complete",t),e.load.start()}))}}const c=`${t}_${i}_${n}`;e.load.tilemapTiledJSON(c,l.jsonData),await new Promise((t=>e.load.once("complete",t))),e.load.start();const u=e.make.tilemap({key:c});if(!u)return o.error(`Tilemap could not be created for chunk (${i}, ${n})`),null;const h=u.addTilesetImage(r.tilesetName,d);if(!h)return o.error(`Tileset ${d} could not be added to tilemap.`),null;for(let e=0;e<u.layers.length;e++){const t=u.createLayer(e,h,0,0);t?(t.setScale(r.scale||this.scale),o.log(`Layer ${e} created for initial chunk.`)):o.error(`Layer ${e} could not be created.`)}return u}}const Vt=new Gt,Xt=({text:e,speed:t=80,onComplete:a})=>{const[s,r]=ue.useState([]),i=ue.useRef([]);return ue.useEffect((()=>{let s,o=0;const n=e.split(/(<\/?span[^>]*>)/g).filter(Boolean),l=[];n.forEach(((e,t)=>{if(e.startsWith("<span")||e.startsWith("</span")){const a=e.match(/<span class="([^"]*)">/);if(a){const e=a[1];l.push(Q.jsx("span",{className:e},`span-${t}`))}else l.push(Q.jsx("span",{},`span-${t}`))}else e.split("").forEach(((e,a)=>{l.push(Q.jsx("span",{children:e},`char-${t}-${a}`))}))})),o=0;const d=()=>{o<l.length?(i.current=[...i.current,l[o]],r([...i.current]),o++,s=window.setTimeout(d,t)):a&&a()};return i.current=[],r([]),d(),()=>{window.clearTimeout(s)}}),[e,t,a]),Q.jsx("div",{children:s})};Dt.memo(Xt);class Yt extends fe{constructor(){super("NPCDatabase"),this.version(3).stores({npcs:"id,name",sprites:"id",avatars:"id",dialogues:"id"}),this.npcs=this.table("npcs"),this.sprites=this.table("sprites"),this.avatars=this.table("avatars"),this.dialogues=this.table("dialogues")}async addNPC(e){await this.npcs.put(e)}async getNPC(e){return await this.npcs.get(e)}async getNPCByName(e){return await this.npcs.where("name").equals(e).first()}async getAllNPCs(){return await this.npcs.toArray()}async exportNPCs(){const e=await this.getAllNPCs();return JSON.stringify(e,null,2)}async importNPCs(e){const t=JSON.parse(e);await this.npcs.bulkPut(t)}async fetchNPCData(e){try{return(await P.get(e)).data}catch(t){return void o.error(`Failed to fetch NPC data from ${e}:`,t)}}async addSprite(e){await this.sprites.put(e)}async getSprite(e){return await this.sprites.get(e)}async getAllSprites(){return await this.sprites.toArray()}async addAvatar(e){await this.avatars.put(e)}async getAvatar(e){return await this.avatars.get(e)}async getAllAvatars(){return await this.avatars.toArray()}async urlToBlob(e){try{return(await P.get(e,{responseType:"blob"})).data}catch(t){return void o.error(`Failed to fetch blob from ${e}:`,t)}}async addNewSprite(e,t){const a=await this.urlToBlob(e);if(a){const e={...t,spriteData:a};return await this.addSprite(e),e.id}}async addNewNPC(e,t,a){const s={...e,spriteImageId:t,avatarImageId:a};await this.addNPC(s)}async addNewAvatar(e,t){const a=await this.urlToBlob(e);if(a){const e={...t,avatarData:a};return await this.addAvatar(e),e.id}}async fetchAvatars(e){try{const t=(await P.get(e)).data.key;for(const e in t){const a=t[e];let s=await this.urlToBlob(a.avatarLocation);if(s||(s=await this.urlToBlob(`https://kbve.com${a.avatarLocation}`)),s){const e={id:a.id,avatarName:a.avatarName,avatarLocation:a.avatarLocation,avatarData:s,slug:a.slug};await this.addAvatar(e)}}}catch(t){o.error(`Failed to fetch avatars from ${e}:`,t)}}async fetchSprites(e){try{const t=(await P.get(e)).data.key;for(const e in t){const a=t[e];let s=await this.urlToBlob(a.assetLocation);if(s||(s=await this.urlToBlob(`https://kbve.com${a.assetLocation}`)),s){const e={id:a.id,spriteName:a.spriteName,assetLocation:a.assetLocation,frameWidth:a.frameWidth,frameHeight:a.frameHeight,scale:a.scale,slug:a.slug,spriteData:s};await this.addSprite(e)}}}catch(t){o.error(`Failed to fetch sprites from ${e}:`,t)}}async fetchNPCs(e){try{const t=(await P.get(e)).data.key;for(const e in t){const a=t[e],s={id:a.id,name:a.name,spriteKey:a.spriteKey,walkingAnimationMapping:a.walkingAnimationMapping,startPosition:a.startPosition,speed:a.speed,scale:a.scale,slug:a.slug,actions:a.actions,effects:a.effects,stats:a.stats,spriteImageId:a.spriteImageId,avatarImageId:a.avatarImageId,dialogues:a.dialogues||[]};await this.addNPC(s)}}catch(t){o.error(`Failed to fetch NPCs from ${e}:`,t)}}async initializeDatabase(e="https://kbve.com"){await this.fetchAvatars(`${e}/api/avatardb.json`),await this.fetchSprites(`${e}/api/spritedb.json`),await this.fetchNPCs(`${e}/api/npcdb.json`),await this.fetchDialogues(`${e}/api/dialogue.json`)}async loadNPC(e,t,a,s){try{o.log(`Loading NPC with name: ${t}`);const r=await this.getNPCByName(t);if(!r)throw new Error(`NPC with name ${t} not found`);o.log(`NPC Data: ${JSON.stringify(r)}`),await this.loadCharacter(e,r.id,a,s)}catch(e){e instanceof Error?o.error(`Failed to load NPC: ${e.message}`):o.error("Failed to load NPC:",e)}}async loadCharacter(e,t,a,s){try{o.log(`Loading NPC with ID: ${t}`);const r=await this.getNPC(t);if(!r)throw new Error(`NPC with ID ${t} not found`);o.log(`NPC Data: ${JSON.stringify(r)}`);const i=r.spriteKey;if(e.textures.exists(i))o.log(`Texture with key ${i} already loaded.`),this.addNPCToScene(e,r,a,s);else{o.log(`Texture with key ${i} not found, attempting to load.`);const t=await this.getSprite(r.spriteImageId);if(!t||!t.spriteData)throw new Error(`Sprite with ID ${r.spriteImageId} not found`);{o.log(`Sprite Data: ${JSON.stringify(t)}`);const n=URL.createObjectURL(t.spriteData);e.load.spritesheet(i,n,{frameWidth:t.frameWidth,frameHeight:t.frameHeight}),e.load.once("complete",(()=>{o.log(`Texture ${i} loaded successfully.`),this.addNPCToScene(e,r,a,s)})),e.load.start()}}}catch(e){e instanceof Error?o.error(`Failed to load NPC: ${e.message}`):o.error("Failed to load NPC:",e)}}addNPCToScene(e,t,a,s){try{o.log(`Adding NPC to scene: ${JSON.stringify(t)}`),o.log(`Using sprite key: ${t.spriteKey}`);const r=e.add.sprite(0,0,t.spriteKey);r.scale=t.scale||1.5,r.name=t.id||"Error Missing Name",o.log(`NPC Sprite created with texture key ${t.spriteKey} at position (${t.startPosition.x}, ${t.startPosition.y})`);const i={id:t.id,sprite:r,walkingAnimationMapping:t.walkingAnimationMapping,startPosition:{x:a??t.startPosition.x,y:s??t.startPosition.y},speed:t.speed};if(o.log(`Grid engine config: ${JSON.stringify(i)}`),!e.textures.exists(t.spriteKey))throw new Error(`Texture with key ${t.spriteKey} does not exist in the scene`);e.gridEngine.addCharacter(i),o.log(`NPC added to grid engine with ID ${t.id}`),((t,a,s)=>{const r=e.gridEngine.getPosition(t.name);o.log(`Attaching NPC events to ${a} at position: ${JSON.stringify(r)}`),Kt.attachNPCEvent(t,a,s,{coords:r})})(r,t.name,t.actions.map((e=>({label:e})))),o.log(`NPC ${t.name} added to scene successfully`)}catch(e){e instanceof Error?o.error(`Error adding NPC to scene from addNPCToScene: ${e.message}`):o.error("Error adding NPC to scene:",e)}}async addDialogue(e){await this.dialogues.put(e)}async getDialogue(e){return await this.dialogues.get(e)}async getAllDialogues(){return await this.dialogues.toArray()}async getDialoguesForNPC(e){const t=await this.getNPC(e);if(!t)throw new Error(`NPC with ID ${e} not found`);return(await Promise.all((t.dialogues||[]).map((e=>this.getDialogue(e.dialogueId))))).filter((e=>void 0!==e))}async markDialogueAsRead(e,t){const a=await this.getNPC(e);if(!a)throw new Error(`NPC with ID ${e} not found`);const s=a.dialogues?.find((e=>e.dialogueId===t));s&&(s.read=!0,await this.addNPC(a))}async fetchDialogues(e){try{const t=(await P.get(e)).data.key,a=Object.values(t).map((e=>({...e})));await this.dialogues.bulkPut(a)}catch(t){o.error(`Failed to fetch dialogues from ${e}:`,t)}}async getPrioritizedDialoguesForNPC(e){try{const t=await this.getNPC(e);if(!t)throw new Error(`NPC with ID ${e} not found`);const a=(await Promise.all((t.dialogues||[]).map((async e=>{const t=await this.getDialogue(e.dialogueId);return t?{...t,priority:e.priority,read:e.read}:null})))).filter((e=>null!==e));return a.sort(((e,t)=>t.priority-e.priority)),a}catch(t){return o.error(`Failed to get prioritized dialogues for NPC with ID ${e}:`,t),[]}}async getNPCNameById(e){return(await this.getNPC(e))?.name}async getNPCAvatarById(e){const t=await this.getNPC(e);if(t?.avatarImageId)return(await this.getAvatar(t.avatarImageId))?.avatarData}async getNPCSlugById(e){return(await this.getNPC(e))?.slug}async getNPCHealthById(e){try{return(await this.getNPC(e))?.stats?.health}catch(t){return void o.error(`Failed to get health for NPC with ID ${e}:`,t)}}async getNPCManaById(e){try{return(await this.getNPC(e))?.stats?.mana}catch(t){return void o.error(`Failed to get mana for NPC with ID ${e}:`,t)}}async createNPCSession(e,t){try{const a=this.getNPCNameById(t),s=this.getNPCSlugById(t),r=this.getNPCAvatarById(t),i=this.getNPCHealthById(t),o=this.getNPCManaById(t),[n,l,d,c,u]=await Promise.all([a,s,r,i,o]),h={...e.get(),[`${t}_name`]:n||"Unknown",[`${t}_slug`]:l||"Unknown",[`${t}_avatar`]:d?URL.createObjectURL(d):"Unknown",[`${t}_health`]:c||"100",[`${t}_mana`]:u||"100"};e.set(h)}catch{const a={...e.get(),[`${t}_name`]:"Unknown",[`${t}_slug`]:"Unknown",[`${t}_avatar`]:"Unknown",[`${t}_hp`]:"100",[`${t}_mana`]:"100"};e.set(a)}}async getNPCDialogueOptionsByULID(e){try{const t=await this.getDialogue(e);if(!t||!t.options)return"[]";const a=await Promise.all(t.options.map((async e=>this.getDialogue(e))));return JSON.stringify(a.filter((e=>void 0!==e)))}catch(t){return o.error(`Failed to get dialogue options for ID ${e}:`,t),"[]"}}async getAllDialogueOptions(e){const t=[],a=new Set,s=async e=>{if(a.has(e))return;a.add(e);const r=await this.getDialogue(e);if(r&&(t.push(r),r.options&&r.options.length>0))for(const e of r.options)await s(e)};return await s(e),t}async createDialogueSession(e,t){try{const a=await this.getNPCDialogueOptionsByULID(t),s={...e.get(),[`${t}_options`]:a||"[]"};e.set(s)}catch{const a={...e.get(),[`${t}_options`]:"[]"};e.set(a)}}}const Qt=new Yt;class Zt{constructor(){this.actionHandlers={talk:this.talkToNPC.bind(this),quest:this.questWithNPC.bind(this),trade:this.tradeWithNPC.bind(this),combat:this.startCombat.bind(this),heal:this.healNPC.bind(this),steal:this.stealFromNPC.bind(this),lore:this.loreFromNPC.bind(this)}}getActionHandler(e){return this.actionHandlers[e]}loreFromNPC(e){o.log(`Pulling up the lore of the NPC with ID: ${e.npcId}`)}questWithNPC(e){o.log(`Starting quest with NPC with ID: ${e.npcId}`)}healNPC(e){o.log(`Healing NPC with ID: ${e.npcId}`)}oathFromNPC(e){o.log(`Oath from NPC with ID: ${e.npcId}`)}async talkToNPC(e){try{o.log(`Talking to NPC with ID: ${e.npcId}`);const t=await Qt.getPrioritizedDialoguesForNPC(e.npcId);if(o.log(t),t.length>0){const a=t[0];I.emit("npcDialogue",{npcId:e.npcId,dialogue:a},1e3)}else o.log("No dialogues available for this NPC.")}catch(t){o.error(`Failed to fetch dialogues for NPC with ID ${e.npcId}:`,t)}}tradeWithNPC(e){o.log(`Trading with NPC with ID: ${e.npcId}`)}moveToNPC(e){const t=e.data?.coords||{x:10,y:15};I.emit("playerMove",t)}stealFromNPC(e){o.log(`Attempting to steal from NPC with ID: ${e.npcId}`);const t={npcId:e.npcId,npcName:e.npcName,data:e.data};I.emit("playerSteal",t)}startCombat(e){o.log(`Starting combat with NPC with ID: ${e.npcId}`)}checkFish(e){o.log(`Checking fish for NPC with ID: ${e.npcId}`)}attachNPCEvent(e,t,a,s){e.setInteractive(),e.on("pointerover",(r=>{const i={npcId:e.name||"",npcName:t,actions:a.map((e=>e.label)),data:s||{},coords:{x:r.x,y:r.y}};I.emit("npcInteraction",i),e.setTint(65280)})),e.on("pointerout",(()=>{e.clearTint()})),e.on("pointerdown",(r=>{const i={npcId:e.name||"",npcName:t,actions:a.map((e=>e.label)),data:s||{},coords:{x:r.x,y:r.y}};o.log(`Click Registered at X: ${i.coords.x} Y: ${i.coords.y}`),I.emit("npcInteractionClick",i,1e3)}))}}const Kt=new Zt;var ea=kt("<script async defer><\/script>\x3c!----\x3e",1),ta=U('<div class="max-w-xs bg-white border border-gray-200 rounded-xl shadow-lg dark:bg-neutral-800 dark:border-neutral-700 z-100" role="alert" tabindex="-1" aria-labelledby="hs-toast-normal-example-label"><div class="flex p-4"><div class="shrink-0"><svg class="shrink-0 size-4 text-blue-500 mt-0.5" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16"><path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"></path></svg></div> <div class="ms-3"><p id="hs-toast-normal-example-label" class="text-sm text-gray-700 dark:text-neutral-400">Processing...</p></div></div></div>'),aa=U('<div class="max-w-xs bg-white border border-gray-200 rounded-xl shadow-lg dark:bg-neutral-800 dark:border-neutral-700 z-100" role="alert" tabindex="-1" aria-labelledby="hs-toast-error-example-label"><div class="flex p-4"><div class="shrink-0"><svg class="shrink-0 size-4 text-red-500 mt-0.5" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z"></path></svg></div> <div class="ms-3"><p id="hs-toast-error-example-label" class="text-sm text-gray-700 dark:text-neutral-400"> </p></div></div></div>'),ra=U('<div class="flex"><span class="text-lg text-cyan-600 dark:text-cyan-300"> </span></div>'),sa=U('<div class="inline-flex items-center"><span class="relative flex h-3 w-3"><span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-red-400 opacity-75"></span> <span class="relative inline-flex rounded-full h-3 w-3 bg-red-500"></span></span> <div class="px-2 text-gray-600 dark:text-neutral-400 text-wrap w-1/2"> </div></div>'),ia=U('<div class="inline-flex items-center"><span class="relative flex h-3 w-3"><span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-cyan-400 opacity-75"></span> <span class="relative inline-flex rounded-full h-3 w-3 bg-cyan-500"></span></span> <span class="px-2 text-gray-600 dark:text-neutral-400 font-bold">Online</span></div>'),oa=U('<div><div class="py-16 opacity-0 transition-opacity duration-500" id="formulation_form"><div class="px-16 flex flex-row justify-center items-center lg:justify-between"><div class="relative"><h3 class="text-blue-400 mb-1">Sign up</h3> <h1 class="page-title text-white font-bold text-3xl mb-5 lg:text-3xl xl:text-4xl 2xl:text-5xl">KBVE Authentication Portal</h1> <!> <!> <!> <form id="registerForm" class="opacity-0 transition-opacity duration-500" action="#"><div class="grid gap-y-2 md:gap-y-4"><div><label for="login-username" class="mb-1 block text-xs text-left md:text-sm md:mb-2 text-neutral-800 dark:text-neutral-200">Username</label> <div><input type="text" id="register-username" name="username" autocomplete="username" class="block w-full h-4 md:h-12 rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:focus:ring-1" required aria-describedby="register-username"></div></div> <div><label for="register-email" class="mb-1 block text-xs text-left md:text-sm md:mb-2 text-neutral-800 dark:text-neutral-200">Email Address</label> <div><input type="email" id="register-email" name="email" autocomplete="email" class="block w-full h-4 md:h-12 rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:focus:ring-1" required aria-describedby="register-email"></div></div> <div><div class="flex items-center justify-between"><label for="register-password" class="mb-1 block text-xs md:text-sm md:mb-2 text-neutral-800 dark:text-neutral-200">Password</label></div> <div><input type="password" id="register-password" name="password" class="block w-full h-4 md:h-12 rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:focus:ring-1" required aria-describedby="register-password"></div></div> <div><div class="flex items-center justify-between"><label for="confirm-register-password" class="mb-1 block text-xs md:text-sm md:mb-2 text-neutral-800 dark:text-neutral-200">Confirm Password</label></div> <div><input type="password" id="confirm-register-password" name="password" class="block w-full h-4 md:h-12 rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:focus:ring-1" required aria-describedby="confirm-register-password"></div></div> <div><div class="flex justify-center scale-75 md:scale-100"></div></div> <button type="submit"> </button></div></form></div> <div class="flex flex-col w-1/2"><div><!></div> <dotlottie-player></dotlottie-player></div></div></div></div>',2);function wa(e,t){dt(t,!1);const a=ut(),s=()=>{_(d,!1),$(x,h(x).successful_message=""),h(n)&&h(l)&&h(c)&&hcaptcha.reset(h(c))},r=e=>{if(h(n)&&h(l)&&h(c))return hcaptcha.execute(h(c),e)};async function i(e){const t=await R.getErrorByActionId(e);$(x,h(x).svelte_internal_message=t||"An unexpected error occurred. Please try again.");const a=await R.getDetailedErrorByActionId(e);a?_(u,a):$(x,h(x).svelte_internal_message="An unexpected error occurred. Please try again.")}let o,n=A(!1),l=A(!1),d=A(!1),c=A(),u=A(),g=T(t,"hl",8,""),p=T(t,"sitekey",24,(()=>Z.get().hcaptcha)),m=T(t,"apihost",24,(()=>Z.get().hcaptcha_api)),f=T(t,"reCaptchaCompat",8,!0),w=T(t,"theme",24,(()=>ze.DARK)),y=T(t,"size",8,"compact"),x=A({email:"",password:"",confirm:"",username:"",captchaToken:"",svelte_internal_message:"",successful_message:""});const P=new URLSearchParams({recaptchacompat:f()?"on":"off",onload:"hcaptchaOnLoad",render:"explicit"}),N=`${m()}?${P.toString()}`,C=Math.floor(100*Math.random());ht((()=>{qt({elementIdOrName:"skeleton_login_loader",duration:500}),document.getElementById("astro_error_message")&&document.getElementById("astro_error_message");const e=document.getElementById("formulation_form");e&&setTimeout((()=>{e.classList.replace("opacity-0","opacity-100")}),200);const t=document.getElementById("registerForm");t&&setTimeout((()=>{t.classList.replace("opacity-0","opacity-100")}),500),window.hcaptchaOnLoad=()=>{a("load"),_(l,!0)},window.onSuccess=e=>{a("success",{token:e}),$(x,h(x).captchaToken=e)},window.onError=()=>{a("error")},window.onClose=()=>{a("close")},window.onExpired=()=>{a("expired"),s()},a("mount"),_(n,!0)})),gt((()=>{window.hcaptchaOnLoad=null,window.onSuccess=null,h(l)&&(hcaptcha=null)})),ft((()=>(h(n),h(l),X(p()),X(g()),X(w()),X(y()))),(()=>{h(n)&&h(l)&&_(c,hcaptcha.render(`h-captcha-${C}`,{sitekey:p(),hl:g(),theme:w(),callback:"onSuccess","error-callback":"onError","close-callback":"onClose","expired-callback":"onExpired",size:y()}))})),pt(),mt();var I=oa();wt((e=>{var t=vt(),a=Ue(t),s=e=>{var t=ea(),a=Ue(t);Ae(a,"src",N),k(a),S(e,t)};j(a,(e=>{h(n)&&!window?.hcaptcha&&e(s)})),S(e,t)}));var D=b(I),E=b(D),L=b(E),F=k(b(L),4),M=e=>{var t=ta();S(e,t)};j(F,(e=>{h(d)&&e(M)}));var U=k(F,2),J=e=>{var t=aa(),a=b(t),s=k(b(a),2),r=b(s),i=b(r,!0);v(r),v(s),v(a),v(t),q((()=>Y(i,h(x).svelte_internal_message))),S(e,t)};j(U,(e=>{h(x).svelte_internal_message&&e(J)}));var O=k(U,2),B=e=>{var t=ra(),a=b(t),s=b(a,!0);v(a),v(t),q((()=>Y(s,h(x).successful_message))),S(e,t)};j(O,(e=>{h(x).successful_message&&e(B)}));var K=k(O,2),z=b(K),W=b(z),Q=k(b(W),2),ee=b(Q);V(ee),v(Q),v(W);var te=k(W,2),ae=k(b(te),2),se=b(ae);V(se),v(ae),v(te);var re=k(te,2),ie=k(b(re),2),oe=b(ie);V(oe),v(ie),v(re);var ne=k(re,2),le=k(b(ne),2),de=b(le);V(de),v(le),v(ne);var ce=k(ne,2),ue=b(ce);Ae(ue,"id",`h-captcha-${C??""}`),v(ce);var he=k(ce,2);Le(he,1,"inline-flex w-full items-center justify-center gap-x-2 rounded-lg px-4 py-1 text-sm font-normal text-blue-400 focus-visible:ring outline-none transition duration-300 py-3 border border-transparent bg-blue-100 dark:focus:outline-none hover:bg-blue-400 hover:text-white 2xl:text-base disabled:pointer-events-none disabled:opacity-50 disabled:animate-pulse ring-zinc-500 dark:ring-zinc-200");var ge=b(he,!0);v(he),v(z),v(K),v(L);var pe=k(L,2),me=b(pe),fe=b(me),we=e=>{var t=sa(),a=k(b(t),2),s=b(a,!0);v(a),v(t),q((()=>Y(s,h(u)))),S(e,t)},ye=e=>{var t=ia();S(e,t)};j(fe,(e=>{h(u)?e(we):e(ye,!1)})),v(me);var be=k(me,2);return H(be,"autoplay",!0),H(be,"loop",!0),Le(be,1,"hidden md:block md:w-full"),H(be,"mode","normal"),H(be,"src","/assets/lottie//robot.lottie"),v(pe),v(E),v(D),v(I),q((()=>{he.disabled=h(d),Y(ge,h(d)?"Loading...":"Register")})),G(ee,(()=>h(x).username),(e=>$(x,h(x).username=e))),G(se,(()=>h(x).email),(e=>$(x,h(x).email=e))),G(oe,(()=>h(x).password),(e=>$(x,h(x).password=e))),G(de,(()=>h(x).confirm),(e=>$(x,h(x).confirm=e))),yt("submit",K,Ct((async function(){if(_(d,!0),o=await R.createActionULID("registerUser"),!o)return $(x,h(x).svelte_internal_message="Failed to create action!"),void s();try{const e=await R.registerUser(h(x).email,h(x).password,h(x).confirm,o,h(x).username,h(x).captchaToken);if(e){$(x,h(x).successful_message=`Welcome, ${e.username||e.email}! Registration successful. Redirecting in 2 Seconds`),console.log("User registered and profile saved:",e);const t=await R.getSession();return void(t?(console.log("User is already logged in after registration:",t),setTimeout((()=>{window.location.href="/dashboard"}),1500)):setTimeout((()=>{window.location.href="/login"}),1500))}await i(o)}catch(e){console.error("Registration failed:",e),await i(o)}finally{_(d,!1)}}))),S(e,I),Fe(t,"reset",s),Fe(t,"execute",r),bt({reset:s,execute:r})}export{wa as default};
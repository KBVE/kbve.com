(function(){"use strict";/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */const x=Symbol("Comlink.proxy"),N=Symbol("Comlink.endpoint"),H=Symbol("Comlink.releaseProxy"),k=Symbol("Comlink.finalizer"),b=Symbol("Comlink.thrown"),A=e=>typeof e=="object"&&e!==null||typeof e=="function",I={canHandle:e=>A(e)&&e[x],serialize(e){const{port1:t,port2:n}=new MessageChannel;return P(e,t),[n,[n]]},deserialize(e){return e.start(),D(e)}},L={canHandle:e=>A(e)&&b in e,serialize({value:e}){let t;return e instanceof Error?t={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:t={isError:!1,value:e},[t,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},T=new Map([["proxy",I],["throw",L]]);function V(e,t){for(const n of e)if(t===n||n==="*"||n instanceof RegExp&&n.test(t))return!0;return!1}function P(e,t=globalThis,n=["*"]){t.addEventListener("message",function y(r){if(!r||!r.data)return;if(!V(n,r.origin)){console.warn(`Invalid origin '${r.origin}' for comlink proxy`);return}const{id:a,type:g,path:l}=Object.assign({path:[]},r.data),u=(r.data.argumentList||[]).map(d);let s;try{const o=l.slice(0,-1).reduce((i,w)=>i[w],e),f=l.reduce((i,w)=>i[w],e);switch(g){case"GET":s=f;break;case"SET":o[l.slice(-1)[0]]=d(r.data.value),s=!0;break;case"APPLY":s=f.apply(o,u);break;case"CONSTRUCT":{const i=new f(...u);s=Y(i)}break;case"ENDPOINT":{const{port1:i,port2:w}=new MessageChannel;P(e,w),s=G(i,[i])}break;case"RELEASE":s=void 0;break;default:return}}catch(o){s={value:o,[b]:0}}Promise.resolve(s).catch(o=>({value:o,[b]:0})).then(o=>{const[f,i]=S(o);t.postMessage(Object.assign(Object.assign({},f),{id:a}),i),g==="RELEASE"&&(t.removeEventListener("message",y),C(t),k in e&&typeof e[k]=="function"&&e[k]())}).catch(o=>{const[f,i]=S({value:new TypeError("Unserializable return value"),[b]:0});t.postMessage(Object.assign(Object.assign({},f),{id:a}),i)})}),t.start&&t.start()}function _(e){return e.constructor.name==="MessagePort"}function C(e){_(e)&&e.close()}function D(e,t){const n=new Map;return e.addEventListener("message",function(r){const{data:a}=r;if(!a||!a.id)return;const g=n.get(a.id);if(g)try{g(a)}finally{n.delete(a.id)}}),M(e,n,[],t)}function h(e){if(e)throw new Error("Proxy has been released and is not useable")}function R(e){return m(e,new Map,{type:"RELEASE"}).then(()=>{C(e)})}const E=new WeakMap,p="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{const t=(E.get(e)||0)-1;E.set(e,t),t===0&&R(e)});function F(e,t){const n=(E.get(t)||0)+1;E.set(t,n),p&&p.register(e,t,e)}function j(e){p&&p.unregister(e)}function M(e,t,n=[],y=function(){}){let r=!1;const a=new Proxy(y,{get(g,l){if(h(r),l===H)return()=>{j(a),R(e),t.clear(),r=!0};if(l==="then"){if(n.length===0)return{then:()=>a};const u=m(e,t,{type:"GET",path:n.map(s=>s.toString())}).then(d);return u.then.bind(u)}return M(e,t,[...n,l])},set(g,l,u){h(r);const[s,o]=S(u);return m(e,t,{type:"SET",path:[...n,l].map(f=>f.toString()),value:s},o).then(d)},apply(g,l,u){h(r);const s=n[n.length-1];if(s===N)return m(e,t,{type:"ENDPOINT"}).then(d);if(s==="bind")return M(e,t,n.slice(0,-1));const[o,f]=O(u);return m(e,t,{type:"APPLY",path:n.map(i=>i.toString()),argumentList:o},f).then(d)},construct(g,l){h(r);const[u,s]=O(l);return m(e,t,{type:"CONSTRUCT",path:n.map(o=>o.toString()),argumentList:u},s).then(d)}});return F(a,e),a}function U(e){return Array.prototype.concat.apply([],e)}function O(e){const t=e.map(S);return[t.map(n=>n[0]),U(t.map(n=>n[1]))]}const W=new WeakMap;function G(e,t){return W.set(e,t),e}function Y(e){return Object.assign(e,{[x]:!0})}function S(e){for(const[t,n]of T)if(n.canHandle(e)){const[y,r]=n.serialize(e);return[{type:"HANDLER",name:t,value:y},r]}return[{type:"RAW",value:e},W.get(e)||[]]}function d(e){switch(e.type){case"HANDLER":return T.get(e.name).deserialize(e.value);case"RAW":return e.value}}function m(e,t,n,y){return new Promise(r=>{const a=q();t.set(a,r),e.start&&e.start(),e.postMessage(Object.assign({id:a},n),y)})}function q(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}let c=null,z=null;const v={async connect(e){c||(c=new WebSocket(e),c.binaryType="arraybuffer",c.onopen=()=>console.log("[WS] Connected:",e),c.onmessage=t=>{try{console.log("[WS] Received binary message"),t.data instanceof ArrayBuffer&&z?.(t.data)}catch(n){console.error("[WS] Failed to forward message",n)}},c.onerror=t=>console.error("[WS] Error:",t),c.onclose=()=>{console.log("[WS] Disconnected"),c=null})},async send(e){c?.readyState===WebSocket.OPEN?c.send(e):console.warn("[WS] Tried to send while disconnected")},async close(){c?.close(),c=null},onMessage(e){z=e}};self.onconnect=e=>{const t=e.ports[0];t.start(),P(v,t)}})();

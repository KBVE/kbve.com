!function(){"use strict";const e=Symbol("Comlink.proxy"),t=Symbol("Comlink.endpoint"),n=Symbol("Comlink.releaseProxy"),a=Symbol("Comlink.finalizer"),r=Symbol("Comlink.thrown"),i=e=>"object"==typeof e&&null!==e||"function"==typeof e,s={canHandle:t=>i(t)&&t[e],serialize(e){const{port1:t,port2:n}=new MessageChannel;return c(e,t),[n,[n]]},deserialize:e=>(e.start(),function(e,t){const n=new Map;return e.addEventListener("message",(function(e){const{data:t}=e;if(!t||!t.id)return;const a=n.get(t.id);if(a)try{a(t)}finally{n.delete(t.id)}})),f(e,n,[],t)}(e))},o=new Map([["proxy",s],["throw",{canHandle:e=>i(e)&&r in e,serialize({value:e}){let t;return t=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[t,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}}]]);function c(t,n=globalThis,i=["*"]){n.addEventListener("message",(function s(o){if(!o||!o.data)return;if(!function(e,t){for(const n of e)if(t===n||"*"===n||n instanceof RegExp&&n.test(t))return!0;return!1}(i,o.origin))return void console.warn(`Invalid origin '${o.origin}' for comlink proxy`);const{id:u,type:d,path:m}=Object.assign({path:[]},o.data),g=(o.data.argumentList||[]).map(v);let f;try{const n=m.slice(0,-1).reduce(((e,t)=>e[t]),t),a=m.reduce(((e,t)=>e[t]),t);switch(d){case"GET":f=a;break;case"SET":n[m.slice(-1)[0]]=v(o.data.value),f=!0;break;case"APPLY":f=a.apply(n,g);break;case"CONSTRUCT":f=function(t){return Object.assign(t,{[e]:!0})}(new a(...g));break;case"ENDPOINT":{const{port1:e,port2:n}=new MessageChannel;c(t,n),f=function(e,t){return y.set(e,t),e}(e,[e])}break;case"RELEASE":f=void 0;break;default:return}}catch(e){f={value:e,[r]:0}}Promise.resolve(f).catch((e=>({value:e,[r]:0}))).then((e=>{const[r,i]=b(e);n.postMessage(Object.assign(Object.assign({},r),{id:u}),i),"RELEASE"===d&&(n.removeEventListener("message",s),l(n),a in t&&"function"==typeof t[a]&&t[a]())})).catch((e=>{const[t,a]=b({value:new TypeError("Unserializable return value"),[r]:0});n.postMessage(Object.assign(Object.assign({},t),{id:u}),a)}))})),n.start&&n.start()}function l(e){(function(e){return"MessagePort"===e.constructor.name})(e)&&e.close()}function u(e){if(e)throw new Error("Proxy has been released and is not useable")}function d(e){return w(e,new Map,{type:"RELEASE"}).then((()=>{l(e)}))}const m=new WeakMap,g="FinalizationRegistry"in globalThis&&new FinalizationRegistry((e=>{const t=(m.get(e)||0)-1;m.set(e,t),0===t&&d(e)}));function f(e,a,r=[],i=function(){}){let s=!1;const o=new Proxy(i,{get(t,i){if(u(s),i===n)return()=>{(function(e){g&&g.unregister(e)})(o),d(e),a.clear(),s=!0};if("then"===i){if(0===r.length)return{then:()=>o};const t=w(e,a,{type:"GET",path:r.map((e=>e.toString()))}).then(v);return t.then.bind(t)}return f(e,a,[...r,i])},set(t,n,i){u(s);const[o,c]=b(i);return w(e,a,{type:"SET",path:[...r,n].map((e=>e.toString())),value:o},c).then(v)},apply(n,i,o){u(s);const c=r[r.length-1];if(c===t)return w(e,a,{type:"ENDPOINT"}).then(v);if("bind"===c)return f(e,a,r.slice(0,-1));const[l,d]=p(o);return w(e,a,{type:"APPLY",path:r.map((e=>e.toString())),argumentList:l},d).then(v)},construct(t,n){u(s);const[i,o]=p(n);return w(e,a,{type:"CONSTRUCT",path:r.map((e=>e.toString())),argumentList:i},o).then(v)}});return function(e,t){const n=(m.get(t)||0)+1;m.set(t,n),g&&g.register(e,t,e)}(o,e),o}function h(e){return Array.prototype.concat.apply([],e)}function p(e){const t=e.map(b);return[t.map((e=>e[0])),h(t.map((e=>e[1])))]}const y=new WeakMap;function b(e){for(const[t,n]of o)if(n.canHandle(e)){const[a,r]=n.serialize(e);return[{type:"HANDLER",name:t,value:a},r]}return[{type:"RAW",value:e},y.get(e)||[]]}function v(e){switch(e.type){case"HANDLER":return o.get(e.name).deserialize(e.value);case"RAW":return e.value}}function w(e,t,n,a){return new Promise((r=>{const i=new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join("-");t.set(i,r),e.start&&e.start(),e.postMessage(Object.assign({id:i},n),a)}))}c({bindings:new Map,async bindCanvas(e,t,n="animated"){const a=t.getContext("2d");a?(console.log(`[CanvasWorker] Successfully bound canvas for panel ${e} with mode ${n}`),this.bindings.set(e,{ctx:a,canvas:t,panelId:e,mode:n}),this.startAnimation(e)):console.error(`[CanvasWorker] Failed to get 2D context for panel ${e}`)},startAnimation(e){const t=this.bindings.get(e);if(t)switch(t.mode){case"static":this.drawStatic(t);break;case"animated":this.drawAnimated(t);break;case"dynamic":this.drawDynamic(t);break;default:console.warn(`[CanvasWorker] Unknown draw mode for panel ${e}`)}},drawStatic(e){e.ctx.fillStyle="gray",e.ctx.fillRect(0,0,e.canvas.width,e.canvas.height)},drawAnimated(e){let t=0;const n=()=>{t=(t+1)%360,e.ctx.fillStyle=`hsl(${t}, 100%, 50%)`,e.ctx.fillRect(0,0,e.canvas.width,e.canvas.height),e.animationFrame=requestAnimationFrame(n)};n()},drawDynamic(e){let t=0;const n=()=>{t+=.05,e.ctx.clearRect(0,0,e.canvas.width,e.canvas.height),e.ctx.beginPath(),e.ctx.arc(e.canvas.width/2+50*Math.sin(t),e.canvas.height/2+50*Math.cos(t),30,0,2*Math.PI),e.ctx.fillStyle="orange",e.ctx.fill(),e.animationFrame=requestAnimationFrame(n)};n()},async unbindCanvas(e){const t=this.bindings.get(e);t?.animationFrame&&cancelAnimationFrame(t.animationFrame),this.bindings.delete(e),console.log(`[CanvasWorker] Unbound canvas for panel ${e}`)}})}();
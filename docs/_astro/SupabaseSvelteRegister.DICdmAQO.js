import{a as dt,M as ut,N as T,I as ht,O as gt,l as ft,b as pt,i as mt,t as U,P as wt,Q as j,J as Ae,K as Le,R as H,d as q,f as G,j as h,g as yt,k as S,S as Fe,n as bt,F as _,D as $,E as A,r as b,q as k,T as vt,U as Ue,V as kt,v as V,w as v,W as Ct,X,A as Y}from"./svelte.BEh2_tzM.js";import{p as Be,a as xt}from"./@nanostores.CJR83bEb.js";import{t as Pt,m as $t,a as Re}from"./nanostores.qAfxXu-z.js";import{c as Nt}from"./@supabase.d6fxE5ud.js";import{D as fe}from"./dexie.B0m8TMOn.js";import{R as Dt,r as ue,j as Q}from"./react.CvslfkeK.js";import{a as P}from"./axios.Bw-gCGc_.js";import"./esm-env.rsSWfq8L.js";import"./@react-three.B-wTPXHf.js";import"./Page.astro_astro_type_script_index_0_lang.Db7LHE3J.js";import"./react-dom.CtWA3ti2.js";var ze=(c=>(c.DARK="dark",c.LIGHT="light",c))(ze||{});const Oe={hcaptcha:"5ba581fa-b6fc-4bb0-8222-02fcd6a59e35",hcaptcha_api:"https://js.hcaptcha.com/1/api.js",api:"https://supabase.kbve.com",anonKey:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJyb2xlIjogImFub24iLAogICJpc3MiOiAic3VwYWJhc2UiLAogICJpYXQiOiAxNzI0NTM2ODAwLAogICJleHAiOiAxODgyMzAzMjAwCn0._fmEmblm0afeLoPXxt8wP2mYpa9gzU-ufx3v8oRTFGg"},Z={_state:{...Oe},get(){return{...this._state}},set(c){this._state={...this._state,...c}},reset(){this._state={...Oe}},toString(){return JSON.stringify(this._state,null,2)},getKey(c){return this._state[c]}},F="0123456789ABCDEFGHJKMNPQRSTVWXYZ";function St(c,e,t){for(;c.length<e;)c=t+c;return c}function _t(){const c=Math.floor(Math.random()*F.length);return F.charAt(c)}function It(c){let e="";for(let t=0;t<c;t++)e+=_t();return e}function Et(c,e){let t="";for(let a=e-1;a>=0;a--){const s=c%F.length;t=F.charAt(s)+t,c=Math.floor(c/F.length)}return St(t,e,F[0])}function Je(){const c=Date.now(),e=Et(c,10),t=It(16),a=e+t;return{toString:()=>a,valueOf:()=>a}}const Mt={id:"",title:"",description:"",journals:[],isComplete:!1,reward:""},Tt={backpack:[],equipment:{head:null,body:null,legs:null,feet:null,hands:null,weapon:null,shield:null,accessory:null}},We={},At={inCombat:!1,isDead:!1,isResting:!1,activeBoosts:{}},Lt={username:"Guest",health:"100",mana:"100",energy:"100",maxHealth:"100",maxMana:"100",maxEnergy:"100",armour:"0",agility:"0",strength:"0",intelligence:"0",experience:"0",reputation:"0",faith:"0"},Ft={stats:Lt,inventory:Tt,state:At},Ut={tooltipItem:{id:null,position:{x:0,y:0}},submenuItem:{id:null,position:{x:0,y:0}},tooltipNPC:{id:null,position:{x:0,y:0}},isStatsMenuCollapsed:!1,isSettingsMenuCollapsed:!1,debugMode:!1,textSpeed:40},Ot={gamemode:"Idle",action:{type:"ROLL_DICE",diceValues:[],isRolling:!1},textures:{side1:"",side2:"",side3:"",side4:"",side5:"",side6:""}};function E(c,e){return Be(c,e,{encode(t){return JSON.stringify(t)},decode(t){try{return JSON.parse(t)}catch{return e}}})}E("playerData",Ft);E("quest",Mt);E("items",We);E("notifications",[]);E("itemDB",We);const he=E("settings",Ut);E("minigameState",Ot);const Jt=c=>he.get()[c],He=(c,e)=>{Pt(async()=>{const t=he.get();he.set({...t,[c]:e})})},jt=()=>{He("debugMode",!0)},Bt=()=>{He("debugMode",!1)},ee=()=>Jt("debugMode"),K=c=>typeof c=="string"?c:JSON.stringify(c,null,2),Rt=c=>{ee()&&console.log(`[DEBUG] ${K(c)}`)},zt=c=>{ee()&&console.warn(`[DEBUG] ${K(c)}`)},Wt=(c,e)=>{ee()&&(e instanceof Error?console.error(`[DEBUG] ${K(c)} - Error: ${e.message}
${e.stack}`):console.error(`[DEBUG] ${K(c)}`))},o={enable:jt,disable:Bt,isEnabled:ee,log:Rt,warn:zt,error:Wt};class Ht{constructor(){this.events={},this.lastEmitted=new Map}on(e,t){this.events[e]||(this.events[e]=[]),this.events[e]?.push(t)}off(e,t){this.events[e]&&(this.events[e]=this.events[e]?.filter(a=>a!==t))}emit(e,t,a=0,s){const r=Date.now(),i=this.lastEmitted.get(e)||0;if(r-i>=a){if(!this.events[e])return;this.events[e]?.forEach(n=>n(t)),s&&o.isEnabled()&&o.log(`Event: ${String(e)} - Message: ${s}`),o.isEnabled()&&o.log(`Event Data: ${String(e)} - Data: ${t?JSON.stringify(t):"No data"}`),this.lastEmitted.set(e,r)}}}const I=new Ht,ge={id:"",email:"",updatedAt:new Date,fullName:"Guest",username:"Guest"},L=$t(ge),je=Re(!1),B=Re(null);class qe extends fe{constructor(){super("KilobaseDB"),this.supabase=null,this.profileKey="userProfile",this.handleUserRedirect=e=>{if(!e||!e.location)return;const{location:t,timer:a=0,replace:s=!1}=e;console.log(`Redirecting user to: ${t} in ${a}ms`),setTimeout(()=>{this.cleanupEventListeners(),s?window.location.replace(t):window.location.href=t},a)},this.version(1).stores({keyValueStore:"key",profiles:"&id, email",errorLogs:"++id, actionId, message, timestamp",actionULID:"&id, action, timestamp, status, errorId"}),this.profiles=this.table("profiles"),this.errorLogs=this.table("errorLogs"),this.actionULID=this.table("actionULID"),this.supabase=this.initializeSupabaseClient(),this.initializeEventListeners()}initializeEventListeners(){I.on("redirectUser",this.handleUserRedirect)}cleanupEventListeners(){I.off("redirectUser",this.handleUserRedirect)}initializeSupabaseClient(){if(typeof window<"u"&&window.supabase&&(console.log("Using global Supabase client instance:",window.supabase),this.supabase=window.supabase),!this.supabase)try{this.supabase=Nt(Z.get().api,Z.get().anonKey),console.log("Supabase client instance created:",this.supabase),typeof window<"u"&&(window.supabase=this.supabase)}catch(e){throw console.error("Error creating Supabase client:",e),e}return this.supabase}getSupabaseClient(){return this.supabase}async registerUser(e,t,a,s,r,i){const n=this.getSupabaseClient();if(!n)return null;try{if(t!==a)return await this.handleAuthError({message:"Password and confirm password do not match."},s),null;const{data:l,error:d}=await n.auth.signUp({email:e,password:t,options:{captchaToken:i,data:{username:r,full_name:r}}});if(d)return await this.handleAuthError(d,s),null;if(l?.user){const p={id:l.user.id,email:l.user.email||"",username:l.user.user_metadata?.username||void 0,fullName:l.user.user_metadata?.full_name||void 0,updatedAt:new Date(l.user.updated_at||Date.now())};return await this.saveProfile(p),await this.updateActionStatus(s,"completed"),p}}catch(l){return await this.handleAuthError(l,s),null}return null}async createActionULID(e){const t=Je().toString(),a={id:t,action:e,timestamp:new Date,status:"pending"};return await this.actionULID.add(a),t}async handleAuthError(e,t){let a="An unknown error occurred. Please try again.",s={...e},r="";e?.message&&(a=e.message),e?.code&&(r+=`Error Code: ${e.code}. `),e?.status&&(r+=`Status: ${e.status}. `),e?.supabaseCode&&(r+=`Supabase Code: ${e.supabaseCode}. `),e?.details&&(r+=`Details: ${JSON.stringify(e.details)}. `),r&&(a=`${a} (${r.trim()})`);const i={invalid_grant:"Invalid credentials provided.",invalid_request:"The request is missing a required parameter.",expired_token:"The token has expired. Please log in again.",invalid_token:"The token provided is invalid. Please try again.",email_already_exists:"The email address is already in use.",user_already_exists:"A user with this identifier already exists. Please log in instead.",invalid_password:"The password provided is incorrect."};switch(e?.code&&i[e.code]&&(a=i[e.code]),e?.status){case 400:a="Bad request. Please check the input fields.";break;case 401:a="Unauthorized. Please check your credentials.";break;case 403:a="Forbidden. You do not have permission to perform this action.";break;case 404:a="Resource not found. Please try again.";break;case 422:a="Unprocessable entity. Please check the provided data.";break;case 500:a="Internal server error. Please try again later.";break;default:a=a||"An unknown error occurred. Please try again.";break}throw await this.logError(a,{...s,supabaseCode:e?.code,statusCode:e?.status},t),console.error("Authentication Error:",a),new Error(a)}async saveProfile(e){try{await this.table("keyValueStore").put({key:this.profileKey,value:e}),e.username&&B.set(e.username),L.set(e),console.log("Profile saved locally:",e)}catch(t){console.error("Failed to save profile locally:",t)}}async loadProfile(){try{const e=await this.table("keyValueStore").get(this.profileKey);if(e?.value){L.set(e.value),console.log("Profile loaded from local storage:",e.value);return}await this.loadProfileFromSupabase()}catch(e){console.error("Failed to load profile:",e)}}async loadProfileFromSupabase(){const e=this.getSupabaseClient();if(e)try{je.set(!0);const{data:{user:t},error:a}=await e.auth.getUser();if(a){console.error("Failed to get authenticated user from Supabase:",a),await this.logError("Failed to get authenticated user from Supabase",a);return}if(!t){console.warn("No authenticated user found");return}const{data:s,error:r}=await e.from("user_profiles").select("id, username, updated_at").eq("id",t.id).single();if(r){console.error("Failed to load user profile from Supabase:",r),await this.logError("Failed to load user profile from Supabase",r);return}if(s){const i={id:s.id,email:t.email||"",username:s.username||void 0,fullName:t.user_metadata?.full_name||void 0,updatedAt:new Date(s.updated_at)};await this.saveProfile(i),console.log("Profile loaded and saved from Supabase:",i)}}catch(t){console.error("An unexpected error occurred while loading the profile:",t),await this.logError("An unexpected error occurred while loading the profile",t)}finally{je.set(!1)}}async removeProfile(){const e=this.getSupabaseClient();if(e)try{const t=L.get();await this.table("keyValueStore").delete(this.profileKey),await this.profiles.delete(t.id),L.set(ge),console.log(`Profile ${t.id} removed locally and store reset`),B.set(null);const{error:a}=await e.auth.signOut();a?(await this.logError("Failed to log out user from Supabase",a),console.error("Failed to log out user from Supabase:",a)):console.log("User logged out successfully from Supabase.")}catch(t){await this.logError("Failed to remove profile",t),console.error("Failed to remove profile:",t)}}async getProfile(){const e=L.get();if(e.id!=="")return e;try{const t=await this.table("keyValueStore").get(this.profileKey);if(t?.value){const a=t.value;return L.set(a),a}}catch(t){console.error("Failed to get profile from Dexie:",t)}return ge}async createAction(e){const a={id:Je().toString(),action:e,timestamp:new Date,status:"pending"};return await this.actionULID.add(a),a}async updateActionStatus(e,t,a){await this.actionULID.update(e,{status:t,errorId:a})}async logError(e,t,a){try{let s=null;if(a&&(s=await this.errorLogs.where("actionId").equals(a).first()),s){console.warn(`Error already exists for actionId: ${a}. Skipping new error log.`);return}const r={message:e,details:t,actionId:a,timestamp:new Date},i=await this.errorLogs.add(r);console.log("Error logged to Dexie:",r),a&&await this.updateActionStatus(a,"failed",i)}catch(s){console.error("Failed to log error:",s)}}async extractAuthErrorDetails(e){if(!e)return"Unknown error occurred. No error details available.";let t=e.message||"Unknown error occurred",a="";return e?.code&&(a+=`Error Code: ${e.code}. `),e?.status&&(a+=`Status: ${e.status}. `),e?.supabaseCode&&(a+=`Supabase Code: ${e.supabaseCode}. `),e?.details&&(a+=`Details: ${JSON.stringify(e.details)}. `),a&&(t=`${t} (${a.trim()})`),t}async getDetailedErrorByActionId(e){try{const t=await this.errorLogs.where("actionId").equals(e).last();return t?this.extractAuthErrorDetails(t):null}catch(t){return console.error(`Failed to retrieve detailed error for actionId: ${e}`,t),null}}async getErrorByActionId(e){try{const t=await this.errorLogs.where("actionId").equals(e).last();return t?t.message:null}catch(t){return console.error(`Failed to retrieve error for actionId: ${e}`,t),null}}async loginUser(e,t,a,s){const r=this.getSupabaseClient();if(!r)return null;try{const{data:i,error:n}=await r.auth.signInWithPassword({email:e,password:t,options:{captchaToken:s}});if(n)return await this.handleAuthError(n,a),null;if(i?.user){const l={id:i.user.id,email:i.user.email||"",username:i.user.user_metadata?.username||void 0,fullName:i.user.user_metadata?.full_name||void 0,updatedAt:new Date(i.user.updated_at||Date.now())};return await this.saveProfile(l),console.log("User logged in successfully:",l),l}}catch(i){return await this.handleAuthError(i,a),null}return null}async getSession(){const e=this.getSupabaseClient();if(!e)return null;try{const{data:t,error:a}=await e.auth.getSession();return a?(console.error("Failed to retrieve session:",a),null):t.session||null}catch(t){return console.error("Error getting session:",t),null}}async getUsername(){if(B.get())return B.get();try{const e=await this.table("keyValueStore").get(this.profileKey);if(e?.value?.username)return B.set(e.value.username),e.value.username}catch(e){console.error("Failed to get username from Dexie:",e)}return null}static createPersistentAtom(e,t){return Be(e,t,{encode:JSON.stringify,decode:JSON.parse})}createPersistentMap(e,t){return xt(e,t,{encode:JSON.stringify,decode:JSON.parse})}updateAtomField(e,t,a){e.set({...e.get(),[t]:a})}updateMapField(e,t,a){const r={...e.get(),[t]:a};e.set(r)}removeMapField(e,t){const a=e.get(),{[t]:s,...r}=a;e.set(r)}removeAtomField(e,t){const a=e.get(),{[t]:s,...r}=a;e.set(r)}resetState(e,t){e.set(t)}getPersistentAtom(e){return e.get()}}qe.createPersistentAtom("atlas",{plugin:[]});const R=new qe;function qt(c){const{elementIdOrName:e,duration:t=500,onComplete:a}=c;let s=null;if(s=document.getElementById(e),!s){const r=document.getElementsByName(e);r.length>0&&(s=r[0])}if(!s){o.error(`Loader element with ID or name "${e}" not found.`);return}if(!(s instanceof HTMLElement)){o.error(`Element found by "${e}" is not an HTMLElement.`);return}o.log(`Removing loader element with ID or name "${e}" with duration ${t}ms.`),s.classList.add("opacity-0","transition-opacity",`duration-${t}`),setTimeout(()=>{s&&(s.style.display="none"),o.log(`Loader element with ID or name "${e}" has been hidden.`),a&&a()},t)}class Gt extends fe{constructor(){super("MapDatabase"),this.chunkSize=10,this.tileWidth=32,this.tileHeight=32,this.chunkWidth=this.chunkSize*this.tileWidth,this.chunkHeight=this.chunkSize*this.tileHeight,this.scale=1,this.displayedChunks=new Set,this.version(1).stores({maps:"tilemapKey",jsonFiles:"tilemapKey",tilesetImages:"tilemapKey",chunks:"[tilemapKey+chunkX+chunkY]",tileJsonData:"tilemapKey"}),this.maps=this.table("maps"),this.jsonFiles=this.table("jsonFiles"),this.tilesetImages=this.table("tilesetImages"),this.chunks=this.table("chunks"),this.tileJsonData=this.table("tileJsonData")}resetMapSettings(){this.displayedChunks.clear()}async initializeMapDatabase(){const e="/api/mapdb.json",t="https://kbve.com/api/mapdb.json";let a;try{a=(await P.get(e)).data,o.log(`Map database loaded from ${e}`)}catch{o.warn(`Failed to load map database from ${e}, trying fallback URL.`);try{a=(await P.get(t)).data,o.log(`Map database loaded from ${t}`)}catch{o.error(`Failed to load map database from both ${e} and ${t}`);return}}if(a&&a.key){for(const s in a.key)if(Object.prototype.hasOwnProperty.call(a.key,s)){const r=a.key[s];await this.addMap(r),await this.addJsonData(s,r.jsonDataUrl);const i=await this.fetchTilesetImage(r.tilesetImageUrl);i&&await this.addTilesetImage(s,i)}o.log("Map database initialized and data loaded.")}else o.error("Invalid map database format.")}async addMap(e){await this.maps.put(e)}async getMap(e){return await this.maps.get(e)}async addJsonData(e,t){await this.jsonFiles.put({tilemapKey:e,jsonData:t})}async getJsonData(e){return(await this.jsonFiles.get(e))?.jsonData}async addTilesetImage(e,t){await this.tilesetImages.put({tilemapKey:e,imageData:t})}async getTilesetImage(e){return(await this.tilesetImages.get(e))?.imageData}async getBounds(e){return(await this.maps.get(e))?.bounds}async getNpcsFromTilesetKey(e){const t=await Vt.getMap(e);if(!t){o.error(`No map data found for tilesetKey: ${e}`);return}return t.npcs}async fetchMapData(e){try{return(await P.get(e)).data}catch(t){o.error(`Failed to fetch map data from ${e}:`,t);return}}async fetchJsonData(e){try{return(await P.get(e)).data}catch(t){o.error(`Failed to fetch JSON data from ${e}:`,t);return}}async fetchTilesetImage(e){try{return(await P.get(e,{responseType:"blob"})).data}catch(t){o.error(`Failed to fetch tileset image from ${e}:`,t);return}}async initializeMap(e,t,a,s){try{const r=await this.fetchMapData(t);if(r){await this.addMap(r);const i=await this.fetchJsonData(a);i&&await this.addJsonData(e,i);const n=await this.fetchTilesetImage(s);n&&await this.addTilesetImage(e,n)}}catch(r){o.error("Failed to initialize map database:",r)}}async loadMapIntoScene(e,t){const a=await this.getMap(t);if(!a){o.error(`Map with key ${t} not found`);return}const s=await this.getJsonData(t);if(!s){o.error(`JSON data for map ${t} not found`);return}const r=await this.getTilesetImage(t);if(!r){o.error(`Tileset image for map ${t} not found`);return}let i=null;try{i=URL.createObjectURL(r)}catch(n){o.error(`Failed to create object URL for tileset image: ${n}`);return}if(!i){o.error(`Tileset image URL for map ${t} could not be created.`);return}e.load.tilemapTiledJSON(t,s),e.load.image(a.tilesetKey,i),e.load.once("complete",()=>{const n=e.make.tilemap({key:t}),l=n.addTilesetImage(a.tilesetName,a.tilesetKey);if(l)for(let d=0;d<n.layers.length;d++){const p=n.createLayer(d,l,0,0);p?p.scale=a.scale:o.error(`Layer ${d} could not be created.`)}else o.error(`Tileset ${a.tilesetName} could not be created.`)}),e.load.start()}async loadMap(e,t){const a=await this.getMap(t);if(!a)throw new Error(`Map with key ${t} not found`);const s=await this.getJsonData(t);if(!s)throw new Error(`JSON data for map ${t} not found`);const r=await this.getTilesetImage(t);if(!r)throw new Error(`Tileset image for map ${t} not found`);let i=null;try{i=URL.createObjectURL(r)}catch(n){throw new Error(`Failed to create object URL for tileset image: ${n}`)}if(!i)throw new Error(`Tileset image URL for map ${t} could not be created.`);return e.load.tilemapTiledJSON(t,s),e.load.image(a.tilesetKey,i),new Promise(n=>{e.load.once("complete",()=>{const l=e.make.tilemap({key:t});if(l.addTilesetImage(a.tilesetName,a.tilesetKey)){for(let p=0;p<l.layers.length;p++){const g=l.createLayer(p,a.tilesetName,0,0);g?g.scale=a.scale:console.error(`Layer ${p} could not be created.`)}n(l)}else console.error(`Tileset ${a.tilesetName} could not be created.`),n(null)}),e.load.start()})}async prepareMapLoad(e){if(!await this.getMap(e))throw new Error(`Map with key ${e} not found`);if(!await this.getJsonData(e))throw new Error(`JSON data for map ${e} not found`);const s=await this.getTilesetImage(e);if(!s)throw new Error(`Tileset image for map ${e} not found`);let r=null;try{r=URL.createObjectURL(s)}catch(i){throw new Error(`Failed to create object URL for tileset image: ${i}`)}if(!r)throw new Error(`Tileset image URL for map ${e} could not be created.`);await this.chunkMap(e)}async getParsedJsonData(e){const t=await this.tileJsonData.get(e);if(t)return t.jsonContent;const a=await this.jsonFiles.get(e);if(!a)return o.error(`JSON file path for ${e} not found`),null;try{const r=(await P.get(a.jsonData)).data;return await this.tileJsonData.put({tilemapKey:e,jsonContent:r}),r}catch(s){return o.error(`Failed to fetch or parse JSON data for ${e}:`,s),null}}async addChunk(e,t,a,s,r){o.log(`Adding chunk for (${t}, ${a}) of ${e}`),o.log(`Chunk data: ${s}`),await this.chunks.put({tilemapKey:e,chunkX:t,chunkY:a,jsonData:s,imageData:r})}async getChunk(e,t,a){const s=await this.chunks.get([e,t,a]);return o.log(`Retrieved chunk for (${t}, ${a}) of ${e}: ${s}`),s}async removeChunk(e,t,a){await this.chunks.delete([e,t,a])}async removeChunks(e,t){const a=t.map(({chunkX:s,chunkY:r})=>this.removeChunk(e,s,r));await Promise.all(a)}async extractChunkJsonData(e,t,a,s){const r=await this.getParsedJsonData(e);if(!r)return o.error(`Parsed JSON data for map ${e} not found`),null;const i=t*s,n=a*s,l=Math.min(i+s,r.width),d=Math.min(n+s,r.height),p=[];for(let g=n;g<d;g++){const y=r.layers[0].data.slice(g*r.width+i,g*r.width+l);p.push(...y)}return{...r,width:l-i,height:d-n,layers:[{...r.layers[0],data:p}]}}async getMapDimensions(e){const t=await this.getParsedJsonData(e);if(!t){o.error(`Failed to retrieve JSON data for ${e}`);return}const a=t.width,s=t.height;if(a>0&&s>0)return{width:a,height:s};o.error(`Invalid JSON data for map ${e}`)}async chunkMap(e){const t=await this.getMapDimensions(e);if(!t){o.error(`Failed to retrieve dimensions for map ${e}`);return}const{width:a,height:s}=t,r=10,i=Math.ceil(a/r),n=Math.ceil(s/r);o.log(`Starting chunkMap for ${e}`);for(let l=0;l<i;l++)for(let d=0;d<n;d++){const p=await this.extractChunkJsonData(e,l,d,r);if(!p){o.error(`Failed to extract JSON data for chunk (${l}, ${d}) of ${e}`);continue}o.log(`Storing chunk (${l}, ${d}) for ${e}`),await this.addChunk(e,l,d,p)}o.log(`Finished chunkMap for ${e}`)}async loadChunkIntoScene(e,t,a,s){const r=await this.getChunk(t,a,s);if(!r){o.error(`Chunk data for (${a}, ${s}) not found`);return}const i=`${t}_${a}_${s}`;if(!await this.getMap(t)){o.error(`Map data not found for ${t}`);return}const l=r.jsonData.tilesets[0].name;if(!e.textures.exists(l)){const g=await this.getTilesetImage(t);if(g){const y=URL.createObjectURL(g);e.load.image(l,y),await new Promise(m=>e.load.once("complete",m)),e.load.start()}else{o.error(`Failed to load tileset image for ${l}`);return}}e.load.tilemapTiledJSON(i,r.jsonData),await new Promise(g=>e.load.once("complete",g)),e.load.start();const d=e.make.tilemap({key:i}),p=d.addTilesetImage(l);p?d.layers.forEach((g,y)=>{const m=d.createLayer(y,p,0,0);m?(m.setScale(this.scale),o.log(`Layer ${y} created for chunk (${a}, ${s}) with tileset ${l}.`)):o.error(`Layer ${y} could not be created for chunk (${a}, ${s}).`)}):o.error(`Tileset ${l} could not be added to tilemap.`)}removeChunkFromScene(e,t,a,s){const r=`${t}_${a}_${s}`,i=e.make.tilemap({key:r});i&&i.destroy(),e.cache.tilemap.remove(r)}async updateVisibleChunks(e,t,a,s,r){if(!await this.getMap(t)){console.error(`Map data for ${t} not found`);return}const n=this.tileWidth,l=this.tileHeight,d=this.chunkSize,p=Math.floor(a/(d*n)),g=Math.floor(s/(d*l)),y=new Set;for(let m=-r;m<=r;m++)for(let C=-r;C<=r;C++){const N=p+m,O=g+C,te=`${N},${O}`;N>=0&&O>=0&&(await this.loadChunkIntoScene(e,t,N,O),y.add(te))}for(const m of this.displayedChunks)if(!y.has(m)){const[C,N]=m.split(",").map(Number);this.removeChunkFromScene(e,t,C,N)}this.displayedChunks=y}async loadNewMap(e,t,a,s){o.log(`Loading map with key: ${t}`),this.resetMapSettings();const r=await this.getMap(t);if(!r)return o.error(`Map data not found for ${t}`),null;const i=Math.floor(a/(this.chunkWidth||1)),n=Math.floor(s/(this.chunkHeight||1)),l=await this.getChunk(t,i,n);if(!l)return o.error(`Chunk (${i}, ${n}) not found for ${t}`),null;const d=r.tilesetKey;if(!e.textures.exists(d)){const m=await this.getTilesetImage(t);if(m){const C=URL.createObjectURL(m);e.load.image(d,C),await new Promise(N=>{e.load.once("complete",N),e.load.start()})}else return o.error(`Failed to load tileset image for ${d}`),null}const p=`${t}_${i}_${n}`;e.load.tilemapTiledJSON(p,l.jsonData),await new Promise(m=>e.load.once("complete",m)),e.load.start();const g=e.make.tilemap({key:p});if(!g)return o.error(`Tilemap could not be created for chunk (${i}, ${n})`),null;const y=g.addTilesetImage(r.tilesetName,d);if(!y)return o.error(`Tileset ${d} could not be added to tilemap.`),null;for(let m=0;m<g.layers.length;m++){const C=g.createLayer(m,y,0,0);C?(C.setScale(r.scale||this.scale),o.log(`Layer ${m} created for initial chunk.`)):o.error(`Layer ${m} could not be created.`)}return g}}const Vt=new Gt,Xt=({text:c,speed:e=80,onComplete:t})=>{const[a,s]=ue.useState([]),r=ue.useRef([]);return ue.useEffect(()=>{let i,n=0;const l=c.split(/(<\/?span[^>]*>)/g).filter(Boolean),d=[];l.forEach((g,y)=>{if(g.startsWith("<span")||g.startsWith("</span")){const m=g.match(/<span class="([^"]*)">/);if(m){const C=m[1];d.push(Q.jsx("span",{className:C},`span-${y}`))}else d.push(Q.jsx("span",{},`span-${y}`))}else g.split("").forEach((m,C)=>{d.push(Q.jsx("span",{children:m},`char-${y}-${C}`))})}),n=0;const p=()=>{n<d.length?(r.current=[...r.current,d[n]],s([...r.current]),n++,i=window.setTimeout(p,e)):t&&t()};return r.current=[],s([]),p(),()=>{window.clearTimeout(i)}},[c,e,t]),Q.jsx("div",{children:a})};Dt.memo(Xt);class Yt extends fe{constructor(){super("NPCDatabase"),this.version(3).stores({npcs:"id,name",sprites:"id",avatars:"id",dialogues:"id"}),this.npcs=this.table("npcs"),this.sprites=this.table("sprites"),this.avatars=this.table("avatars"),this.dialogues=this.table("dialogues")}async addNPC(e){await this.npcs.put(e)}async getNPC(e){return await this.npcs.get(e)}async getNPCByName(e){return await this.npcs.where("name").equals(e).first()}async getAllNPCs(){return await this.npcs.toArray()}async exportNPCs(){const e=await this.getAllNPCs();return JSON.stringify(e,null,2)}async importNPCs(e){const t=JSON.parse(e);await this.npcs.bulkPut(t)}async fetchNPCData(e){try{return(await P.get(e)).data}catch(t){o.error(`Failed to fetch NPC data from ${e}:`,t);return}}async addSprite(e){await this.sprites.put(e)}async getSprite(e){return await this.sprites.get(e)}async getAllSprites(){return await this.sprites.toArray()}async addAvatar(e){await this.avatars.put(e)}async getAvatar(e){return await this.avatars.get(e)}async getAllAvatars(){return await this.avatars.toArray()}async urlToBlob(e){try{return(await P.get(e,{responseType:"blob"})).data}catch(t){o.error(`Failed to fetch blob from ${e}:`,t);return}}async addNewSprite(e,t){const a=await this.urlToBlob(e);if(a){const s={...t,spriteData:a};return await this.addSprite(s),s.id}}async addNewNPC(e,t,a){const s={...e,spriteImageId:t,avatarImageId:a};await this.addNPC(s)}async addNewAvatar(e,t){const a=await this.urlToBlob(e);if(a){const s={...t,avatarData:a};return await this.addAvatar(s),s.id}}async fetchAvatars(e){try{const a=(await P.get(e)).data.key;for(const s in a){const r=a[s];let i=await this.urlToBlob(r.avatarLocation);if(i||(i=await this.urlToBlob(`https://kbve.com${r.avatarLocation}`)),i){const n={id:r.id,avatarName:r.avatarName,avatarLocation:r.avatarLocation,avatarData:i,slug:r.slug};await this.addAvatar(n)}}}catch(t){o.error(`Failed to fetch avatars from ${e}:`,t)}}async fetchSprites(e){try{const a=(await P.get(e)).data.key;for(const s in a){const r=a[s];let i=await this.urlToBlob(r.assetLocation);if(i||(i=await this.urlToBlob(`https://kbve.com${r.assetLocation}`)),i){const n={id:r.id,spriteName:r.spriteName,assetLocation:r.assetLocation,frameWidth:r.frameWidth,frameHeight:r.frameHeight,scale:r.scale,slug:r.slug,spriteData:i};await this.addSprite(n)}}}catch(t){o.error(`Failed to fetch sprites from ${e}:`,t)}}async fetchNPCs(e){try{const a=(await P.get(e)).data.key;for(const s in a){const r=a[s],i={id:r.id,name:r.name,spriteKey:r.spriteKey,walkingAnimationMapping:r.walkingAnimationMapping,startPosition:r.startPosition,speed:r.speed,scale:r.scale,slug:r.slug,actions:r.actions,effects:r.effects,stats:r.stats,spriteImageId:r.spriteImageId,avatarImageId:r.avatarImageId,dialogues:r.dialogues||[]};await this.addNPC(i)}}catch(t){o.error(`Failed to fetch NPCs from ${e}:`,t)}}async initializeDatabase(e="https://kbve.com"){await this.fetchAvatars(`${e}/api/avatardb.json`),await this.fetchSprites(`${e}/api/spritedb.json`),await this.fetchNPCs(`${e}/api/npcdb.json`),await this.fetchDialogues(`${e}/api/dialogue.json`)}async loadNPC(e,t,a,s){try{o.log(`Loading NPC with name: ${t}`);const r=await this.getNPCByName(t);if(!r)throw new Error(`NPC with name ${t} not found`);o.log(`NPC Data: ${JSON.stringify(r)}`),await this.loadCharacter(e,r.id,a,s)}catch(r){r instanceof Error?o.error(`Failed to load NPC: ${r.message}`):o.error("Failed to load NPC:",r)}}async loadCharacter(e,t,a,s){try{o.log(`Loading NPC with ID: ${t}`);const r=await this.getNPC(t);if(!r)throw new Error(`NPC with ID ${t} not found`);o.log(`NPC Data: ${JSON.stringify(r)}`);const i=r.spriteKey;if(e.textures.exists(i))o.log(`Texture with key ${i} already loaded.`),this.addNPCToScene(e,r,a,s);else{o.log(`Texture with key ${i} not found, attempting to load.`);const n=await this.getSprite(r.spriteImageId);if(n&&n.spriteData){o.log(`Sprite Data: ${JSON.stringify(n)}`);const l=URL.createObjectURL(n.spriteData);e.load.spritesheet(i,l,{frameWidth:n.frameWidth,frameHeight:n.frameHeight}),e.load.once("complete",()=>{o.log(`Texture ${i} loaded successfully.`),this.addNPCToScene(e,r,a,s)}),e.load.start()}else throw new Error(`Sprite with ID ${r.spriteImageId} not found`)}}catch(r){r instanceof Error?o.error(`Failed to load NPC: ${r.message}`):o.error("Failed to load NPC:",r)}}addNPCToScene(e,t,a,s){try{o.log(`Adding NPC to scene: ${JSON.stringify(t)}`),o.log(`Using sprite key: ${t.spriteKey}`);const r=e.add.sprite(0,0,t.spriteKey);r.scale=t.scale||1.5,r.name=t.id||"Error Missing Name",o.log(`NPC Sprite created with texture key ${t.spriteKey} at position (${t.startPosition.x}, ${t.startPosition.y})`);const i={id:t.id,sprite:r,walkingAnimationMapping:t.walkingAnimationMapping,startPosition:{x:a??t.startPosition.x,y:s??t.startPosition.y},speed:t.speed};if(o.log(`Grid engine config: ${JSON.stringify(i)}`),!e.textures.exists(t.spriteKey))throw new Error(`Texture with key ${t.spriteKey} does not exist in the scene`);e.gridEngine.addCharacter(i),o.log(`NPC added to grid engine with ID ${t.id}`),((l,d,p)=>{const g=e.gridEngine.getPosition(l.name);o.log(`Attaching NPC events to ${d} at position: ${JSON.stringify(g)}`),Kt.attachNPCEvent(l,d,p,{coords:g})})(r,t.name,t.actions.map(l=>({label:l}))),o.log(`NPC ${t.name} added to scene successfully`)}catch(r){r instanceof Error?o.error(`Error adding NPC to scene from addNPCToScene: ${r.message}`):o.error("Error adding NPC to scene:",r)}}async addDialogue(e){await this.dialogues.put(e)}async getDialogue(e){return await this.dialogues.get(e)}async getAllDialogues(){return await this.dialogues.toArray()}async getDialoguesForNPC(e){const t=await this.getNPC(e);if(!t)throw new Error(`NPC with ID ${e} not found`);return(await Promise.all((t.dialogues||[]).map(s=>this.getDialogue(s.dialogueId)))).filter(s=>s!==void 0)}async markDialogueAsRead(e,t){const a=await this.getNPC(e);if(!a)throw new Error(`NPC with ID ${e} not found`);const s=a.dialogues?.find(r=>r.dialogueId===t);s&&(s.read=!0,await this.addNPC(a))}async fetchDialogues(e){try{const a=(await P.get(e)).data.key,s=Object.values(a).map(r=>({...r}));await this.dialogues.bulkPut(s)}catch(t){o.error(`Failed to fetch dialogues from ${e}:`,t)}}async getPrioritizedDialoguesForNPC(e){try{const t=await this.getNPC(e);if(!t)throw new Error(`NPC with ID ${e} not found`);const s=(await Promise.all((t.dialogues||[]).map(async r=>{const i=await this.getDialogue(r.dialogueId);return i?{...i,priority:r.priority,read:r.read}:null}))).filter(r=>r!==null);return s.sort((r,i)=>i.priority-r.priority),s}catch(t){return o.error(`Failed to get prioritized dialogues for NPC with ID ${e}:`,t),[]}}async getNPCNameById(e){return(await this.getNPC(e))?.name}async getNPCAvatarById(e){const t=await this.getNPC(e);if(t?.avatarImageId)return(await this.getAvatar(t.avatarImageId))?.avatarData}async getNPCSlugById(e){return(await this.getNPC(e))?.slug}async getNPCHealthById(e){try{return(await this.getNPC(e))?.stats?.health}catch(t){o.error(`Failed to get health for NPC with ID ${e}:`,t);return}}async getNPCManaById(e){try{return(await this.getNPC(e))?.stats?.mana}catch(t){o.error(`Failed to get mana for NPC with ID ${e}:`,t);return}}async createNPCSession(e,t){try{const a=this.getNPCNameById(t),s=this.getNPCSlugById(t),r=this.getNPCAvatarById(t),i=this.getNPCHealthById(t),n=this.getNPCManaById(t),[l,d,p,g,y]=await Promise.all([a,s,r,i,n]),m={...e.get(),[`${t}_name`]:l||"Unknown",[`${t}_slug`]:d||"Unknown",[`${t}_avatar`]:p?URL.createObjectURL(p):"Unknown",[`${t}_health`]:g||"100",[`${t}_mana`]:y||"100"};e.set(m)}catch{const s={...e.get(),[`${t}_name`]:"Unknown",[`${t}_slug`]:"Unknown",[`${t}_avatar`]:"Unknown",[`${t}_hp`]:"100",[`${t}_mana`]:"100"};e.set(s)}}async getNPCDialogueOptionsByULID(e){try{const t=await this.getDialogue(e);if(!t||!t.options)return"[]";const a=await Promise.all(t.options.map(async s=>this.getDialogue(s)));return JSON.stringify(a.filter(s=>s!==void 0))}catch(t){return o.error(`Failed to get dialogue options for ID ${e}:`,t),"[]"}}async getAllDialogueOptions(e){const t=[],a=new Set,s=async r=>{if(a.has(r))return;a.add(r);const i=await this.getDialogue(r);if(i&&(t.push(i),i.options&&i.options.length>0))for(const n of i.options)await s(n)};return await s(e),t}async createDialogueSession(e,t){try{const a=await this.getNPCDialogueOptionsByULID(t),s={...e.get(),[`${t}_options`]:a||"[]"};e.set(s)}catch{const s={...e.get(),[`${t}_options`]:"[]"};e.set(s)}}}const Qt=new Yt;class Zt{constructor(){this.actionHandlers={talk:this.talkToNPC.bind(this),quest:this.questWithNPC.bind(this),trade:this.tradeWithNPC.bind(this),combat:this.startCombat.bind(this),heal:this.healNPC.bind(this),steal:this.stealFromNPC.bind(this),lore:this.loreFromNPC.bind(this)}}getActionHandler(e){return this.actionHandlers[e]}loreFromNPC(e){o.log(`Pulling up the lore of the NPC with ID: ${e.npcId}`)}questWithNPC(e){o.log(`Starting quest with NPC with ID: ${e.npcId}`)}healNPC(e){o.log(`Healing NPC with ID: ${e.npcId}`)}oathFromNPC(e){o.log(`Oath from NPC with ID: ${e.npcId}`)}async talkToNPC(e){try{o.log(`Talking to NPC with ID: ${e.npcId}`);const t=await Qt.getPrioritizedDialoguesForNPC(e.npcId);if(o.log(t),t.length>0){const a=t[0];I.emit("npcDialogue",{npcId:e.npcId,dialogue:a},1e3)}else o.log("No dialogues available for this NPC.")}catch(t){o.error(`Failed to fetch dialogues for NPC with ID ${e.npcId}:`,t)}}tradeWithNPC(e){o.log(`Trading with NPC with ID: ${e.npcId}`)}moveToNPC(e){const a=e.data?.coords||{x:10,y:15};I.emit("playerMove",a)}stealFromNPC(e){o.log(`Attempting to steal from NPC with ID: ${e.npcId}`);const t={npcId:e.npcId,npcName:e.npcName,data:e.data};I.emit("playerSteal",t)}startCombat(e){o.log(`Starting combat with NPC with ID: ${e.npcId}`)}checkFish(e){o.log(`Checking fish for NPC with ID: ${e.npcId}`)}attachNPCEvent(e,t,a,s){e.setInteractive(),e.on("pointerover",r=>{const i={npcId:e.name||"",npcName:t,actions:a.map(n=>n.label),data:s||{},coords:{x:r.x,y:r.y}};I.emit("npcInteraction",i),e.setTint(65280)}),e.on("pointerout",()=>{e.clearTint()}),e.on("pointerdown",r=>{const i={npcId:e.name||"",npcName:t,actions:a.map(n=>n.label),data:s||{},coords:{x:r.x,y:r.y}};o.log(`Click Registered at X: ${i.coords.x} Y: ${i.coords.y}`),I.emit("npcInteractionClick",i,1e3)})}}const Kt=new Zt;var ea=kt("<script async defer><\/script><!---->",1),ta=U('<div class="max-w-xs bg-white border border-gray-200 rounded-xl shadow-lg dark:bg-neutral-800 dark:border-neutral-700 z-100" role="alert" tabindex="-1" aria-labelledby="hs-toast-normal-example-label"><div class="flex p-4"><div class="shrink-0"><svg class="shrink-0 size-4 text-blue-500 mt-0.5" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16"><path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"></path></svg></div> <div class="ms-3"><p id="hs-toast-normal-example-label" class="text-sm text-gray-700 dark:text-neutral-400">Processing...</p></div></div></div>'),aa=U('<div class="max-w-xs bg-white border border-gray-200 rounded-xl shadow-lg dark:bg-neutral-800 dark:border-neutral-700 z-100" role="alert" tabindex="-1" aria-labelledby="hs-toast-error-example-label"><div class="flex p-4"><div class="shrink-0"><svg class="shrink-0 size-4 text-red-500 mt-0.5" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z"></path></svg></div> <div class="ms-3"><p id="hs-toast-error-example-label" class="text-sm text-gray-700 dark:text-neutral-400"> </p></div></div></div>'),ra=U('<div class="flex"><span class="text-lg text-cyan-600 dark:text-cyan-300"> </span></div>'),sa=U('<div class="inline-flex items-center"><span class="relative flex h-3 w-3"><span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-red-400 opacity-75"></span> <span class="relative inline-flex rounded-full h-3 w-3 bg-red-500"></span></span> <div class="px-2 text-gray-600 dark:text-neutral-400 text-wrap w-1/2"> </div></div>'),ia=U('<div class="inline-flex items-center"><span class="relative flex h-3 w-3"><span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-cyan-400 opacity-75"></span> <span class="relative inline-flex rounded-full h-3 w-3 bg-cyan-500"></span></span> <span class="px-2 text-gray-600 dark:text-neutral-400 font-bold">Online</span></div>'),oa=U('<div><div class="py-16 opacity-0 transition-opacity duration-500" id="formulation_form"><div class="px-16 flex flex-row justify-center items-center lg:justify-between"><div class="relative"><h3 class="text-blue-400 mb-1">Sign up</h3> <h1 class="page-title text-white font-bold text-3xl mb-5 lg:text-3xl xl:text-4xl 2xl:text-5xl">KBVE Authentication Portal</h1> <!> <!> <!> <form id="registerForm" class="opacity-0 transition-opacity duration-500" action="#"><div class="grid gap-y-2 md:gap-y-4"><div><label for="login-username" class="mb-1 block text-xs text-left md:text-sm md:mb-2 text-neutral-800 dark:text-neutral-200">Username</label> <div><input type="text" id="register-username" name="username" autocomplete="username" class="block w-full h-4 md:h-12 rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:focus:ring-1" required aria-describedby="register-username"></div></div> <div><label for="register-email" class="mb-1 block text-xs text-left md:text-sm md:mb-2 text-neutral-800 dark:text-neutral-200">Email Address</label> <div><input type="email" id="register-email" name="email" autocomplete="email" class="block w-full h-4 md:h-12 rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:focus:ring-1" required aria-describedby="register-email"></div></div> <div><div class="flex items-center justify-between"><label for="register-password" class="mb-1 block text-xs md:text-sm md:mb-2 text-neutral-800 dark:text-neutral-200">Password</label></div> <div><input type="password" id="register-password" name="password" class="block w-full h-4 md:h-12 rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:focus:ring-1" required aria-describedby="register-password"></div></div> <div><div class="flex items-center justify-between"><label for="confirm-register-password" class="mb-1 block text-xs md:text-sm md:mb-2 text-neutral-800 dark:text-neutral-200">Confirm Password</label></div> <div><input type="password" id="confirm-register-password" name="password" class="block w-full h-4 md:h-12 rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:focus:ring-1" required aria-describedby="confirm-register-password"></div></div> <div><div class="flex justify-center scale-75 md:scale-100"></div></div> <button type="submit"> </button></div></form></div> <div class="flex flex-col w-1/2"><div><!></div> <dotlottie-player></dotlottie-player></div></div></div></div>',2);function ya(c,e){dt(e,!1);const t=ut(),a=()=>{_(d,!1),$(f,h(f).successful_message=""),h(n)&&h(l)&&h(g)&&hcaptcha.reset(h(g))},s=u=>{if(h(n)&&h(l)&&h(g))return hcaptcha.execute(h(g),u)};async function r(){if(_(d,!0),y=await R.createActionULID("registerUser"),!y){$(f,h(f).svelte_internal_message="Failed to create action!"),a();return}try{const u=await R.registerUser(h(f).email,h(f).password,h(f).confirm,y,h(f).username,h(f).captchaToken);if(u){$(f,h(f).successful_message=`Welcome, ${u.username||u.email}! Registration successful. Redirecting in 2 Seconds`),console.log("User registered and profile saved:",u);const w=await R.getSession();w?(console.log("User is already logged in after registration:",w),setTimeout(()=>{window.location.href="/dashboard"},1500)):setTimeout(()=>{window.location.href="/login"},1500);return}await i(y)}catch(u){console.error("Registration failed:",u),await i(y)}finally{_(d,!1)}}async function i(u){const w=await R.getErrorByActionId(u);w?$(f,h(f).svelte_internal_message=w):$(f,h(f).svelte_internal_message="An unexpected error occurred. Please try again.");const x=await R.getDetailedErrorByActionId(u);x?_(m,x):$(f,h(f).svelte_internal_message="An unexpected error occurred. Please try again.")}let n=A(!1),l=A(!1),d=A(!1),p="/robot.lottie",g=A(),y,m=A(),C=T(e,"hl",8,""),N=T(e,"sitekey",24,()=>Z.get().hcaptcha),O=T(e,"apihost",24,()=>Z.get().hcaptcha_api),te=T(e,"reCaptchaCompat",8,!0),pe=T(e,"theme",24,()=>ze.DARK),me=T(e,"size",8,"compact"),f=A({email:"",password:"",confirm:"",username:"",captchaToken:"",svelte_internal_message:"",successful_message:""});const Ge=new URLSearchParams({recaptchacompat:te()?"on":"off",onload:"hcaptchaOnLoad",render:"explicit"}),Ve=`${O()}?${Ge.toString()}`,we=Math.floor(Math.random()*100),Xe="inline-flex w-full items-center justify-center gap-x-2 rounded-lg px-4 py-1 text-sm font-normal text-blue-400 focus-visible:ring outline-none transition duration-300 py-3",Ye="border border-transparent",Qe="bg-blue-100 dark:focus:outline-none",Ze="hover:bg-blue-400 hover:text-white",Ke="2xl:text-base",et="disabled:pointer-events-none disabled:opacity-50 disabled:animate-pulse",tt="ring-zinc-500 dark:ring-zinc-200";ht(()=>{qt({elementIdOrName:"skeleton_login_loader",duration:500}),document.getElementById("astro_error_message")&&document.getElementById("astro_error_message");const u=document.getElementById("formulation_form");u&&setTimeout(()=>{u.classList.replace("opacity-0","opacity-100")},200);const w=document.getElementById("registerForm");w&&setTimeout(()=>{w.classList.replace("opacity-0","opacity-100")},500),window.hcaptchaOnLoad=()=>{t("load"),_(l,!0)},window.onSuccess=x=>{t("success",{token:x}),$(f,h(f).captchaToken=x)},window.onError=()=>{t("error")},window.onClose=()=>{t("close")},window.onExpired=()=>{t("expired"),a()},t("mount"),_(n,!0)}),gt(()=>{window.hcaptchaOnLoad=null,window.onSuccess=null,h(l)&&(hcaptcha=null)}),ft(()=>(h(n),h(l),X(N()),X(C()),X(pe()),X(me())),()=>{h(n)&&h(l)&&_(g,hcaptcha.render(`h-captcha-${we}`,{sitekey:N(),hl:C(),theme:pe(),callback:"onSuccess","error-callback":"onError","close-callback":"onClose","expired-callback":"onExpired",size:me()}))}),pt(),mt();var ae=oa();wt(u=>{var w=vt(),x=Ue(w);{var D=M=>{var W=ea(),Te=Ue(W);Ae(Te,"src",Ve),k(Te),S(M,W)};j(x,M=>{h(n)&&!window?.hcaptcha&&M(D)})}S(u,w)});var ye=b(ae),be=b(ye),re=b(be),ve=k(b(re),4);{var at=u=>{var w=ta();S(u,w)};j(ve,u=>{h(d)&&u(at)})}var ke=k(ve,2);{var rt=u=>{var w=aa(),x=b(w),D=k(b(x),2),M=b(D),W=b(M,!0);v(M),v(D),v(x),v(w),q(()=>Y(W,h(f).svelte_internal_message)),S(u,w)};j(ke,u=>{h(f).svelte_internal_message&&u(rt)})}var Ce=k(ke,2);{var st=u=>{var w=ra(),x=b(w),D=b(x,!0);v(x),v(w),q(()=>Y(D,h(f).successful_message)),S(u,w)};j(Ce,u=>{h(f).successful_message&&u(st)})}var se=k(Ce,2),xe=b(se),ie=b(xe),Pe=k(b(ie),2),$e=b(Pe);V($e),v(Pe),v(ie);var oe=k(ie,2),Ne=k(b(oe),2),De=b(Ne);V(De),v(Ne),v(oe);var ne=k(oe,2),Se=k(b(ne),2),_e=b(Se);V(_e),v(Se),v(ne);var le=k(ne,2),Ie=k(b(le),2),Ee=b(Ie);V(Ee),v(Ie),v(le);var ce=k(le,2),it=b(ce);Ae(it,"id",`h-captcha-${we??""}`),v(ce);var z=k(ce,2);Le(z,1,`${Xe} ${Ye} ${Qe} ${Ze} ${Ke} ${et} ${tt}`);var ot=b(z,!0);v(z),v(xe),v(se),v(re);var Me=k(re,2),de=b(Me),nt=b(de);{var lt=u=>{var w=sa(),x=k(b(w),2),D=b(x,!0);v(x),v(w),q(()=>Y(D,h(m))),S(u,w)},ct=u=>{var w=ia();S(u,w)};j(nt,u=>{h(m)?u(lt):u(ct,!1)})}v(de);var J=k(de,2);return H(J,"autoplay",!0),H(J,"loop",!0),Le(J,1,"hidden md:block md:w-full"),H(J,"mode","normal"),H(J,"src",`/assets/lottie/${p}`),v(Me),v(be),v(ye),v(ae),q(()=>{z.disabled=h(d),Y(ot,h(d)?"Loading...":"Register")}),G($e,()=>h(f).username,u=>$(f,h(f).username=u)),G(De,()=>h(f).email,u=>$(f,h(f).email=u)),G(_e,()=>h(f).password,u=>$(f,h(f).password=u)),G(Ee,()=>h(f).confirm,u=>$(f,h(f).confirm=u)),yt("submit",se,Ct(r)),S(c,ae),Fe(e,"reset",a),Fe(e,"execute",s),bt({reset:a,execute:s})}export{ya as default};

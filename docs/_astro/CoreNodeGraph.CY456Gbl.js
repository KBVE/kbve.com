import{r as n,j as m}from"./react.B0RgU8Fg.js";import{F as y}from"./react-force-graph.B818MVFZ.js";import{_ as x}from"./three-spritetext.Cu5PAKeV.js";import{M as E,S as g,r as v}from"./three.BmISNF3o.js";import"./@react-three.Bml1aeim.js";import"./react-kapsule.cjRTQ84L.js";import"./jerrypick.DDjEeYr6.js";import"./fromentries.DQVbdcFB.js";import"./3d-force-graph-vr.lI1rlQ6c.js";import"./aframe.BVIjjjny.js";import"./aframe-extras.DwphVpNJ.js";import"./nipplejs.BxsX8Mt3.js";import"./three-pathfinding.60XH8Z3b.js";import"./aframe-forcegraph-component.CmMQYgHg.js";import"./accessor-fn.BEAtfK8m.js";import"./three-forcegraph.DnsPBDOr.js";import"./ngraph.graph.D6QOLE3I.js";import"./ngraph.events.C8F6FHEm.js";import"./ngraph.forcelayout.CkYEINU5.js";import"./ngraph.merge.B9WtB87t.js";import"./ngraph.random.CzRKCPxx.js";import"./kapsule.DoQQNCoE.js";import"./lodash-es.BFDc8I3u.js";import"./data-joint.qYY_m3_J.js";import"./index-array-by.D2QHmuxS.js";import"./tinycolor2.Begke6kS.js";import"./d3-scale.Btia-9_0.js";import"./internmap.BkD7Hj8s.js";import"./d3-scale-chromatic.BvAsqZ2o.js";import"./d3-array.tv6RD-6E.js";import"./d3-force-3d.CDnzDXUk.js";import"./d3-timer.DdKHrDhs.js";import"./d3-dispatch.kxCwF96_.js";import"./d3-binarytree.e94m1gdS.js";import"./d3-quadtree.CSANTnla.js";import"./d3-octree.CZ7m1I_d.js";import"./polished.DFtQKwmJ.js";import"./@babel.BrYEllKx.js";import"./prop-types.DzZGHoWW.js";import"./3d-force-graph-ar.DqDtY0jR.js";import"./3d-force-graph.CdSpivvC.js";import"./three-render-objects.CihVJqQm.js";import"./@tweenjs.DzUI1d4L.js";import"./force-graph.DWia1CyV.js";import"./d3-zoom.14w1ANg5.js";import"./d3-transition.BipLP9ld.js";import"./d3-interpolate.SIV6RuuQ.js";import"./d3-color.9lF95FHy.js";import"./d3-selection.DSeOx27A.js";import"./d3-ease.DRPgKoYJ.js";import"./d3-drag.DP3CZ3aB.js";import"./canvas-color-tracker.BPG-3Xnv.js";import"./bezier-js.4W2y2lww.js";function vt(){const[h,d]=n.useState({nodes:[],links:[]}),s=n.useRef(null),i=n.useRef(null),[l,u]=n.useState({width:window.innerWidth,height:window.innerHeight});n.useEffect(()=>{fetch("/api/graph.json").then(t=>t.json()).then(t=>{const e=w(t.nodes),r=t.links;d({nodes:e,links:r})}).catch(t=>console.error("Error fetching graph data:",t))},[]);const f=t=>{t.id?window.open(`/${t.id}`,"_blank"):console.log("No URL provided for this node")};n.useEffect(()=>{const t=()=>{s.current&&u({width:s.current.offsetWidth,height:s.current.offsetHeight})};return window.addEventListener("resize",t),t(),()=>{window.removeEventListener("resize",t)}},[s.current]);function w(t){let e={};return t.forEach(r=>{r.tags.forEach(o=>{e[o]||(e[o]={x:0,y:0,z:0,count:0}),e[o].x+=Math.random()*100,e[o].y+=Math.random()*100,e[o].z+=Math.random()*100,e[o].count++})}),Object.keys(e).forEach(r=>{e[r].x/=e[r].count,e[r].y/=e[r].count,e[r].z/=e[r].count}),t.forEach(r=>{let o=0,c=0,a=0;r.tags.forEach(p=>{o+=e[p].x,c+=e[p].y,a+=e[p].z}),r.x=o/r.tags.length,r.y=c/r.tags.length,r.z=a/r.tags.length}),t}return m.jsxs("div",{ref:s,className:"w-full h-100vh overflow-hidden overscroll-contain relative",id:"nodegraph",children:[m.jsx(y,{graphData:h,width:l.width,height:l.height,nodeAutoColorBy:"group",linkColor:t=>t.type==="url"?"blue":"red",linkWidth:t=>t.type==="url"?2:1,linkDirectionalParticles:t=>t.type==="url"?2:0,nodeThreeObject:t=>{const e=new E(new g(5),new v({color:t.color})),r=new x(t.name);return r.color="white",r.textHeight=8,r.material.depthWrite=!1,r.material.transparent=!0,r.position.set(0,0,12),e.add(r),e},onNodeClick:f,onNodeHover:t=>{t?(i.current.style.display="block",i.current.style.left=`${t.x}px`,i.current.style.top=`${t.y}px`,i.current.innerHTML=t.description):i.current.style.display="none"}}),m.jsx("div",{ref:i,className:"absolute bg-white p-2 rounded shadow-md hidden",style:{transform:"translate(-50%, -50%)",pointerEvents:"none"},children:"Tooltip"})]})}export{vt as default};

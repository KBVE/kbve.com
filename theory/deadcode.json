{"entry":{"id":"deadcode/deadcode.mdx","slug":"deadcode","body":"\nimport MDXLayer from \"@l/MDXLayer.astro\";\nimport Widget from \"@w/Widget.astro\";\nimport MDXJS from \"@w/MDXJS.astro\";\nimport VideoComponent from \"@c/Element/Video/Video.astro\";\n\n\n<MDXLayer title={frontmatter.title} description={frontmatter.description}>\n\n\n<Widget img={frontmatter.img} skeleton={false}>\n\n\n<VideoComponent iframe src=\"yt\" id=\"8Ab3ArE8W3s\" description=\"Jack Rusher breaks down different fundamental flaws that newer programming languages are carrying over from older languages.\" />\n\n\n<MDXJS transparent={true}>\n\n## Videos\n\n    - ## Stop Writing Dead Programs by Jack Rusher\n        - A brilliant presentation from Jack Rusher at the Strange Loop 2022 on an area of `deadcode`.\n        - \n\n\n## Information\n\nDeadcode is a theory-craft that disintegrates, analyzes and abstracts information from archived codes, libraries, frameworks and applications. There are multiple areas within the `deadcode` but the objective would be to help understand, learn and grow from the vast amount of old code.\n\n## History\n\nWe want to keep an archive of old / deprecated software scripts/libraries as a reference material for future programmers, hackers and researchers. As more and more codebases are fading out or being replaced, it might be wise to keep records of important functions and modules as an educational source of information.\n\n</MDXJS>\n\n</Widget>\n\n</MDXLayer>","collection":"theory","data":{"title":"DeadCode","description":"DeadCode is a theory that focuses on learning from archived code.","tags":["deadcode","theory"],"author":"KBVE Team","img":"https://images.unsplash.com/photo-1476370648495-3533f64427a2?fit=crop&w=1400&h=700&q=75"}}}